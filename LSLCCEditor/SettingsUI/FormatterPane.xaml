<UserControl x:Class="LSLCCEditor.SettingsUI.FormatterPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:LSLCCEditor.Utility.Converters;assembly=LSLCCEditor.Utility"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             d:DesignHeight="900" d:DesignWidth="900" Name="_this" Padding="5">
    <Grid DataContext="{Binding ElementName=_this}">
        <Grid.Resources>
            <ResourceDictionary Source="SettingsUiResources.xaml" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="Height" Value="27" />
                        <Setter Property="Margin" Value="10,0,10,7" />
                        <Setter Property="Padding" Value="15,0,15,0" />
                    </Style>
                    <converters:IntegerGreaterThanToBoolConverter GreaterThan="1" x:Key="IntegerGreaterThanOne" />
                </StackPanel.Resources>
                <Button Click="New_OnClick">New</Button>
                <Button Click="Rename_OnClick">Rename</Button>
                <Button Click="Delete_OnClick"
                        IsEnabled="{Binding Path=FormatterConfigurationNames.Count, 
                    Converter={StaticResource IntegerGreaterThanOne}}">
                    Delete
                </Button>
                <Button Click="Import_OnClick">Import</Button>
                <Button Click="Export_OnClick">Export</Button>
            </StackPanel>
        </Grid>


        <StackPanel Grid.Column="1">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ExpanderStyle}" />
                <Style TargetType="xctk:IntegerUpDown" x:Key="IntegerUpDownStyle">
                    <Setter Property="Width" Value="70" />
                    <Setter Property="Minimum" Value="0" />
                    <Setter Property="Maximum" Value="1000" />
                    <Setter Property="ClipValueToMinMax" Value="True" />
                    <Setter Property="Margin" Value="0,0,10,0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="StackPanel" x:Key="StackPanelStyle">
                    <Setter Property="Orientation" Value="Horizontal" />
                    <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                    <Setter Property="Margin" Value="0,0,0,10"/>
                </Style>
                <ResourceDictionary x:Key="ItemsControlStyles">
                    <Style TargetType="StackPanel" BasedOn="{StaticResource StackPanelStyle}"/>
                    <Style TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource IntegerUpDownStyle}"/>
                    <Style TargetType="CheckBox">
                        <Setter Property="FlowDirection" Value="RightToLeft"></Setter>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </ResourceDictionary>
                <Style TargetType="ItemsControl">
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Style>

            </StackPanel.Resources>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                <Label Target="{Binding ElementName=FormatterConfigurationCombobox}">Current Configuration:</Label>
                <ComboBox Name="FormatterConfigurationNameCombobox"
                          DataContext="{Binding ElementName=_this}"
                          ItemsSource="{Binding Path=FormatterConfigurationNames, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Path=SelectedFormatterConfigurationName, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            <Expander Header="Braceless Control Statements" MinWidth="400" >
                <CheckBox IsChecked="{Binding CurrentFormatterSettings.IndentBracelessControlStatements}" Margin="10" FlowDirection="RightToLeft">
                    :Indent Braceless Control Statements</CheckBox>
            </Expander>
            <Expander Header="Spaces Before Opening Braces"  MinWidth="400" >
                <ItemsControl Padding="0,10,10,0">

                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <StaticResource ResourceKey="ItemsControlStyles"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ItemsControl.Resources>

                    <StackPanel>
                        <Label>Functions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningFunctionBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.FunctionBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>States:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningStateBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.StateBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Events:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningEventBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.EventBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>For Loops:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningForBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.ForLoopBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>While Loops:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningWhileLoopBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.WhileLoopBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Do Loops:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningDoLoopBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.DoLoopBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>If Statements:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningIfBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.IfStatementBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Else If Statements:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningElseIfBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.ElseIfStatementBracesOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Else Statements:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeOpeningElseBrace}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.ElseStatementOnNewLine}">:Newline</CheckBox>
                    </StackPanel>
                </ItemsControl>
            </Expander>
            <Expander Header="Spaces Before Closing Braces"  DataContext="{Binding ElementName=_this}" MinWidth="400">
                <ItemsControl Padding="0,10,0,0">
                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <StaticResource ResourceKey="ItemsControlStyles"/>

                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ItemsControl.Resources>
                    <StackPanel>
                        <Label>Functions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingFunctionBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>States:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingStateBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Events:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingEventBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>For Loops:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingForBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>While Loops:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingWhileLoopBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Do Loops:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingDoLoopBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>If Statements:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingIfBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Else If Statements:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingElseIfBrace}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Else Statements:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.SpacesBeforeClosingElseBrace}" />
                    </StackPanel>
                </ItemsControl>
            </Expander>
            <Expander Header="Maximum Code Spacing" DataContext="{Binding ElementName=_this}" MinWidth="400">
                <ItemsControl Padding="0,10,0,0">
                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <StaticResource ResourceKey="ItemsControlStyles"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ItemsControl.Resources>
                    <StackPanel>
                        <Label>Max Newlines At Beginning Of State Scope:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MaximumNewLinesAtBeginingOfStateScope}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Max Newlines At Beginning Of Code Scope:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MaximumNewLinesAtBeginingOfCodeScope}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Max Newlines At End Of State Scope:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MaximumNewLinesAtEndOfStateScope}" />
                    </StackPanel>
                    <StackPanel>
                        <Label>Max Newlines At End Of Code Scope:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding Path=CurrentFormatterSettings.MaximumNewLinesAtEndOfCodeScope}" />
                    </StackPanel>
                </ItemsControl>
            </Expander>
            <Expander Header="Expression Wrapping" DataContext="{Binding ElementName=_this}" MinWidth="400" >
                <ItemsControl Padding="0,10,10,0">
                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <StaticResource ResourceKey="ItemsControlStyles"/>
                                <ResourceDictionary>
                                    <Style TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource IntegerUpDownStyle}">
                                        <Setter Property="IsEnabled" 
                                                Value="{Binding RelativeSource={RelativeSource AncestorType=StackPanel, Mode=FindAncestor}, Path=Children[4].IsChecked}"></Setter>

                                    </Style>
                                </ResourceDictionary>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ItemsControl.Resources>
                    <StackPanel>
                        <Label>Declaration Expression - Min Expressions:</Label>
                        <xctk:IntegerUpDown 
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInDeclarationToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeDeclarationExpressionWrap}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.DeclarationExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Expression Statement - Min Expressions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInStatementToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeStatementExpressionWrap}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.StatementExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>If Condition - Min Expressions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInIfToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeIfExpressionWrap}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.IfExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Else If Condition - Min Expressions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInElseIfToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeElseIfExpressionWrap}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.ElseIfExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>While Condition - Min Expressions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInWhileToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown  Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeWhileExpressionWrap}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.WhileExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Do While Condition - Min Expressions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInDoWhileToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeDoWhileExpressionWrap}" />
                        <CheckBox  IsChecked="{Binding Path=CurrentFormatterSettings.DoWhileExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                    <StackPanel>
                        <Label>Return Expression - Min Expressions:</Label>
                        <xctk:IntegerUpDown
                            Value="{Binding  Path=CurrentFormatterSettings.MinimumExpressionsInReturnToWrap}" />
                        <Label>Max Columns:</Label>
                        <xctk:IntegerUpDown Maximum="10000"
                            Value="{Binding  Path=CurrentFormatterSettings.ColumnsBeforeReturnExpressionWrap}" />
                        <CheckBox   IsChecked="{Binding Path=CurrentFormatterSettings.ReturnExpressionWrapping}">:Wrap</CheckBox>
                    </StackPanel>
                </ItemsControl>
            </Expander>
            <Expander Header="Minimum Code Spacing" DataContext="{Binding ElementName=_this}" MinWidth="400">
                <ItemsControl Padding="0,10,0,0">
                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <StaticResource ResourceKey="ItemsControlStyles"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ItemsControl.Resources>
                    <StackPanel>
                        <Label Content="Min Newlines Between Distinct Statements:"/>
                        <xctk:IntegerUpDown
            				Value="{Binding CurrentFormatterSettings.MinimumNewLinesBetweenDistinctStatements}" />
                    </StackPanel>
                    <StackPanel>
                        <Label Content="Min Newlines Between Event And Following Comment:"/>
                        <xctk:IntegerUpDown
            				Value="{Binding CurrentFormatterSettings.MinimumNewLinesBetweenEventAndFollowingComment}" />
                    </StackPanel>
                    <StackPanel>
                        <Label Content="Min Newlines Between Event Handlers:"/>
                        <xctk:IntegerUpDown
            				Value="{Binding CurrentFormatterSettings.MinimumNewLinesBetweenEventHandlers}" />
                    </StackPanel>
                </ItemsControl>
            </Expander>
        </StackPanel>
    </Grid>
</UserControl>
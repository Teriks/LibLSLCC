<UserControl x:Class="LSLCCEditor.SettingsUI.CompilerPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:LSLCCEditor.Utility.Converters;assembly=LSLCCEditor.Utility"
             xmlns:cSharp="clr-namespace:LibLSLCC.CSharp;assembly=LibLSLCC"
             xmlns:wpf="clr-namespace:LSLCCEditor.Utility.Wpf;assembly=LSLCCEditor.Utility"
             xmlns:compilers="clr-namespace:LibLSLCC.Compilers;assembly=LibLSLCC"
             mc:Ignorable="d" Name="_this" MinWidth="500" Padding="5"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="SettingsUiResources.xaml" />
                </ResourceDictionary.MergedDictionaries>
                <converters:BooleanToVisibilityConverter x:Key="TrueToCollapsedConverter" False="Visible" True="Collapsed"/>
                <converters:MultiBooleanConverter x:Key="MultiBooleanAndConverter" And="True"/>
                <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            </ResourceDictionary>
        </Grid.Resources>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="Height" Value="27" />
                        <Setter Property="Margin" Value="10,0,10,7" />
                        <Setter Property="Padding" Value="15,0,15,0" />
                    </Style>
                    <converters:IntegerGreaterThanToBoolConverter GreaterThan="1" x:Key="IntegerGreaterThanOne" />
                </StackPanel.Resources>
                <Button Click="New_OnClick">New</Button>
                <Button Click="CopyConfiguration_OnClick">Copy</Button>
                <Button Click="Rename_OnClick" IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}">Rename</Button>
                <Button Click="Save_OnClick" IsEnabled="{Binding ElementName=_this, Path=CurrentConfigIsEdited}">Save</Button>
                <Button Click="Revert_OnClick" IsEnabled="{Binding ElementName=_this, Path=CurrentConfigIsEdited}">Revert</Button>
                <Button Click="Delete_OnClick">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiBooleanAndConverter}">
                            <Binding ElementName="_this" Path="CompilerConfigurationNames.Count" Converter="{StaticResource IntegerGreaterThanOne}"/>
                            <Binding ElementName="_this" Path="CanEditCurrentConfiguration"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                    Delete
                </Button>
                <Button Click="Import_OnClick" IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}">
                    Import
                </Button>
                <Button Click="Export_OnClick">
                    Export
                </Button>
            </StackPanel>
        </Grid>
        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="0,0,0,15">

            <StackPanel.Resources>
                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Setter Property="Margin" Value="9,5,0,5" />
                </Style>
                <Style TargetType="{x:Type Grid}" >
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ExpanderStyle}" />
                
                <Style TargetType="ItemsControl" BasedOn="{StaticResource {x:Type ItemsControl}}">
                    <Setter Property="BorderBrush" Value="DarkGray" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Padding" Value="0,5,10,5"/>
                </Style>
            </StackPanel.Resources>

            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                <Label Target="{Binding ElementName=CompilerConfigurationCombobox}">Configuration:</Label>
                <ComboBox Name="CompilerConfigurationCombobox"
                          DataContext="{Binding ElementName=_this}"
                          ItemsSource="{Binding Path=CompilerConfigurationNames, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Path=SelectedCompilerConfigurationName, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock VerticalAlignment="Center" Margin="10,0,0,0" Foreground="Red" ToolTip="This configuration cannot be edited."
                           Visibility="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource TrueToCollapsedConverter}}">readonly</TextBlock>
            </StackPanel>
            


            <CheckBox DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}" IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                      Checked="InsertCoOpTerminationCalls_Checked" Unchecked="InsertCoOpTerminationCalls_Unchecked"
                      IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.InsertCoOpTerminationCalls, UpdateSourceTrigger=PropertyChanged}">
                Insert Co-Op Termination Calls
            </CheckBox>


            <Expander Header="Co-Op Termination Options" Name="CoOpTerminationOptionsExpander" IsEnabled="False">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>


                    </Grid.Resources>

                    <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=CoOpTerminationFunctionName}">Function Call:</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Name="CoOpTerminationFunctionName" 
                             IsReadOnly="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource InverseBooleanConverter}}"
                             DataContext="{Binding ElementName=_this}"
                             Text="{Binding Path=CoOpTerminationFunctionCall, TargetNullValue ='', ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             Width="Auto">
                        <wpf:TextboxHint.Hint>
                            <TextBlock Padding="2,6,0,0" Text="{Binding Source={x:Static compilers:LSLOpenSimCompilerSettings.DefaultCoOpTerminationFunctionCall}}"/>
                        </wpf:TextboxHint.Hint>
                    </TextBox>
                </Grid>
            </Expander>


            <CheckBox
                IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GenerateClass, UpdateSourceTrigger=PropertyChanged}"
                Unchecked="GenerateClass_OnUnchecked" Checked="GenerateClass_OnChecked">
                Generate Class
            </CheckBox>

            <Expander Header="Class Options" Name="ClassOptionsExpander" IsEnabled="False">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" >
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />

                        </Style>
                    </Grid.Resources>


                    <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=ClassName}">Class Name:</Label>
                    <Grid Grid.Row="0" Grid.Column="1">
                        <TextBox Name="ClassName" 
                                 IsReadOnly="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource InverseBooleanConverter}}"
                                 ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                                 DataContext="{Binding ElementName=_this}"
                                 Text="{Binding Path=GeneratedClassName, TargetNullValue ='', ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                                 Width="Auto">
                            <wpf:TextboxHint.Hint>
                                <TextBlock Padding="2,6,0,0" Text="{Binding Source={x:Static compilers:LSLOpenSimCompilerSettings.DefaultGeneratedClassName}}"/>
                            </wpf:TextboxHint.Hint>
                        </TextBox>
                    </Grid>


                    <Label Grid.Row="1" Grid.Column="0" Target="{Binding ElementName=NameSpaceName}">Namespace:</Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Name="NameSpaceName" 
                             IsReadOnly="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource InverseBooleanConverter}}"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             DataContext="{Binding ElementName=_this}"
                             Text="{Binding Path=GeneratedClassNamespace, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto" />


                    <Label Grid.Row="2" Grid.Column="0" Target="{Binding ElementName=InheritedClasses}">Inherited Classes:</Label>
                    <TextBox Grid.Row="2" Grid.Column="1" Name="InheritedClasses"
                             IsReadOnly="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource InverseBooleanConverter}}"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             DataContext="{Binding ElementName=_this}"
                             Text="{Binding Path=GeneratedInheritanceList, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto" />


                    <Label Grid.Row="3" Grid.Column="0" Target="{Binding ElementName=ConstructorSignature}">Constructor Signature:</Label>
                    <TextBox Grid.Row="3" Grid.Column="1" Name="ConstructorSignature"
                             IsReadOnly="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource InverseBooleanConverter}}"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                             Text="{Binding ElementName=_this, Path=GeneratedConstructorSignature, TargetNullValue ='', ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto">
                        <wpf:TextboxHint.Hint>
                            <TextBlock Padding="2,6,0,0" Text="{Binding Source={x:Static compilers:LSLOpenSimCompilerSettings.DefaultGeneratedConstructorSignature}}"/>
                        </wpf:TextboxHint.Hint>
                    </TextBox>


                    <Label Grid.Row="4" Grid.Column="0" Target="{Binding ElementName=ClassAccesibility}">Class Accessibility:</Label>

                    <ComboBox Grid.Row="4" Grid.Column="1" Name="ClassAccesibility" HorizontalAlignment="Left"
                              IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                              ItemsSource="{Binding Source={converters:EnumValues {x:Type cSharp:ClassAccessibilityLevel}}}"
                              SelectedItem="{Binding ElementName=_this, 
                    Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedClassAccessibility, UpdateSourceTrigger=PropertyChanged}" />


                    <Label Grid.Row="5" Grid.Column="0" Target="{Binding ElementName=ConstructorAccesibility}">Constructor Accessibility:</Label>

                    <ComboBox Grid.Row="5" Grid.Column="1" Name="ConstructorAccesibility" HorizontalAlignment="Left"
                              IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                              ItemsSource="{Binding Source={converters:EnumValues {x:Type cSharp:MemberAccessibilityLevel}}}"
                              SelectedItem="{Binding ElementName=_this, 
                    Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedConstructorAccessibility, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>
            </Expander>


            <Expander Header="Imports" Name="ImportsExpander" IsEnabled="False">
                <StackPanel>
                    <StackPanel.Resources>
                        <converters:ElementValidConverter x:Key="ElementValidConverter" />
                    </StackPanel.Resources>
                    <ListBox Name="NamespaceNameListBox" Height="100"
                             ScrollViewer.CanContentScroll="True"
                             SelectionMode="Extended"
                             ItemsSource="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedNamespaceImports}"
                             >
                             
                        <ListBox.ContextMenu>
                            <ContextMenu Name="ImportsContextMenu" Opened="ImportsContextMenu_Opened" >
                                <MenuItem Header="Delete" Click="ImportsDelete_OnClick"/>
                                <MenuItem Header="Copy To Clipboard" Click="ImportsCopyToClipboard_OnClick"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>

                    <DockPanel Margin="0,10,0,0" HorizontalAlignment="Stretch">
                        <Label Target="{Binding ElementName=NameSpaceAddTextbox}">Name:</Label>
                        <TextBox Name="NameSpaceAddTextbox" Margin="0,0,5,0" VerticalContentAlignment="Center"
                                 HorizontalAlignment="Stretch"
                                 IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                                 ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                                 Text="{Binding ElementName=_this, Path=NamespaceImportAddText, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>
                    <Button HorizontalAlignment="Right" Margin="2,10,5,5" Click="AddImport_OnClick"
                            Padding="15,0,15,0">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource MultiBooleanAndConverter}">
                                <Binding ElementName="NameSpaceAddTextbox" Path="Text" Converter="{StaticResource ElementValidConverter}" ConverterParameter="{x:Reference NameSpaceAddTextbox}"/>
                                <Binding ElementName="_this" Path="CanEditCurrentConfiguration"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                        Add
                    </Button>
                </StackPanel>
            </Expander>

            <Expander Header="Script Header">
                <TextBox Height="300" DataContext="{Binding ElementName=_this}" AcceptsReturn="True" AcceptsTab="True"
                         IsReadOnly="{Binding ElementName=_this, Path=CanEditCurrentConfiguration, Converter={StaticResource InverseBooleanConverter}}"
                         Text="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.ScriptHeader, UpdateSourceTrigger=PropertyChanged}" />
            </Expander>
            
            <Expander Header="Code Gen / Misc">
                <ItemsControl>
                    <CheckBox FlowDirection="RightToLeft"
                    IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                    DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                    IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.KeysAreStrings, UpdateSourceTrigger=PropertyChanged}">
                        Keys Are Strings
                    </CheckBox>
                
                    <CheckBox FlowDirection="RightToLeft"
                    IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                    DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                    IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.KeyConstantsThatExpandAreStrings, UpdateSourceTrigger=PropertyChanged}">
                        Key Constants That Expand Are Strings
                    </CheckBox>

                    <CheckBox FlowDirection="RightToLeft"
                    IsEnabled="{Binding ElementName=_this, Path=CanEditCurrentConfiguration}"
                    DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                    IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.KeyElementsInListConstantsThatExpandAreStrings, UpdateSourceTrigger=PropertyChanged}">
                        Key Elements In List Constants That Expand Are Strings
                    </CheckBox>
                </ItemsControl>
            </Expander>
        </StackPanel>
    </Grid>
</UserControl>
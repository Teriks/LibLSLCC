<UserControl x:Class="LSLCCEditor.SettingsUI.CompilerPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:LSLCCEditor.Utility.Converters;assembly=LSLCCEditor.Utility"
             xmlns:cSharp="clr-namespace:LibLSLCC.CSharp;assembly=LibLSLCC"
             xmlns:wpf="clr-namespace:LSLCCEditor.Utility.Wpf;assembly=LSLCCEditor.Utility"
             mc:Ignorable="d" Name="_this" MinWidth="500" Padding="5" DataContext="{Binding RelativeSource={RelativeSource Self}}" >

    <Grid>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="10,0,10,7" />
                        <Setter Property="Padding" Value="15,0,15,0" />
                    </Style>
                    <converters:IntegerGreaterThanToBoolConverter GreaterThan="1" x:Key="IntegerGreaterThanOne" ></converters:IntegerGreaterThanToBoolConverter>
                </StackPanel.Resources>
                <Button Width="Auto" Height="27" Click="New_OnClick">New</Button>
                <Button Width="Auto" Height="27" Click="Save_OnClick" IsEnabled="{Binding ElementName=_this, Path=CurrentConfigIsEdited}">Save</Button>
                <Button Width="Auto" Height="27" Click="Revert_OnClick" IsEnabled="{Binding ElementName=_this, Path=CurrentConfigIsEdited}">Revert</Button>
                <Button Width="Auto" Height="27" Click="Delete_OnClick" IsEnabled="{Binding ElementName=_this, Path=CompilerConfigurationNames.Count, 
                    Converter={StaticResource IntegerGreaterThanOne}}">Delete</Button>
            </StackPanel>
        </Grid>
        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="0,0,0,15">

            <StackPanel.Resources>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Margin" Value="9,5,0,5" />
                </Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style TargetType="{x:Type Expander}">
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    
                </Style>
            </StackPanel.Resources>

            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                <Label Target="{Binding ElementName=CompilerConfigurationCombobox}">Configuration:</Label>
                <ComboBox Name="CompilerConfigurationCombobox"
                          DataContext="{Binding ElementName=_this}"
                          ItemsSource="{Binding Path=CompilerConfigurationNames, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Path=SelectedCompilerConfigurationName, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>


            <CheckBox DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}" Checked="InsertCoOpTerminationCalls_Checked" Unchecked="InsertCoOpTerminationCalls_Unchecked"
                      IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.InsertCoOpTerminationCalls, UpdateSourceTrigger=PropertyChanged}">
                Insert Co-Op Termination Calls
            </CheckBox>


            <Expander Header="Co-Op Termination Options" Name="CoOpTerminationOptionsExpander">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>


                    </Grid.Resources>

                    <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=CoOpTerminationFunctionName}">Function Call:</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Name="CoOpTerminationFunctionName"
                             DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                             Text="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.CoOpTerminationFunctionCall, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto">
                        <TextBox.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Function signature to use for co-op script stop termination calls." />
                            </ToolTip>
                        </TextBox.ToolTip>
                    </TextBox>
                </Grid>
            </Expander>


            <CheckBox
                DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                IsChecked="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GenerateClass, UpdateSourceTrigger=PropertyChanged}"
                Unchecked="GenerateClass_OnUnchecked" Checked="GenerateClass_OnChecked"
                >
                Generate Class
            </CheckBox>

            <Expander Header="Class Options" Name="ClassOptionsExpander" IsEnabled="False">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Height" Value="29" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />

                        </Style>
                    </Grid.Resources>

                   
                    <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=ClassName}">Class Name:</Label>
                    <Grid Grid.Row="0" Grid.Column="1">
                    <TextBox  Name="ClassName"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             DataContext="{Binding ElementName=_this}" 
                             Text="{Binding Path=GeneratedClassName, TargetNullValue ='', ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto">
                            <wpf:TextboxHint.Hint>
                                <Border Padding="2,6,0,0">
                                    <TextBlock>LSLScript</TextBlock>
                                </Border>
                            </wpf:TextboxHint.Hint>
                    </TextBox>
                    </Grid>
                    

                    <Label Grid.Row="1" Grid.Column="0" Target="{Binding ElementName=NameSpaceName}">Namespace:</Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Name="NameSpaceName"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             DataContext="{Binding ElementName=_this}" 
                             Text="{Binding Path=GeneratedClassNamespace, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto">
                    </TextBox>


  


                    <Label Grid.Row="2" Grid.Column="0" Target="{Binding ElementName=InheritedClasses}">Inherited Classes:</Label>
                    <TextBox Grid.Row="2" Grid.Column="1" Name="InheritedClasses"
                             DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedClassName}"
                             Text="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedClassInherit, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto">
                        <TextBox.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Comma separated list of inherited class names." />
                            </ToolTip>
                        </TextBox.ToolTip>
                    </TextBox>


                    <Label Grid.Row="3" Grid.Column="0" Target="{Binding ElementName=ConstructorSignature}">Constructor Signature:</Label>
                    <TextBox Grid.Row="3" Grid.Column="1" Name="ConstructorSignature"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                             DataContext="{Binding ElementName=_this, Path=CurrentCompilerConfiguration}"
                             Text="{Binding ElementName=_this, Path=GeneratedConstructorSignature, TargetNullValue ='', ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
                             Width="Auto">
                        <wpf:TextboxHint.Hint>
                            <TextBlock Padding="2,6,0,0">()</TextBlock>
                        </wpf:TextboxHint.Hint>
                    </TextBox>
                    
                    
                    <Label Grid.Row="4" Grid.Column="0" Target="{Binding ElementName=ClassAccesibility}">Class Accessibility:</Label>

                    <ComboBox Grid.Row="4" Grid.Column="1" Name="ClassAccesibility" HorizontalAlignment="Left"
                              ItemsSource="{Binding Source={converters:EnumValues {x:Type cSharp:ClassAccessibilityLevel}}}"
                              SelectedItem="{Binding ElementName=_this, 
                    Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedClassAccessibility, UpdateSourceTrigger=PropertyChanged}" />
                    

                    <Label Grid.Row="5" Grid.Column="0" Target="{Binding ElementName=ConstructorAccesibility}">Constructor Accessibility:</Label>

                    <ComboBox Grid.Row="5" Grid.Column="1" Name="ConstructorAccesibility" HorizontalAlignment="Left"
                              ItemsSource="{Binding Source={converters:EnumValues {x:Type cSharp:MemberAccessibilityLevel}}}"
                              SelectedItem="{Binding ElementName=_this, 
                    Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedConstructorAccessibility, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>
            </Expander>


            <Expander Header="Imports" Name="ImportsExpander" IsEnabled="False">
                <StackPanel>
                    <StackPanel.Resources>
                        <converters:ElementValidConverter x:Key="ElementValidConverter"/>
                    </StackPanel.Resources>
                    <ListBox Name="NamespaceNameListBox" Height="100"
                                ScrollViewer.CanContentScroll="True"
                                SelectionMode="Extended"
                                ItemsSource="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.GeneratedNamespaceImports}">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete" Click="importsDelete_OnClick" />
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
    
                    <DockPanel Margin="0,10,0,0" HorizontalAlignment="Stretch">
                        <Label Target="{Binding ElementName=NameSpaceAddTextbox}">Name:</Label>
                        <TextBox Name="NameSpaceAddTextbox" Margin="0,0,5,0" VerticalContentAlignment="Center"
                                 HorizontalAlignment="Stretch" 
                                 ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"
                                 Text="{Binding ElementName=_this, Path=NamespaceImportAddText, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                    </DockPanel>
                    <Button HorizontalAlignment="Right"  Margin="2,10,5,5" Click="AddImport_OnClick"
                            IsEnabled="{Binding ElementName=NameSpaceAddTextbox, Path=Text, Converter={StaticResource ElementValidConverter}, ConverterParameter={x:Reference NameSpaceAddTextbox}}"
                            Padding="15,0,15,0">
                        Add
                    </Button>
                </StackPanel>
            </Expander>

            <Expander Header="Script Header">


                <TextBox Height="300" DataContext="{Binding ElementName=_this}"
                         Text="{Binding ElementName=_this, Path=CurrentCompilerConfiguration.OpenSimCompilerSettings.ScriptHeader, UpdateSourceTrigger=PropertyChanged}" />


            </Expander>

        </StackPanel>

    </Grid>
</UserControl>
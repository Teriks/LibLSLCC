<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{19F2CAF5-7C57-4A11-8AA3-DFD58F7AE289}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LibLSLCC</RootNamespace>
    <AssemblyName>LibLSLCC</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>6c90bac5</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>BasicDesignGuidelineRules.ruleset</CodeAnalysisRuleSet>
    <DocumentationFile>bin\LibLSLCC_Doc.XML</DocumentationFile>
    <NoWarn>3003;3001;3002</NoWarn>
    <LangVersion>5</LangVersion>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <NoWarn>3003;3001;3002</NoWarn>
    <LangVersion>5</LangVersion>
    <DocumentationFile>bin\LibLSLCC_Doc.XML</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>BasicDesignGuidelineRules.ruleset</CodeAnalysisRuleSet>
    <NoWarn>3003;3001;3002</NoWarn>
    <LangVersion>5</LangVersion>
    <DocumentationFile>bin\LibLSLCC_Doc.XML</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <NoWarn>3003;3001;3002</NoWarn>
    <LangVersion>5</LangVersion>
    <DocumentationFile>bin\LibLSLCC_Doc.XML</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\AnyCPU\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DocumentationFile>bin\LibLSLCC_Doc.XML</DocumentationFile>
    <NoWarn>3003;3001;3002</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>5</LangVersion>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>BasicDesignGuidelineRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <OutputPath>bin\AnyCPU\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <DocumentationFile>bin\LibLSLCC_Doc.XML</DocumentationFile>
    <Optimize>true</Optimize>
    <NoWarn>3003;3001;3002</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>5</LangVersion>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Antlr4.Runtime, Version=4.5.0.0, Culture=neutral, PublicKeyToken=e78b2c5abd1fcb3f, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>.\Antlr4.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CodeValidator\AntlrTreeUtilitys\LSLAntlrTreeIntrospection.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\ILSLLibrarySignature.cs" />
    <Compile Include="CodeValidator\Components\LSLCustomValidatorServiceProvider.cs" />
    <Compile Include="CodeValidator\Components\LSLDefaultExpressionValidator.cs" />
    <Compile Include="CodeValidator\Components\LSLDefaultLibraryDataProvider.cs" />
    <Compile Include="LibraryData\LSLLibraryDataSubsetCollection.cs" />
    <Compile Include="LibraryData\LSLLibraryDataSubsetNameParser.cs" />
    <Compile Include="LibraryData\LSLLibraryDataXmlSerializer.cs" />
    <Compile Include="LibraryData\LSLLibrarySubsetDescription.cs" />
    <Compile Include="LibraryData\LSLInvalidConstantValueStringException.cs" />
    <Compile Include="LibraryData\LSLLibraryDataInvalidConstantTypeException.cs" />
    <Compile Include="LibraryData\LSLLibraryDataXmlSyntaxException.cs" />
    <Compile Include="LibraryData\Reflection\ILSLReflectionConstantFilter.cs" />
    <Compile Include="LibraryData\Reflection\ILSLReflectionConstantMultiFilter.cs" />
    <Compile Include="LibraryData\Reflection\ILSLReflectionMethodFilter.cs" />
    <Compile Include="LibraryData\Reflection\ILSLReflectionTypeConverter.cs" />
    <Compile Include="LibraryData\Reflection\LSLLibraryDataReflectionException.cs" />
    <Compile Include="LibraryData\Reflection\LSLLibraryDataReflectionSerializer.cs" />
    <Compile Include="LibraryData\Reflection\LSLReflectionLambdaConstantFilter.cs" />
    <Compile Include="LibraryData\Reflection\LSLReflectionLambdaMethodFilter.cs" />
    <Compile Include="LibraryData\Reflection\LSLReflectionTypeMappingException.cs" />
    <Compile Include="LibraryData\Reflection\ILSLReflectionMethodMultiFilter.cs" />
    <Compile Include="LibraryData\Reflection\LSLReflectionTypeConversionMap.cs" />
    <Compile Include="Utility\LSLListParser.cs" />
    <Compile Include="CodeValidator\Components\LSLSyntaxListenerPriorityQueue.cs" />
    <Compile Include="CodeValidator\Enums\LSLCommentType.cs" />
    <Compile Include="CodeValidator\Enums\LSLConditionalStatementType.cs" />
    <Compile Include="LibraryData\LSLDuplicateSignatureException.cs" />
    <Compile Include="LibraryData\LSLDuplicateSubsetDescriptionException.cs" />
    <Compile Include="LibraryData\LSLInvalidSubsetNameException.cs" />
    <Compile Include="CodeValidator\Primitives\LSLInvalidSymbolNameException.cs" />
    <Compile Include="LibraryData\LSLMissingSubsetDescriptionException.cs" />
    <Compile Include="CodeValidator\ILSLCodeValidator.cs" />
    <Compile Include="CodeValidator\LSLAntlrErrorHandler.cs" />
    <Compile Include="LibraryData\LSLLibraryDataProvider.cs" />
    <Compile Include="CodeValidator\Primitives\LSLFunctionSignatureMatcher.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\LSLExprNodeInterfaceExtensions.cs" />
    <Compile Include="Collections\EnumerableExtensions.cs" />
    <Compile Include="Collections\GenericArray.cs" />
    <Compile Include="Collections\GenericArrayExtensions.cs" />
    <Compile Include="Collections\HashMapExtensions.cs" />
    <Compile Include="Collections\IReadOnlyContainer.cs" />
    <Compile Include="Collections\IReadOnlyGenericArray.cs" />
    <Compile Include="Collections\IReadOnlyHashMap.cs" />
    <Compile Include="Utility\LambdaEqualityComparer.cs" />
    <Compile Include="Utility\LSLTokenTools.cs" />
    <Compile Include="Utility\LSLFormatTools.cs" />
    <Compile Include="AutoComplete\LSLCommentStringSkipper.cs" />
    <Compile Include="AutoComplete\LSLAutoCompleteParser.cs" />
    <Compile Include="CodeValidator\Primitives\LSLBinaryOperationSignature.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\ILSLExpressionValidator.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\ILSLLibraryDataProvider.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\ILSLStringPreProcessor.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\ILSLSyntaxErrorListener.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\ILSLSyntaxWarningListener.cs" />
    <Compile Include="CodeValidator\Components\Interfaces\LSLValidatorServiceProvider.cs" />
    <Compile Include="CodeValidator\Components\LSLDefaultStringPreProcessor.cs" />
    <Compile Include="LibraryData\LSLXmlLibraryDataProvider.cs" />
    <Compile Include="CodeValidator\Components\LSLDefaultSyntaxErrorListener.cs" />
    <Compile Include="CodeValidator\Components\LSLDefaultSyntaxWarningListener.cs" />
    <Compile Include="CodeValidator\Enums\LSLCodeScopeType.cs" />
    <Compile Include="CodeValidator\Enums\LSLType.cs" />
    <Compile Include="CodeValidator\Enums\LSLExpressionType.cs" />
    <Compile Include="CodeValidator\Enums\LSLRotationComponent.cs" />
    <Compile Include="CodeValidator\Enums\LSLVariableScope.cs" />
    <Compile Include="CodeValidator\Enums\LSLVectorComponent.cs" />
    <Compile Include="CodeValidator\LSLCodeValidatorInternalException.cs" />
    <Compile Include="CodeValidator\Primitives\LSLComment.cs" />
    <Compile Include="CodeValidator\Primitives\LSLEventSignature.cs" />
    <Compile Include="CodeValidator\Primitives\LSLFunctionSignature.cs" />
    <Compile Include="LibraryData\LSLLibraryConstantSignature.cs" />
    <Compile Include="LibraryData\LSLLibraryEventSignature.cs" />
    <Compile Include="LibraryData\LSLLibraryFunctionSignature.cs" />
    <Compile Include="CodeValidator\Primitives\LSLFunctionSignatureRegex.cs" />
    <Compile Include="CodeValidator\Primitives\LSLEventSignatureRegex.cs" />
    <Compile Include="CodeValidator\Primitives\LSLParameter.cs" />
    <Compile Include="CodeValidator\Primitives\LSLParsedEventHandlerSignature.cs" />
    <Compile Include="CodeValidator\Primitives\LSLPreDefinedFunctionSignature.cs" />
    <Compile Include="CodeValidator\Components\LSLDefaultValidatorServiceProvider.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLBinaryExpressionNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLExpressionListNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLExprNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLFloatLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLFunctionCallNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLHexLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLIntegerLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLListLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLParenthesizedExpressionNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLPostfixOperationNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLPrefixOperationNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLReadOnlyExprNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLRotationLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLStringLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLTupleAccessorNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLTypecastExprNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLVariableNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLVectorLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLBinaryExpressionNode.cs" />
    <Compile Include="CodeValidator\Enums\LSLBinaryOperationType.cs" />
    <Compile Include="CodeValidator\Nodes\LSLDummyExpr.cs" />
    <Compile Include="CodeValidator\Nodes\LSLExpressionListNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLFloatLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLFunctionCallNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLHexLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLIntegerLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLListLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLConstantLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLParenthesizedExpressionNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLPostfixOperationNode.cs" />
    <Compile Include="CodeValidator\Enums\LSLPostfixOperationType.cs" />
    <Compile Include="CodeValidator\Nodes\LSLPrefixOperationNode.cs" />
    <Compile Include="CodeValidator\Enums\LSLPrefixOperationType.cs" />
    <Compile Include="CodeValidator\Nodes\LSLRotationLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLStringLiteralNode.cs" />
    <Compile Include="CodeValidator\Enums\LSLTupleComponent.cs" />
    <Compile Include="CodeValidator\Nodes\LSLTypecastExprNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLVariableNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLVecRotAccessorNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLVectorLiteralNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLSyntaxTreeNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLDoLoopNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLForLoopNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLWhileLoopNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLLoopNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLDoLoopNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLForLoopNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLWhileLoopNode.cs" />
    <Compile Include="CodeValidator\Primitives\LSLSourceCodeRange.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLCodeScopeNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLCompilationUnitNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLEventHandlerNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLFunctionDeclarationNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLStateScopeNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLCodeScopeNode.cs" />
    <Compile Include="CodeValidator\Primitives\LSLCodeSegment.cs" />
    <Compile Include="CodeValidator\Nodes\LSLCompilationUnitNode.cs" />
    <Compile Include="CodeValidator\Primitives\LSLConstantJumpDescription.cs" />
    <Compile Include="CodeValidator\Primitives\LSLDeadCodeSegment.cs" />
    <Compile Include="CodeValidator\Enums\LSLDeadCodeType.cs" />
    <Compile Include="CodeValidator\Nodes\LSLEventHandlerNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLFunctionDeclarationNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLStateScopeNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLBranchStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLCodeStatement.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLReturnPathNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLControlStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLElseIfStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLElseStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLExpressionStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLIfStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLJumpStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLLabelStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLParameterListNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLParameterNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLReturnStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLSemiColonStatement.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLStateChangeStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\Interfaces\ILSLVariableDeclarationNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLCodeStatementError.cs" />
    <Compile Include="CodeValidator\Nodes\LSLControlStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLElseIfStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLElseStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLExpressionStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLIfStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLJumpStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLLabelStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLParameterListNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLParameterNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLReturnStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLSemiColonStatement.cs" />
    <Compile Include="CodeValidator\Nodes\LSLStateChangeStatementNode.cs" />
    <Compile Include="CodeValidator\Nodes\LSLVariableDeclarationNode.cs" />
    <Compile Include="CodeValidator\ValidatorNodeVisitor\LSLDefaultValidatorNodeVisitor.cs" />
    <Compile Include="CodeValidator\ValidatorNodeVisitor\ILSLValidatorNodeVisitor.cs" />
    <Compile Include="Collections\IReadOnlyHashedSet.cs" />
    <Compile Include="Collections\PriorityQueue.cs" />
    <Compile Include="Collections\HashMap.cs" />
    <Compile Include="Collections\HashedSet.cs" />
    <Compile Include="Compilers\LSLCompilerInternalException.cs" />
    <Compile Include="Compilers\LSLOpenSimCSCompiler.cs" />
    <Compile Include="Compilers\Visitors\LSLOpenSimCSCompilerVisitor.cs" />
    <Compile Include="CodeValidator\Visitor\LSLCodeValidationVisitor.cs" />
    <Compile Include="CodeValidator\Visitor\LSLCodeValidationVisitorSubClasses.cs" />
    <Compile Include="CodeValidator\Visitor\LSLVisitorScopeTracker.cs" />
    <Compile Include="CodeValidator\LSLCodeValidator.cs" />
    <Compile Include="Formatter\Visitor\LSLCodeFormatterVisitor.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Parser\LSLBaseListener.cs" />
    <Compile Include="Parser\LSLBaseVisitor.cs" />
    <Compile Include="Parser\LSLLexer.cs" />
    <Compile Include="Parser\LSLListener.cs" />
    <Compile Include="Parser\LSLParser.cs" />
    <Compile Include="Parser\LSLVisitor.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="CodeValidator\Utility.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Parser\LSL.tokens" />
    <None Include="Parser\LSLLexer.tokens" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Parser\LSL.g4" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="CodeValidator\Components\LSLDefaultLibraryDataProvider.xml" />
  </ItemGroup>
  <ItemGroup>
    <ThirdPartyLicenses Include="..\ThirdPartyLicenses\Antlr 4.txt" />
  </ItemGroup>
  <ItemGroup>
    <License Include="LICENSE" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Documentation\LibraryData_XML_Syntax_README.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild" Outputs="$(ProjectDir)Parser\LSLParser.cs;$(ProjectDir)Parser\LSLVisitor.cs;$(ProjectDir)Parser\LSLListener.cs;$(ProjectDir)Parser\LSLLexer.cs;$(ProjectDir)Parser\LSLLexer.tokens;$(ProjectDir)Parser\LSL.tokens;$(ProjectDir)Parser\LSLBaseVisitor.cs;$(ProjectDir)Parser\LSLBaseListener.cs;">
    <Exec Command="java -classpath $(ProjectDir)antlr-4.5.1-complete.jar org.antlr.v4.Tool -Dlanguage=CSharp -visitor -listener -package LibLSLCC.Parser -o $(ProjectDir)Parser $(ProjectDir)Parser\LSL.g4">
    </Exec>
  </Target>
  <Target Name="AfterBuild">
    <Copy SourceFiles="@(ThirdPartyLicenses)" DestinationFolder="$(ProjectDir)bin\ThirdPartyLicenses" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(License)" DestinationFolder="$(ProjectDir)bin" SkipUnchangedFiles="true" />
  </Target>
</Project>
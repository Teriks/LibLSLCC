<LSLLibraryData>
  
  <!-- Subset descriptions are required -->
  <SubsetDescription Subset="lsl" FriendlyName="Standard LSL">
    <Description>The standard library functions supported by Linden Lab's SecondLife servers.</Description>
  </SubsetDescription>
  <SubsetDescription Subset="os-lsl" FriendlyName="OpenSim LSL">
    <Description>The subset of standard library functions from LSL supported by OpenSim SecondLife servers.</Description>
  </SubsetDescription>
  <SubsetDescription Subset="ossl" FriendlyName="OpenSim OSSL">
    <Description>An extended set of functions provided by OpenSim servers that have OSSL enabled.</Description>
  </SubsetDescription>
  <SubsetDescription Subset="os-bullet-physics" FriendlyName="OS Bullet Physics">
    <Description>A set of functions for interacting with bullet physics constraints on OpenSim servers which have extended physics enabled.</Description>
  </SubsetDescription>
  <SubsetDescription Subset="os-json-store" FriendlyName="OS Json Store">
    <Description>A set of functions from OpenSim's JsonStore region module for manipulating JSON objects stored in script memory.</Description>
  </SubsetDescription>
  <SubsetDescription Subset="os-lightshare" FriendlyName="OS Lightshare">
    <Description>A set of functions from OpenSim's LightShare region module for manipulating a regions shared WindLight settings.</Description>
  </SubsetDescription>
  <SubsetDescription Subset="os-mod-api"  FriendlyName="OS Mod Invoke">
    <Description>A set of functions for invoking add-on script methods defined in loaded region modules on OpenSim servers.</Description>
  </SubsetDescription>
  
  <LibraryFunction Name="llAbs" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Integer" />
    <DocumentationString>Returns the absolute (positive) version of Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAcos" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns the arc-cosine of Value, in radians.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAddToLandBanList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Hours" Type="Float" />
    <DocumentationString>Add avatar ID to the parcel ban list for the specified number of Hours.  A value of 0 for Hours will add the agent indefinitely.  The smallest value that Hours will accept is 0.01; anything smaller will be seen as 0.  When values that small are used, it seems the function bans in approximately 30 second increments (Probably 36 second increments, as 0.01 of an hour is 36 seconds).  Residents teleporting to a parcel where they are banned will be redirected to a neighbouring parcel.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAddToLandPassList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Hours" Type="Float" />
    <DocumentationString>Add avatar ID to the land pass list, for a duration of Hours.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAdjustSoundVolume" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Adjusts the volume (0.0 - 1.0) of the currently playing attached sound.  This function has no effect on sounds started with llTriggerSound.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAllowInventoryDrop" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Flag" Type="Integer" />
    <DocumentationString>If Flag == TRUE, users without object modify permissions can still drop inventory items into the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAngleBetween" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Rot1" Type="Rotation" />
    <Parameter Name="Rot2" Type="Rotation" />
    <DocumentationString>Returns the angle, in radians, between rotations Rot1 and Rot2.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llApplyImpulse" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Force" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Applies impulse to the object.  If Local == TRUE, apply the Force in local coordinates; otherwise, apply the Force in global coordinates.  This function only works on physical objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llApplyRotationalImpulse" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Force" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Applies rotational impulse to the object.  If Local == TRUE, apply the Force in local coordinates; otherwise, apply the Force in global coordinates.  This function only works on physical objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAsin" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns the arc-sine, in radians, of Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAtan2" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="y" Type="Float" />
    <Parameter Name="x" Type="Float" />
    <DocumentationString>Returns the arc-tangent2 of y, x.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAttachToAvatar" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AttachmentPoint" Type="Integer" />
    <DocumentationString>Attach to avatar at point AttachmentPoint.  Requires the PERMISSION_ATTACH runtime permission.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAttachToAvatarTemp" ReturnType="Void" Subsets="lsl">
    <Parameter Name="AttachPoint" Type="Integer" />
    <DocumentationString>Follows the same convention as llAttachToAvatar, with the exception that the object will not create new inventory for the user, and will disappear on detach or disconnect.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAvatarOnLinkSitTarget" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <DocumentationString>If an avatar is sitting on the link's sit target, return the avatar's key, NULL_KEY otherwise.  Returns a key that is the UUID of the user seated on the specified link's prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAvatarOnSitTarget" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>If an avatar is seated on the sit target, returns the avatar's key, otherwise NULL_KEY.  This only will detect avatars sitting on sit targets defined with llSitTarget.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAxes2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="Forward" Type="Vector" />
    <Parameter Name="Left" Type="Vector" />
    <Parameter Name="Up" Type="Vector" />
    <DocumentationString>Returns the rotation represented by coordinate axes Forward, Left, and Up.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAxisAngle2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="Axis" Type="Vector" />
    <Parameter Name="Angle" Type="Float" />
    <DocumentationString>Returns the rotation that is a generated Angle about Axis.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBase64ToInteger" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Returns an integer that is the Text, Base64 decoded as a big endian integer.  Returns zero if Text is longer then 8 characters. If Text contains fewer then 6 characters, the return value is unpredictable.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBase64ToString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Converts a Base64 string to a conventional string.  If the conversion creates any unprintable characters, they are converted to question marks.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBreakAllLinks" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>De-links all prims in the link set (requires permission PERMISSION_CHANGE_LINKS be set).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBreakLink" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <DocumentationString>De-links the prim with the given link number (requires permission PERMISSION_CHANGE_LINKS be set).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCastRay" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Start" Type="Vector" />
    <Parameter Name="End" Type="Vector" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Casts a ray into the physics world from 'start' to 'end' and returns data according to details in Options.  Reports collision data for intersections with objects.  Return value: [UUID_1, {link_number_1}, hit_position_1, {hit_normal_1}, UUID_2, {link_number_2}, hit_position_2, {hit_normal_2}, ... , status_code] where {} indicates optional data.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCeil" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns smallest integer value &gt;= Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llClearCameraParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Resets all camera parameters to default values and turns off scripted camera control.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llClearLinkMedia" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Link" Type="Integer" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Clears (deletes) the media and all parameters from the given Face on the linked prim.  Returns an integer that is a STATUS_* flag, which details the success/failure of the operation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llClearPrimMedia" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Clears (deletes) the media and all parameters from the given Face.  Returns an integer that is a STATUS_* flag which details the success/failure of the operation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCloseRemoteDataChannel" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ChannelID" Type="Key" />
    <DocumentationString>Closes the specified XML-RPC channel.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCloud" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Returns the cloud density at the object's position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCollisionFilter" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ObjectName" Type="String" />
    <Parameter Name="ObjectID" Type="Key" />
    <Parameter Name="Accept" Type="Integer" />
    <DocumentationString>Specify an empty string or NULL_KEY for Accept, to not filter on the corresponding parameter.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCollisionSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ImpactSound" Type="String" />
    <Parameter Name="ImpactVolume" Type="Float" />
    <DocumentationString>Suppress default collision sounds, replace default impact sounds with ImpactSound.  The ImpactSound must be in the object inventory.  Supply an empty string to suppress collision sounds.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCollisionSprite" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ImpactSprite" Type="String" />
    <DocumentationString>Suppress default collision sprites, replace default impact sprite with ImpactSprite; found in the object inventory (empty string to just suppress).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCos" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Theta" Type="Float" />
    <DocumentationString>Returns the cosine of Theta (Theta in radians).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCreateCharacter" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Convert link-set to AI/Physics character.  Creates a path-finding entity, known as a "character", from the object containing the script. Required to activate use of path-finding functions.  Options is a list of key/value pairs.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCreateLink" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="TargetPrim" Type="Key" />
    <Parameter Name="Parent" Type="Integer" />
    <DocumentationString>Attempt to link the object the script is in, to target (requires permission PERMISSION_CHANGE_LINKS be set).  Requires permission PERMISSION_CHANGE_LINKS be set.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCSV2List" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Create a list from a string of comma separated values specified in Text.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDeleteCharacter" ReturnType="Void" Subsets="lsl">
    <DocumentationString>Convert link-set from AI/Physics character to Physics object.  Convert the current link-set back to a standard object, removing all path-finding properties.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDeleteSubList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Source" Type="List" />
    <Parameter Name="Start" Type="Integer" />
    <Parameter Name="End" Type="Integer" />
    <DocumentationString>Removes the slice from start to end and returns the remainder of the list.  Remove a slice from the list and return the remainder, start and end are inclusive.  Using negative numbers for start and/or end causes the index to count backwards from the length of the list, so 0, -1 would delete the entire list.  If Start is larger than End the list deleted is the exclusion of the entries; so 6, 4 would delete the entire list except for the 5th. list entry.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDeleteSubString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Source" Type="String" />
    <Parameter Name="Start" Type="Integer" />
    <Parameter Name="End" Type="Integer" />
    <DocumentationString>Removes the indicated sub-string and returns the result.  Start and End are inclusive.  Using negative numbers for Start and/or End causes the index to count backwards from the length of the string, so 0, -1 would delete the entire string.  If Start is larger than End, the sub-string is the exclusion of the entries; so 6, 4 would delete the entire string except for the 5th. character.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetachFromAvatar" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Remove the object containing the script from the avatar.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedGrab" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the grab offset of a user touching the object.  Returns &lt;0.0, 0.0, 0.0&gt; if Number is not a valid object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedGroup" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns TRUE if detected object or agent Number has the same user group active as this object.  It will return FALSE if the object or agent is in the group, but the group is not active.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the key of detected object or avatar number.  Returns NULL_KEY if Number is not a valid index.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedLinkNumber" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the link position of the triggered event for touches and collisions only.  0 for a non-linked object, 1 for the root of a linked object, 2 for the first child, etc.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the name of detected object or avatar number.  Returns the name of detected object number.  Returns empty string if Number is not a valid index.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedOwner" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the key of detected object's owner.  Returns invalid key if Number is not a valid index.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the position of detected object or avatar number.  Returns &lt;0.0, 0.0, 0.0&gt; if Number is not a valid index.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the rotation of detected object or avatar number.  Returns &lt;0.0, 0.0, 0.0, 1.0&gt; if Number is not a valid offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchBinormal" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns the surface bi-normal for a triggered touch event.  Returns a vector that is the surface bi-normal (tangent to the surface) where the touch event was triggered.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchFace" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns the index of the face where the avatar clicked in a triggered touch event.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchNormal" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns the surface normal for a triggered touch event.  Returns a vector that is the surface normal (perpendicular to the surface) where the touch event was triggered.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns the position, in region coordinates, where the object was touched in a triggered touch event.  Unless it is a HUD, in which case it returns the position relative to the attach point.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchST" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns a vector that is the surface coordinates where the prim was touched.  The X and Y vector positions contain the horizontal (S) and vertical (T) face coordinates respectively.  Each component is in the interval [0.0, 1.0].  TOUCH_INVALID_TEXCOORD is returned if the surface coordinates cannot be determined (e.g. when the viewer does not support this function).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchUV" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns a vector that is the texture coordinates for where the prim was touched.  The X and Y vector positions contain the U and V face coordinates respectively.  TOUCH_INVALID_TEXCOORD is returned if the touch UV coordinates cannot be determined (e.g. when the viewer does not support this function).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedType" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) of detected object.  Returns 0 if number is not a valid index.  Note that number is a bit-field, so comparisons need to be a bitwise checked.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedVel" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Number" Type="Integer" />
    <DocumentationString>Returns the velocity of the detected object Number.  Returns&lt;0.0, 0.0, 0.0&gt; if Number is not a valid offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDialog" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Buttons" Type="List" />
    <Parameter Name="Channel" Type="Integer" />
    <DocumentationString>Shows a dialog box on the avatar's screen with a message and configurable buttons.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDie" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Delete the object which holds the script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDumpList2String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Source" Type="List" />
    <Parameter Name="Separator" Type="String" />
    <DocumentationString>Returns the list as a single string, using Separator between the entries.  Write the list out as a single string, using Separator between values.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEdgeOfWorld" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="Direction" Type="Vector" />
    <DocumentationString>Checks to see whether the border hit by Direction from Position is the edge of the world (has no neighboring region).  Returns TRUE if the line along Direction from Position hits the edge of the world in the current simulator, returns FALSE if that edge crosses into another simulator.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEjectFromLand" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Ejects AvatarID from land that you own.  Ejects AvatarID from land that the object owner (group or resident) owns.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEmail" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Address" Type="String" />
    <Parameter Name="Subject" Type="String" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Sends email to Address with Subject and Message.  Sends an email to Address with Subject and Message.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEscapeURL" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="URL" Type="String" />
    <DocumentationString>Returns the string that is the URL-escaped version of URL. (replacing spaces with %20, etc.)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEuler2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="Vector" Type="Vector" />
    <DocumentationString>Returns the rotation representation of the Euler angles.  Returns the rotation represented by the Euler Angle.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEvade" ReturnType="Void" Subsets="lsl">
    <Parameter Name="TargetID" Type="Key" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Evade a specified target.  Characters will (roughly) try to hide from their pursuers if there is a good hiding spot along their fleeing path. Hiding means no direct line of sight from the head of the character (centre of the top of its physics bounding box) to the head of its pursuer and no direct path between the two on the navigation-mesh.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llExecCharacterCmd" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Command" Type="Integer" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Execute a character command.  Send a command to the path system.  Currently only supports stopping the current path-finding operation or causing the character to jump.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFabs" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns the positive version of Value.  Returns the absolute value of Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFleeFrom" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Source" Type="Vector" />
    <Parameter Name="Distance" Type="Float" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Flee from a point.  Directs a character (llCreateCharacter) to keep away from a defined position in the region or adjacent regions.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFloor" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns largest integer value &lt;= Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llForceMouselook" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Enable" Type="Integer" />
    <DocumentationString>If Enable is TRUE any avatar that sits on this object is forced into mouse-look mode.  After calling this function with Enable set to TRUE, any agent sitting down on the prim will be forced into mouse-look.  Just like llSitTarget, this changes a permanent property of the prim (not the object) and needs to be reset by calling this function with Enable set to FALSE in order to disable it.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFrand" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Magnitude" Type="Float" />
    <DocumentationString>Returns a pseudo random number in the range [0, Magnitude] or [Magnitude, 0].  Returns a pseudo-random number between [0, Magnitude].</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGenerateKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Generates a key (SHA-1 hash) using UUID generation to create a unique key.  As the UUID produced is versioned, it should never return a value of NULL_KEY.  The specific UUID version is an implementation detail that has changed in the past and may change again in the future. Do not depend upon the UUID that is returned to be version 5 SHA-1 hash.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAccel" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the acceleration of the object relative to the region's axes.  Gets the acceleration of the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentInfo" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns an integer bit-field containing the agent information about id.  Returns AGENT_FLYING, AGENT_ATTACHMENTS, AGENT_SCRIPTED, AGENT_SITTING, AGENT_ON_OBJECT, AGENT_MOUSELOOK, AGENT_AWAY, AGENT_BUSY, AGENT_TYPING, AGENT_CROUCHING, AGENT_ALWAYS_RUN, AGENT_WALKING and/or AGENT_IN_AIR.  Returns information about the given agent ID as a bit-field of agent info constants.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentLanguage" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns the language code of the preferred interface language of the avatar.  Returns a string that is the language code of the preferred interface language of the resident.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Scope" Type="Integer" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Requests a list of agents currently in the region, limited by the scope parameter.  Returns a list [key UUID-0, key UUID-1, ..., key UUID-n] or [string error_msg] - returns avatar keys for all agents in the region limited to the area(s) specified by scope</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentSize" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>If the avatar is in the same region, returns the size of the bounding box of the requested avatar by id, otherwise returns ZERO_VECTOR.  If the agent is in the same region as the object, returns the size of the avatar.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAlpha" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Returns the alpha value of Face.  Returns the 'alpha' of the given face. If face is ALL_SIDES the value returned is the mean average of all faces.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAndResetTime" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the script time in seconds and then resets the script timer to zero.  Gets the time in seconds since starting and resets the time to zero.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAnimation" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns the name of the currently playing locomotion animation for the avatar id.  Returns the currently playing animation for the specified avatar ID.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAnimationList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns a list of keys of playing animations for an avatar.  Returns a list of keys of all playing animations for the specified avatar ID.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAnimationOverride" ReturnType="String" Subsets="lsl">
    <Parameter Name="AnimationState" Type="String" />
    <DocumentationString>Returns a string that is the name of the animation that is used for the specified animation state To use this function the script must obtain either the PERMISSION_OVERRIDE_ANIMATIONS or PERMISSION_TRIGGER_ANIMATION permission (automatically granted to attached objects).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAttached" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the object's attachment point, or 0 if not attached.  Returns the object attachment point, or 0 if not attached.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAttachedList" ReturnType="List" Subsets="lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns the keys of the objects attached to an avatar.  This does not include HUD attachments.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetBoundingBox" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Returns the bounding box around the object (including any linked prims) relative to its root prim, as a list in the format [ (vector) min_corner, (vector) max_corner ].</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCameraPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current camera position for the agent the task has permissions for.  Returns the position of the camera, of the user that granted the script PERMISSION_TRACK_CAMERA. If no user has granted the permission, it returns ZERO_VECTOR.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCameraRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current camera orientation for the agent the task has permissions for. If no user has granted the PERMISSION_TRACK_CAMERA permission, returns ZERO_ROTATION.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCenterOfMass" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the prim's centre of mass (unless called from the root prim, where it returns the object's centre of mass).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetClosestNavPoint" ReturnType="List" Subsets="lsl">
    <Parameter Name="Point" Type="Vector" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Get the closest navigable point to the point provided.  The function accepts a point in region-local space (like all the other path-finding methods) and returns either an empty list or a list containing a single vector which is the closest point on the navigation-mesh to the point provided.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetColor" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Returns the color on Face.  Returns the color of Face as a vector of red, green, and blue values between 0 and 1. If face is ALL_SIDES the color returned is the mean average of each channel.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCreator" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a key for the creator of the prim.  Returns the key of the object's original creator. Similar to llGetOwner.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetDate" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current date in the UTC time zone in the format YYYY-MM-DD.  Returns the current UTC date as YYYY-MM-DD.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetDisplayName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns the display name of an avatar, if the avatar is connected to the current region, or if the name has been cached.  Otherwise, returns an empty string. Use llRequestDisplayName if the avatar may be absent from the region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetEnergy" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns how much energy is in the object as a percentage of maximum.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetEnv" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="DataRequest" Type="String" />
    <DocumentationString>Returns a string with the requested data about the region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetForce" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the force (if the script is physical).  Returns the current force if the script is physical.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetFreeMemory" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of free bytes of memory the script can use.  Returns the available free space for the current script. This is inaccurate with LSO.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetFreeURLs" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of available URLs for the current script.  Returns an integer that is the number of available URLs.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetGeometricCenter" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the vector that is the geometric center of the object relative to the root prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetGMTclock" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since midnight GMT.  Gets the time in seconds since midnight in GMT/UTC.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetHTTPHeader" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="HTTPRequestID" Type="Key" />
    <Parameter Name="Header" Type="String" />
    <DocumentationString>Returns the value for header for request_id.  Returns a string that is the value of the Header for HTTPRequestID.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryCreator" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <DocumentationString>Returns a key for the creator of the inventory item.  This function returns the UUID of the creator of item. If item is not found in inventory, the object says "No item named 'name'".</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <DocumentationString>Returns the key that is the UUID of the inventory named.  Returns the key of the inventory named.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryType" Type="Integer" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns the name of the inventory item of a given type, specified by index number.  Use the inventory constants INVENTORY_* to specify the type.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryNumber" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryType" Type="Integer" />
    <DocumentationString>Returns the quantity of items of a given type (INVENTORY_* flag) in the prim's inventory.  Use the inventory constants INVENTORY_* to specify the type.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryPermMask" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <Parameter Name="BitMask" Type="Integer" />
    <DocumentationString>Returns the requested permission mask for the inventory item.  Returns the requested permission mask for the inventory item defined by InventoryItem. If item is not in the object's inventory, llGetInventoryPermMask returns FALSE and causes the object to say "No item named '&lt;item&gt;'", where "&lt;item&gt;" is item.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryType" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <DocumentationString>Returns the type of the named inventory item.  Like all inventory functions, llGetInventoryType is case-sensitive.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the key of the prim the script is attached to.  Get the key for the object which has this script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLandOwnerAt" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>Returns the key of the land owner, returns NULL_KEY if public.  Returns the key of the land owner at Position, or NULL_KEY if public.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <DocumentationString>Returns the key of the linked prim LinkNumber.  Returns the key of LinkNumber in the link set.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkMedia" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Face" Type="Integer" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Get the media parameters for a particular face on linked prim, given the desired list of parameter names. Returns a list of values in the order requested.	Returns an empty list if no media exists on the face.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llGetLinkMedia" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llGetLinkName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <DocumentationString>Returns the name of LinkNumber in a link set.  Returns the name of LinkNumber the link set.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkNumber" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the link number of the prim containing the script (0 means not linked, 1 the prim is the root, 2 the prim is the first child, etc.).  Returns the link number of the prim containing the script. 0 means no link, 1 the root, 2 for first child, etc.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkNumberOfSides" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <DocumentationString>Returns the number of sides of the specified linked prim.  Returns an integer that is the number of faces (or sides) of the prim link.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkPrimitiveParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Returns the list of primitive attributes requested in the Parameters list for LinkNumber.  PRIM_* flags can be broken into three categories, face flags, prim flags, and object flags.  * Supplying a prim or object flag will return that flags attributes.  * Face flags require the user to also supply a face index parameter.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llGetLinkPrimitiveParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llGetListEntryType" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Returns the type of the index entry in the list (TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR, TYPE_ROTATION, or TYPE_INVALID if index is off list).  Returns the type of the variable at Index in ListVariable.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetListLength" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <DocumentationString>Returns the number of elements in the list.  Returns the number of elements in ListVariable.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLocalPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the position relative to the root.  Returns the local position of a child object relative to the root.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLocalRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation local to the root.  Returns the local rotation of a child object relative to the root.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMass" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the mass of object that the script is attached to.  Returns the scripted object's mass. When called from a script in a link-set, the parent will return the sum of the link-set weights, while a child will return just its own mass. When called from a script inside an attachment, this function will return the mass of the avatar it's attached to, not its own.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMassMKS" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Acts as llGetMass(), except that the units of the value returned are Kg.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMaxScaleFactor" ReturnType="Float" Subsets="lsl">
    <DocumentationString>Returns the largest multiplicative uniform scale factor that can be successfully applied (via llScaleByFactor()) to the object without violating prim size or linkability rules.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMemoryLimit" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Get the maximum memory a script can use, in bytes.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMinScaleFactor" ReturnType="Float" Subsets="lsl">
    <DocumentationString>Returns the smallest multiplicative uniform scale factor that can be successfully applied (via llScaleByFactor()) to the object without violating prim size or linkability rules.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNextEmail" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Address" Type="String" />
    <Parameter Name="Subject" Type="String" />
    <DocumentationString>Fetch the next queued email with that matches the given address and/or subject, via the email event.  If the parameters are blank, they are not used for filtering.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNotecardLine" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="NotecardName" Type="String" />
    <Parameter Name="LineNumber" Type="Integer" />
    <DocumentationString>Returns LineNumber from NotecardName via the dataserver event. The line index starts at zero.  If the requested line is passed the end of the note-card the dataserver event will return the constant EOF string.  The key returned by this function is a unique identifier which will be supplied to the dataserver event in the requested parameter.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNumberOfNotecardLines" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="NotecardName" Type="String" />
    <DocumentationString>Returns the number of lines contained within a notecard via the dataserver event.  The key returned by this function is a query ID for identifying the dataserver reply.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNumberOfPrims" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of prims in a link set the script is attached to.  Returns the number of prims in (and avatars seated on) the object the script is in.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNumberOfSides" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of faces (or sides) of the prim.  Returns the number of sides of the prim which has the script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectDesc" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the description of the prim the script is attached to.  Returns the description of the scripted object/prim. You can set the description using llSetObjectDesc.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectDetails" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Returns a list of object details specified in the Parameters list for the object or avatar in the region with key ID.  Parameters are specified by the OBJECT_* constants.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectMass" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Returns the mass of the avatar or object in the region.  Gets the mass of the object or avatar corresponding to ID.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectName" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the name of the prim which the script is attached to.  Returns the name of the prim (not object) which contains the script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectPermMask" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Category" Type="Integer" />
    <DocumentationString>Returns the permission mask of the requested category for the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectPrimCount" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ObjectID" Type="Key" />
    <DocumentationString>Returns the total number of prims for an object in the region.  Returns the prim count for any object id in the same region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetOmega" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation velocity in radians per second.  Returns a vector that is the rotation velocity of the object in radians per second.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetOwner" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the object owner's UUID.  Returns the key for the owner of the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetOwnerKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="ObjectID" Type="Key" />
    <DocumentationString>Returns the owner of ObjectID.  Returns the key for the owner of object ObjectID.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelDetails" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="ParcelDetails" Type="List" />
    <DocumentationString>Returns a list of parcel details specified in the ParcelDetails list for the parcel at Position.  Parameters is one or more of: PARCEL_DETAILS_NAME, _DESC, _OWNER, _GROUP, _AREA, _ID, _SEE_AVATARS.  Returns a list that is the parcel details specified in ParcelDetails (in the same order) for the parcel at Position.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelFlags" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>Returns a mask of the parcel flags (PARCEL_FLAG_*) for the parcel that includes the point Position.  Returns a bit-field specifying the parcel flags (PARCEL_FLAG_*) for the parcel at Position.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelMaxPrims" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="SimWide" Type="Integer" />
    <DocumentationString>Returns the maximum number of prims allowed on the parcel at Position for a given scope.  The scope may be set to an individual parcel or the combined resources of all parcels with the same ownership in the region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelMusicURL" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the streaming audio URL for the parcel object is on.  The object owner, avatar or group, must also be the land owner.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelPrimCount" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="Category" Type="Integer" />
    <Parameter Name="SimWide" Type="Integer" />
    <DocumentationString>Returns the number of prims on the parcel at Position of the given category.  Categories: PARCEL_COUNT_TOTAL, _OWNER, _GROUP, _OTHER, _SELECTED, _TEMP.  Returns the number of prims used on the parcel at Position which are in Category.  If SimWide is TRUE, it returns the total number of objects for all parcels with matching ownership in the category specified.  If SimWide is FALSE, it returns the number of objects on this specific parcel in the category specified</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelPrimOwners" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>Returns a list of up to 100 residents who own objects on the parcel at Position, with per-owner land impact totals.  Requires owner-like permissions for the parcel, and for the script owner to be present in the region.  The list is formatted as [ key agentKey1, integer agentLI1, key agentKey2, integer agentLI2, ... ], sorted by agent key.  The integers are the combined land impacts of the objects owned by the corresponding agents.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPermissions" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns an integer bitmask of the permissions that have been granted to the script.  Individual permissions can be determined using a bit-wise "and" operation against the PERMISSION_* constants</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPermissionsKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the key of the avatar that last granted or declined permissions to the script.  Returns NULL_KEY if permissions were never granted or declined.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPhysicsMaterial" ReturnType="List" Subsets="lsl">
    <DocumentationString>Returns a list of the form [float gravity_multiplier, float restitution, float friction, float density].</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the position of the task in region coordinates.  Returns the vector position of the task in region coordinates.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPrimitiveParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Returns the primitive parameters specified in the parameters list.  Returns primitive parameters specified in the Parameters list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPrimMediaParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Returns the media parameters for a particular face on an object, given the desired list of parameter names, in the order requested. Returns an empty list if no media exists on the face.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionAgentCount" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of avatars in the region.  Returns an integer that is the number of avatars in the region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionCorner" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a vector, in meters, that is the global location of the south-west corner of the region which the object is in.  Returns the Region-Corner of the simulator containing the task. The region-corner is a vector (values in meters) representing distance from the first region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionFlags" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the region flags (REGION_FLAG_*) for the region the object is in.  Returns a bit-field specifying the region flags (REGION_FLAG_*) for the region the object is in.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionFPS" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the mean region frames per second.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionName" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current region name.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionTimeDilation" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current time dilation as a float between 0.0 (full dilation) and 1.0 (no dilation).  Returns the current time dilation as a float between 0.0 and 1.0.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRootPosition" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the position (in region coordinates) of the root prim of the object which the script is attached to.  This is used to allow a child prim to determine where the root is.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRootRotation" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation (relative to the region) of the root prim of the object which the script is attached to.  Gets the global rotation of the root object of the object script is attached to.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation relative to the region's axes.  Returns the rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetScale" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the scale of the prim.  Returns a vector that is the scale (dimensions) of the prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetScriptName" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the name of the script that this function is used in.  Returns the name of this script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetScriptState" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ScriptName" Type="String" />
    <DocumentationString>Returns TRUE if the script named is running.  Returns TRUE if ScriptName is running.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSimStats" ReturnType="Float" Subsets="lsl">
    <Parameter Name="StatType" Type="Integer" />
    <DocumentationString>Returns a float that is the requested statistic.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSimulatorHostname" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the host-name of the machine which the script is running on.  For example, "sim225.agni.lindenlab.com".</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSPMaxMemory" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the maximum used memory for the current script. Only valid after using PROFILE_SCRIPT_MEMORY. Non-mono scripts always use 16k.  Returns the integer of the most bytes used while llScriptProfiler was last active.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetStartParameter" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns an integer that is the script rez parameter.  If the object was rezzed by an agent, this function returns 0.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetStaticPath" ReturnType="List" Subsets="lsl">
    <Parameter Name="Start" Type="Vector" />
    <Parameter Name="End" Type="Vector" />
    <Parameter Name="Radius" Type="Float" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llGetStatus" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="StatusFlag" Type="Integer" />
    <DocumentationString>Returns boolean value of the specified status (e.g. STATUS_PHANTOM) of the object the script is attached to.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSubString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="String" Type="String" />
    <Parameter Name="Start" Type="Integer" />
    <Parameter Name="End" Type="Integer" />
    <DocumentationString>Returns a sub-string from String, in a range specified by the Start and End indicies (inclusive).  Using negative numbers for Start and/or End causes the index to count backwards from the length of the string, so 0, -1 would capture the entire string.  If Start is greater than End, the sub string is the exclusion of the entries.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSunDirection" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a normalized vector of the direction of the sun in the region.  Returns the sun's direction on the simulator.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTexture" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Returns a string that is the texture on face (the inventory name if it is a texture in the prim's inventory, otherwise the key).  Returns the texture of a face, if it is found in object inventory, its key otherwise.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTextureOffset" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Returns the texture offset of face in the x and y components of a vector.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTextureRot" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Returns the texture rotation of side.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTextureScale" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Returns the texture scale of side in the x and y components of a vector.  Returns the texture scale of a side in the x and y components of a vector.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTime" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since the last region reset, script reset, or call to either llResetTime or llGetAndResetTime.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTimeOfDay" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since Second Life midnight or since region up-time, whichever is smaller.  The Second Life day cycle is 4 hours.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTimestamp" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a time-stamp (UTC time zone) in the format: YYYY-MM-DDThh:mm:ss.ff..fZ.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTorque" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the torque (if the script is physical).  Returns a vector that is the torque (if the script is physical).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetUnixTime" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of seconds elapsed since 00:00 hours, Jan 1, 1970 UTC from the system clock.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetUsedMemory" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current used memory for the current script. Non-mono scripts always use 16K.  Returns the integer of the number of bytes of memory currently in use by the script. Non-mono scripts always use 16K.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetUsername" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Returns the username of an avatar, if the avatar is connected to the current region, or if the name has been cached.  Otherwise, returns an empty string. Use llRequestUsername if the avatar may be absent from the region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetVel" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the velocity of the object.  Returns a vector that is the velocity of the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetWallclock" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since midnight California Pacific time (PST/PDT).  Returns the time in seconds since simulator's time-zone midnight (Pacific Time).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGiveInventory" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="TargetID" Type="Key" />
    <Parameter Name="InventoryItem" Type="String" />
    <DocumentationString>Give InventoryItem to destination represented by TargetID, as permitted by the permissions system.  TargetID may be any agent or an object in the same region.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGiveInventoryList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="TargetID" Type="Key" />
    <Parameter Name="FolderName" Type="String" />
    <Parameter Name="InventoryItems" Type="List" />
    <DocumentationString>Give InventoryItems to destination (represented by TargetID) as a new folder of items, as permitted by the permissions system.  TargetID may be any agent or an object in the same region. If TargetID is an object, the items are passed directly to the object inventory (no folder is created).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGiveMoney" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Amount" Type="Integer" />
    <DocumentationString>Transfers Amount of L$ from script owner to AvatarID.  This call will silently fail if PERMISSION_DEBIT has not been granted. Always returns 0.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llGiveMoney" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="destination" Type="Key" />
    <Parameter Name="amount" Type="Integer" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llGodLikeRezObject" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItemID" Type="Key" />
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>Rez directly off of a UUID if owner has god-bit set.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGround" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Returns the ground height at the object position + offset.  Returns the ground height at the object's position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundContour" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Returns the ground contour direction below the object position + Offset.  Returns the ground contour at the object's position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundNormal" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Returns the ground normal below the object position + offset.  Returns the ground contour at the object's position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundRepel" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Height" Type="Float" />
    <Parameter Name="Water" Type="Integer" />
    <Parameter Name="Tau" Type="Float" />
    <DocumentationString>Critically damps to height if within height * 0.5 of level (either above ground level or above the higher of land and water if water == TRUE).  Critically damps to fHeight if within fHeight * 0.5 of ground or water level.  The height is above ground level if iWater is FALSE or above the higher of land and water if iWater is TRUE.  Do not use with vehicles. Only works in physics-enabled objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundSlope" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Returns the ground slope below the object position + Offset.  Returns the ground slope at the object position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llHTTPRequest" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="URL" Type="String" />
    <Parameter Name="Parameters" Type="List" />
    <Parameter Name="Body" Type="String" />
    <DocumentationString>Sends an HTTP request to the specified URL with the Body of the request and Parameters.  Returns a key that is a handle identifying the HTTP request made.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llHTTPResponse" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="HTTPRequestID" Type="Key" />
    <Parameter Name="Status" Type="Integer" />
    <Parameter Name="Body" Type="String" />
    <DocumentationString>Responds to an incoming HTTP request which was triggerd by an http_request event within the script. HTTPRequestID specifies the request to respond to (this ID is supplied in the http_request event handler).  Status and Body specify the status code and message to respond with.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llInsertString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="TargetVariable" Type="String" />
    <Parameter Name="Position" Type="Integer" />
    <Parameter Name="SourceVariable" Type="String" />
    <DocumentationString>Inserts SourceVariable into TargetVariable at Position, and returns the result.  Inserts SourceVariable into TargetVariable at Position and returns the result. Note this does not alter TargetVariable.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llInstantMessage" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>IMs Text to the user identified.  Send Text to the user as an instant message.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llIntegerToBase64" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Integer" />
    <DocumentationString>Returns a string that is a Base64 big endian encode of Value.  Encodes the Value as an 8-character Base64 string.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJson2List" ReturnType="List" Subsets="lsl">
    <Parameter Name="JSON" Type="String" />
    <DocumentationString>Converts the top level of the JSON string to a list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJsonGetValue" ReturnType="String" Subsets="lsl">
    <Parameter Name="JSON" Type="String" />
    <Parameter Name="Specifiers" Type="List" />
    <DocumentationString>Gets the value indicated by Specifiers from the JSON string.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJsonSetValue" ReturnType="String" Subsets="lsl">
    <Parameter Name="JSON" Type="String" />
    <Parameter Name="Specifiers" Type="List" />
    <Parameter Name="Value" Type="String" />
    <DocumentationString>Returns a new JSON string that is the JSON given with the Value indicated by Specifiers set to Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJsonValueType" ReturnType="String" Subsets="lsl">
    <Parameter Name="JSON" Type="String" />
    <Parameter Name="Specifiers" Type="List" />
    <DocumentationString>Returns the type constant (JSON_*) for the value in JSON indicated by Specifiers.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llKey2Name" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Returns the name of the prim or avatar specified by ID. The ID must be a valid rezzed prim or avatar key in the current simulator, otherwise an empty string is returned.  For avatars, the returned name is the legacy name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLinkParticleSystem" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Rules" Type="List" />
    <DocumentationString>Creates a particle system in prim LinkNumber based on Rules. An empty list removes a particle system from object.  List format is [ rule-1, data-1, rule-2, data-2 ... rule-n, data-n ].  This is identical to llParticleSystem except that it applies to a specified linked prim and not just the prim the script is in.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llLinkParticleSystem" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llLinkSitTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Offset" Type="Vector" />
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Set the sit location for the linked prim(s). If Offset == &lt;0,0,0&gt; clear it.  Set the sit location for the linked prim(s). The sit location is relative to the prim's position and rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2CSV" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <DocumentationString>Creates a string of comma separated values from the list.  Create a string of comma separated values from the specified list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Float" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Copies the float at Index in the list.  Returns the value at Index in the specified list. If Index describes a location not in the list, or the value cannot be type-cast to a float, then zero is returned.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Integer" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Copies the integer at Index in the list.  Returns the value at Index in the specified list. If Index describes a location not in the list, or the value cannot be type-cast to an integer, then zero is returned.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Json" ReturnType="String" Subsets="lsl">
    <Parameter Name="JsonType" Type="String" />
    <Parameter Name="Values" Type="List" />
    <DocumentationString>Converts either a strided list of key:value pairs to a JSON_OBJECT, or a list of values to a JSON_ARRAY.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Key" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Copies the key at Index in the list.  Returns the value at Index in the specified list. If Index describes a location not in the list, or the value cannot be type-cast to a key, then null string is returned.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2List" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Start" Type="Integer" />
    <Parameter Name="End" Type="Integer" />
    <DocumentationString>Returns a subset of entries from ListVariable, in a range specified by the Start and End indicies (inclusive).  Using negative numbers for Start and/or End causes the index to count backwards from the length of the string, so 0, -1 would capture the entire string.  If Start is greater than End, the sub string is the exclusion of the entries.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2ListStrided" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Start" Type="Integer" />
    <Parameter Name="End" Type="Integer" />
    <Parameter Name="Stride" Type="Integer" />
    <DocumentationString>Copies the strided slice of the list from Start to End.  Returns a copy of the strided slice of the specified list from Start to End.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Copies the rotation at Index in the list.  Returns the value at Index in the specified list. If Index describes a location not in the list, or the value cannot be type-cast to rotation, thenZERO_ROTATION is returned.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Copies the string at Index in the list.  Returns the value at Index in the specified list as a string. If Index describes a location not in the list then null string is returned.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Vector" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Index" Type="Integer" />
    <DocumentationString>Copies the vector at Index in the list.  Returns the value at Index in the specified list. If Index describes a location not in the list, or the value cannot be type-cast to a vector, then ZERO_VECTOR is returned.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListen" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="SpeakersName" Type="String" />
    <Parameter Name="SpeakersID" Type="Key" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Creates a listen callback for Text on Channel from SpeakersName and SpeakersID (SpeakersName, SpeakersID, and/or Text can be empty) and returns an identifier that can be used to deactivate or remove the listen.  Non-empty values for SpeakersName, SpeakersID, and Text will filter the results accordingly, while empty strings and NULL_KEY will not filter the results, for string and key parameters respectively.  PUBLIC_CHANNEL is the public chat channel that all avatars see as chat text. DEBUG_CHANNEL is the script debug channel, and is also visible to nearby avatars. All other channels are are not sent to avatars, but may be used to communicate with scripts.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListenControl" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ChannelHandle" Type="Integer" />
    <Parameter Name="Active" Type="Integer" />
    <DocumentationString>Makes a listen event callback active or inactive. Pass in the value returned from llListen to the iChannelHandle parameter to specify which listener you are controlling.  Use boolean values to specify Active</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListenRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ChannelHandle" Type="Integer" />
    <DocumentationString>Removes a listen event callback. Pass in the value returned from llListen to the iChannelHandle parameter to specify which listener to remove.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListFindList" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Find" Type="List" />
    <DocumentationString>Returns the index of the first instance of Find in ListVariable. Returns -1 if not found.  Returns the position of the first instance of the Find list in the ListVariable. Returns -1 if not found.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListInsertList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Target" Type="List" />
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Position" Type="Integer" />
    <DocumentationString>Returns a list that contains all the elements from Target but with the elements from ListVariable inserted at Position start.  Returns a new list, created by inserting ListVariable into the Target list at Position. Note this does not alter the Target.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListRandomize" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Stride" Type="Integer" />
    <DocumentationString>Returns a version of the input ListVariable which has been randomized by blocks of size Stride.  If the remainder from the length of the list, divided by the stride is non-zero, this function does not randomize the list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListReplaceList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Target" Type="List" />
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Start" Type="Integer" />
    <Parameter Name="End" Type="Integer" />
    <DocumentationString>Returns a list that is Target with Start through End removed and ListVariable inserted at Start.  Returns a list replacing the slice of the Target list from Start to End with the specified ListVariable.  Start and End are inclusive, so 0, 1 would replace the first two entries and 0, 0 would replace only the first list entry.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListSort" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="ListVariable" Type="List" />
    <Parameter Name="Stride" Type="Integer" />
    <Parameter Name="Ascending" Type="Integer" />
    <DocumentationString>Returns the specified list, sorted into blocks of stride in ascending order (if Ascending is TRUE, otherwise descending). Note that sort only works if the first entry of each block is the same datatype.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListStatistics" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Operation" Type="Integer" />
    <Parameter Name="ListVariable" Type="List" />
    <DocumentationString>Performs a statistical aggregate function, specified by a LIST_STAT_* constant, on ListVariables.  This function allows a script to perform a statistical operation as defined by operation on a list composed of integers and floats.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoadURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Text" Type="String" />
    <Parameter Name="URL" Type="String" />
    <DocumentationString>Shows dialog to avatar AvatarID offering to load web page at URL.	If user clicks yes, launches their web browser.  llLoadURL displays a dialogue box to the user, offering to load the specified web page using the default web browser.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLog" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns the natural logarithm of Value. Returns zero if Value &lt;= 0.  Returns the base e (natural) logarithm of the specified Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLog10" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns the base 10 logarithm of Value. Returns zero if Value &lt;= 0.  Returns the base 10 (common) logarithm of the specified Value.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLookAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Target" Type="Vector" />
    <Parameter Name="Strength" Type="Float" />
    <Parameter Name="Damping" Type="Float" />
    <DocumentationString>Cause object name to point its forward axis towards Target, at a force controlled by Strength and Damping.  Good Strength values are around half the mass of the object and good Damping values are less than 1/10th of the Strength.  Asymmetrical shapes require smaller Damping. A Strength of 0.0 cancels the look at.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoopSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Plays specified Sound, looping indefinitely, at Volume (0.0 - 1.0).  Only one sound may be attached to an object at a time.  A second call to llLoopSound with the same key will not restart the sound, but the new volume will be used. This allows control over the volume of already playing sounds.  Setting the volume to 0 is not the same as calling llStopSound; a sound with 0 volume will continue to loop.  To restart the sound from the beginning, call llStopSound before calling llLoopSound again.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoopSoundMaster" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Plays attached Sound, looping at volume (0.0 - 1.0), and declares it a sync master.  Behaviour is identical to llLoopSound, with the addition of marking the source as a "Sync Master", causing "Slave" sounds to sync to it. If there are multiple masters within a viewers interest area, the most audible one (a function of both distance and volume) will win out as the master.  The use of multiple masters within a small area is unlikely to produce the desired effect.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoopSoundSlave" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Plays attached sound looping at volume (0.0 - 1.0), synced to most audible sync master.  Behaviour is identical to llLoopSound, unless there is a "Sync Master" present.  If a Sync Master is already playing the Slave sound will begin playing from the same point the master is in its loop synchronizing the loop points of both sounds.  If a Sync Master is started when the Slave is already playing, the Slave will skip to the correct position to sync with the Master.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeExplosion" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Particles" Type="Integer" />
    <Parameter Name="Scale" Type="Float" />
    <Parameter Name="Velocity" Type="Float" />
    <Parameter Name="Lifetime" Type="Float" />
    <Parameter Name="Arc" Type="Float" />
    <Parameter Name="Texture" Type="String" />
    <Parameter Name="Offset" Type="Vector" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Make a round explosion of particles. Deprecated: Use llParticleSystem instead.  Make a round explosion of particles using texture from the objects inventory. Deprecated: Use llParticleSystem instead.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeFire" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Particles" Type="Integer" />
    <Parameter Name="Scale" Type="Float" />
    <Parameter Name="Velocity" Type="Float" />
    <Parameter Name="Lifetime" Type="Float" />
    <Parameter Name="Arc" Type="Float" />
    <Parameter Name="Texture" Type="String" />
    <Parameter Name="Offset" Type="Vector" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Make fire like particles. Deprecated: Use llParticleSystem instead.  Make fire particles using texture from the objects inventory. Deprecated: Use llParticleSystem instead.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeFountain" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="particles" Type="Integer" />
    <Parameter Name="scale" Type="Float" />
    <Parameter Name="vel" Type="Float" />
    <Parameter Name="lifetime" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="bounce" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="offset" Type="Vector" />
    <Parameter Name="bounce_offset" Type="Float" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Make a fountain of particles. Deprecated: Use llParticleSystem instead.  Make a fountain of particles using texture from the objects inventory. Deprecated: Use llParticleSystem instead.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llMakeFountain" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="particles" Type="Integer" />
    <Parameter Name="scale" Type="Float" />
    <Parameter Name="vel" Type="Float" />
    <Parameter Name="lifetime" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="bounce" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="offset" Type="Vector" />
    <Parameter Name="bounce_offset" Type="Float" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llMakeSmoke" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Particles" Type="Integer" />
    <Parameter Name="Scale" Type="Float" />
    <Parameter Name="Velocity" Type="Float" />
    <Parameter Name="Lifetime" Type="Float" />
    <Parameter Name="Arc" Type="Float" />
    <Parameter Name="Texture" Type="String" />
    <Parameter Name="Offset" Type="Vector" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Make smoke like particles.  Deprecated: Use llParticleSystem instead.  Make smoky particles using texture from the objects inventory. Deprecated: Use llParticleSystem instead.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llManageEstateAccess" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Action" Type="Integer" />
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Adds or removes agents from the estate's agent access or ban lists, or groups to the estate's group access list. Action is one of the ESTATE_ACCESS_ALLOWED_* operations to perform.  Returns an integer representing a boolean, TRUE if the call was successful; FALSE if throttled, invalid action, invalid or null id or object owner is not allowed to manage the estate.  The object owner is notified of any changes, unless PERMISSION_SILENT_ESTATE_MANAGEMENT has been granted to the script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llHashMapDestination" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="RegionName" Type="String" />
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="Direction" Type="Vector" />
    <DocumentationString>Opens world map for avatar who touched is is wearing the script, centred on RegionName with Position highlighted. Only works for scripts attached to avatar, or during touch events.  Direction currently has no effect.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMD5String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Nonce" Type="Integer" />
    <DocumentationString>Returns a string of 32 hex characters that is an RSA Data Security Inc., MD5 Message-Digest Algorithm of Text with Nonce used as the salt.  Returns a 32-character hex string. (128-bit in binary.)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMessageLinked" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Number" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Sends Number, Text, and ID to members of the link set identified by LinkNumber.  LinkNumber is either a linked number (available through llGetLinkNumber) or a LINK_* constant.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMinEventDelay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Delay" Type="Float" />
    <DocumentationString>Set the minimum time between events being handled.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llModifyLand" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Action" Type="Integer" />
    <Parameter Name="Area" Type="Integer" />
    <DocumentationString>Modify land with action (LAND_LEVEL, LAND_RAISE, LAND_LOWER, LAND_SMOOTH, LAND_NOISE, LAND_REVERT) on size (0, 1, 2, corresponding to 2m x 2m, 4m x 4m, 8m x 8m).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llModPow" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Integer" />
    <Parameter Name="Power" Type="Integer" />
    <Parameter Name="Modulus" Type="Integer" />
    <DocumentationString>Returns a Value raised to the Power, mod Modulus. ((a**b)%c) b is capped at 0xFFFF (16 bits).  Returns (Value ^ Power) % Modulus. (Value raised to the Power, Modulus). Value is capped at 0xFFFF (16 bits).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMoveToTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Target" Type="Vector" />
    <Parameter Name="Tau" Type="Float" />
    <DocumentationString>Critically damp to Target in Tau seconds (if the script is physical).  Critically damp to position target in tau-seconds if the script is physical. Good tau-values are greater than 0.2. A tau of 0.0 stops the critical damping.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llNavigateTo" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Location" Type="Vector" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Navigate to destination.  Directs an object to travel to a defined position in the region or adjacent regions.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOffsetTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="OffsetS" Type="Float" />
    <Parameter Name="OffsetT" Type="Float" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Sets the texture S and T offsets for the chosen Face.  If Face is ALL_SIDES this function sets the texture offsets for all faces.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOpenRemoteDataChannel" ReturnType="Void" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Requests a channel to listen for XML-RPC calls. (Deprecated: XML-RPC should not be used. Use http-in instead.)  Will trigger a remote_data event with type = REMOTE_DATA_CHANNEL and a channel ID (key) once it is available.  This channel ID must be referenced in the XML-RPC call to the script (from the internet) -- so the key must somehow get to the external XML-RPC client.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOverMyLand" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Returns TRUE if id ID over land owned by the script owner, otherwise FALSE.  Returns TRUE if key ID is over land owned by the object owner, FALSE otherwise.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOwnerSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>says Text to owner only (if owner is in region).  Says Text to the owner of the object running the script, if the owner has been within the object's simulator since logging into Second Life, regardless of where they may be in-world.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParcelMediaCommandList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="CommandList" Type="List" />
    <DocumentationString>Controls the playback of multimedia resources on a parcel or for an agent, via one or more PARCEL_MEDIA_COMMAND_* arguments specified in CommandList.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParcelMediaQuery" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="QueryList" Type="List" />
    <DocumentationString>Queries the media properties of the parcel containing the script, via one or more PARCEL_MEDIA_COMMAND_* arguments specified in CommandList.  This function will only work if the script is contained within an object owned by the land-owner (or if the land is owned by a group, only if the object has been deeded to the group).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParseString2List" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Separators" Type="List" />
    <Parameter Name="Spacers" Type="List" />
    <DocumentationString>Converts Text into a list, discarding Separators, keeping Spacers (Separators and Spacers must be lists of strings, maximum of 8 each).  Separators and Spacers are lists of strings with a maximum of 8 entries each.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParseStringKeepNulls" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Separators" Type="List" />
    <Parameter Name="Spacers" Type="List" />
    <DocumentationString>Breaks Text into a list, discarding separators, keeping spacers, keeping any null values generated. (separators and spacers must be lists of strings, maximum of 8 each).  llParseStringKeepNulls works almost exactly like llParseString2List, except that if a null is found it will add a null-string instead of discarding it like llParseString2List does.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParticleSystem" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Creates a particle system in the prim the script is attached to, based on Parameters. An empty list removes a particle system from object.  List format is [ rule-1, data-1, rule-2, data-2 ... rule-n, data-n ].</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPassCollisions" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Pass" Type="Integer" />
    <DocumentationString>Configures how collision events are passed to scripts in the linkset.  If Pass == TRUE, collisions involving collision-handling scripted child prims are also passed on to the root prim. If Pass == FALSE (default behavior), such collisions will only trigger events in the affected child prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPassTouches" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Pass" Type="Integer" />
    <DocumentationString>Configures how touch events are passed to scripts in the linkset.  If Pass == TRUE, touches involving touch-handling scripted child prims are also passed on to the root prim. If Pass == FALSE (default behavior), such touches will only trigger events in the affected child prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPatrolPoints" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Points" Type="List" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Patrol a list of points.  Sets the points for a character (llCreateCharacter) to patrol along.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPlaySound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Plays Sound once, at Volume (0.0 - 1.0) and attached to the object.  Only one sound may be attached to an object at a time, and attaching a new sound or calling llStopSound will stop the previously attached sound.  A second call to llPlaySound with the same sound will not restart the sound, but the new volume will be used, which allows control over the volume of already playing sounds.  To restart the sound from the beginning, call llStopSound before calling llPlaySound again.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPlaySoundSlave" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Plays attached Sound once, at Volume (0.0 - 1.0), synced to next loop of most audible sync master.  Behaviour is identical to llPlaySound, unless there is a "Sync Master" present. If a Sync Master is already playing, the Slave sound will not be played until the Master hits its loop point and returns to the beginning.  llPlaySoundSlave will play the sound exactly once; if it is desired to have the sound play every time the Master loops, either use llLoopSoundSlave with extra silence padded on the end of the sound or ensure that llPlaySoundSlave is called at least once per loop of the Master.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPow" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <Parameter Name="Exponent" Type="Float" />
    <DocumentationString>Returns the Value raised to the power Exponent, or returns 0 and triggers Math Error for imaginary results.  Returns the Value raised to the Exponent.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llPow" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="base" Type="Float" />
    <Parameter Name="exponent" Type="Float" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llPreloadSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <DocumentationString>Causes nearby viewers to preload the Sound from the object's inventory.  This is intended to prevent delays in starting new sounds when called upon.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPursue" ReturnType="Void" Subsets="lsl">
    <Parameter Name="TargetID" Type="Key" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Chase after a target.  Causes the character (llCharacter) to pursue the target defined by TargetID.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPushObject" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ObjectID" Type="Key" />
    <Parameter Name="Impulse" Type="Vector" />
    <Parameter Name="AngularImpulse" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Applies Impulse and AngularImpulse to ObjectID.  Applies the supplied impulse and angular impulse to the object specified.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRefreshPrimURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Reloads the web page shown on the sides of the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRegionSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Broadcasts Text to entire region on Channel (except for channel 0).</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llRegionSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llRegionSayTo" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="TargetID" Type="Key" />
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Says Text, on Channel, to avatar or object indicated by TargetID (if within region).  If TargetID is an avatar and Channel is nonzero, Text can be heard by any attachment on the avatar.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReleaseCamera" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Return camera to agent.  Deprecated: Use llClearCameraParams instead.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReleaseControls" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stop taking inputs.  Stop taking inputs from the avatar.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReleaseURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="URL" Type="String" />
    <DocumentationString>Releases the specified URL, which was previously obtained using llRequestURL.  Once released, the URL will no longer be usable.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoteDataReply" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ChannelID" Type="Key" />
    <Parameter Name="MessageID" Type="Key" />
    <Parameter Name="sData" Type="String" />
    <Parameter Name="iData" Type="Integer" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Send an XML-RPC reply to MessageID on ChannelID with payload of string sData and integer iData. Deprecated: Use HTTP functions/events instead.  The size of sData is limited to 254 characters.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoteDataSetRegion" ReturnType="Void" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Use HTTP functions/events instead.  If an object using remote data channels changes regions, you must call this function to re-register the remote data channels.  You do not need to make this call if you don't change regions.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoteLoadScriptPin" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ObjectID" Type="Key" />
    <Parameter Name="ScriptName" Type="String" />
    <Parameter Name="PIN" Type="Integer" />
    <Parameter Name="Running" Type="Integer" />
    <Parameter Name="StartParameter" Type="Integer" />
    <DocumentationString>If the owner of the object containing this script can modify the object identified by the specified object key, and if the PIN matches the PIN previously set using llSetRemoteScriptAccessPin (on the target prim), then the script will be copied into target. Running is a boolean specifying whether the script should be enabled once copied into the target object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveFromLandBanList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Remove avatar from the land ban list.  Remove specified avatar from the land parcel ban list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveFromLandPassList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Remove avatar from the land pass list.  Remove specified avatar from the land parcel pass list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveInventory" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <DocumentationString>Remove the named inventory item.  Remove the named inventory item from the object inventory.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveVehicleFlags" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Vehiclelags" Type="Integer" />
    <DocumentationString>Removes the enabled bits in 'flags'.  Sets the vehicle flags to FALSE. Valid parameters can be found in the vehicle flags constants section.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestAgentData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Data" Type="Integer" />
    <DocumentationString>Requests data about AvatarID. When data is available the dataserver event will be raised.  This function requests data about an avatar. If and when the information is collected, the dataserver event is triggered with the key returned from this function passed in the requested parameter. See the agent data constants (DATA_*) for details about valid values of data and what each will return in the dataserver event.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestDisplayName" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Requests the display name of the agent. When the display name is available the dataserver event will be raised.  The avatar identified does not need to be in the same region or online at the time of the request.  Returns a key that is used to identify the dataserver event when it is raised.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestInventoryData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <DocumentationString>Requests data for the named InventoryItem.  When data is available, the dataserver event will be raised with the key returned from this function in the requested parameter.  The only request currently implemented is to request data from landmarks, where the data returned is in the form "&lt;float, float, float&gt;" which can be cast to a vector. This position is in region local coordinates.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestPermissions" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="PermissionMask" Type="Integer" />
    <DocumentationString>Ask AvatarID to allow the script to perform certain actions, specified in the PermissionMask bitmask. PermissionMask should be one or more PERMISSION_* constants. Multiple permissions can be requested simultaneously by ORing the constants together. Many of the permissions requests can only go to object owner.  This call will not stop script execution. If the avatar grants the requested permissions, the run_time_permissions event will be called.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestSecureURL" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Requests one HTTPS:// (SSL) URL for use by this object. The http_request event is triggered with results.  Returns a key that is the handle used for identifying the request in the http_request event.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestSimulatorData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="RegionName" Type="String" />
    <Parameter Name="Data" Type="Integer" />
    <DocumentationString>Requests the specified Data about RegionName. When the specified data is available, the dataserver event is raised.  Data should use one of the DATA_SIM_* constants.  Returns a dataserver query ID and triggers the dataserver event when data is found.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestURL" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Requests one HTTP:// URL for use by this script. The http_request event is triggered with the result of the request.  Returns a key that is the handle used for identifying the result in the http_request event.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestUsername" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Requests single-word user-name of an avatar. When data is available the dataserver event will be raised.  Requests the user-name of the identified agent. When the user-name is available the dataserver event is raised.  The agent identified does not need to be in the same region or online at the time of the request.  Returns a key that is used to identify the dataserver event when it is raised.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetAnimationOverride" ReturnType="Void" Subsets="lsl">
    <Parameter Name="AnimationState" Type="String" />
    <DocumentationString>Resets the animation of the specified animation state to the default value.  If animation state equals "ALL", then all animation states are reset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetLandBanList" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Removes all residents from the land ban list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetLandPassList" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Removes all residents from the land access/pass list.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetOtherScript" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ScriptName" Type="String" />
    <DocumentationString>Resets the named script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetScript" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Resets the script.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetTime" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the time to zero.  Sets the internal timer to zero.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReturnObjectsByID" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="ObjectIDs" Type="List" />
    <DocumentationString>Return objects using their UUIDs.  Requires the PERMISSION_RETURN_OBJECTS permission and that the script owner owns the parcel the returned objects are in, or is an estate manager or region owner.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReturnObjectsByOwner" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Scope" Type="Integer" />
    <DocumentationString>Return objects based upon their owner and a scope of parcel, parcel owner, or region.  Requires the PERMISSION_RETURN_OBJECTS permission and that the script owner owns the parcel the returned objects are in, or is an estate manager or region owner.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRezAtRoot" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="Velocity" Type="Vector" />
    <Parameter Name="Rotation" Type="Rotation" />
    <Parameter Name="StartParameter" Type="Integer" />
    <DocumentationString>Instantiate owner's InventoryItem at Position with Velocity, Rotation and with StartParameter. The last selected root object's location will be set to Position.  Creates object's inventory item at the given Position, with Velocity, Rotation, and StartParameter.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRezObject" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="Velocity" Type="Vector" />
    <Parameter Name="Rotation" Type="Rotation" />
    <Parameter Name="StartParameter" Type="Integer" />
    <DocumentationString>Instantiate owners InventoryItem at Position with Velocity, Rotation and with start StartParameter.  Creates object's inventory item at Position with Velocity and Rotation supplied. The StartParameter value will be available to the newly created object in the on_rez event or through the llGetStartParameter function.  The Velocity parameter is ignored if the rezzed object is not physical.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Angle" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Returns the rotation angle represented by Rotation.  Returns the angle represented by the Rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Axis" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Returns the rotation axis represented by Rotation.  Returns the axis represented by the Rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Euler" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Returns the Euler representation (roll, pitch, yaw) of Rotation.  Returns the Euler Angle representation of the Rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Fwd" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Returns the forward vector defined by Rotation.  Returns the forward axis represented by the Rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Left" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Returns the left vector defined by Rotation.  Returns the left axis represented by the Rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Up" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Returns the up vector defined by Rotation.  Returns the up axis represented by the Rotation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotateTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Radians" Type="Float" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Sets the texture rotation for the specified Face to angle Radians.  If Face is ALL_SIDES, rotates the texture of all sides.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotBetween" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="Vector1" Type="Vector" />
    <Parameter Name="Vector2" Type="Vector" />
    <DocumentationString>Returns the rotation to rotate Vector1 to Vector2.  Returns the rotation needed to rotate Vector1 to Vector2.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotLookAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <Parameter Name="Strength" Type="Float" />
    <Parameter Name="Damping" Type="Float" />
    <DocumentationString>Cause object to rotate to Rotation, with a force function defined by Strength and Damping parameters. Good strength values are around half the mass of the object and good damping values are less than 1/10th of the strength.  Asymmetrical shapes require smaller damping.  A strength of 0.0 cancels the look at.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotTarget" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <Parameter Name="LeeWay" Type="Float" />
    <DocumentationString>Set rotations with error of LeeWay radians as a rotational target, and return an ID for the rotational target.  The returned number is a handle that can be used in at_rot_target and llRotTargetRemove.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotTargetRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Handle" Type="Integer" />
    <DocumentationString>Removes rotational target number.  Remove rotational target indicated by the handle.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRound" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns Value rounded to the nearest integer.  Returns the Value rounded to the nearest integer.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSameGroup" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Returns TRUE if avatar ID is in the same region and has the same active group, otherwise FALSE.  Returns TRUE if the object or agent identified is in the same simulator and has the same active group as this object. Otherwise, returns FALSE.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Says Text on Channel.  This chat method has a range of 20m radius.  PUBLIC_CHANNEL is the public chat channel that all avatars see as chat text. DEBUG_CHANNEL is the script debug channel, and is also visible to nearby avatars. All other channels are are not sent to avatars, but may be used to communicate with scripts.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScaleByFactor" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="Factor" Type="Float" />
    <DocumentationString>Tries to uniformly scale the object by a multiplicative factor.  Returns TRUE on success or FALSE on failure.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llScaleByFactor" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="scaling_factor" Type="Float" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llScaleTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Horizontal" Type="Float" />
    <Parameter Name="Vertical" Type="Float" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Sets the diffuse texture Horizontal and Vertical repeats on Face of the prim the script is attached to.  If Face == ALL_SIDES, all sides are set in one call.  Negative values for horizontal and vertical will flip the texture.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScriptDanger" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>Returns TRUE if Position is over public land, sandbox land, land that doesn't allow everyone to edit and build, or land that doesn't allow outside scripts.  Returns true if the position is over public land, land that doesn't allow everyone to edit and build, or land that doesn't allow outside scripts.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScriptProfiler" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="State" Type="Integer" />
    <DocumentationString>Enables or disables script profiling options. Currently only supports PROFILE_SCRIPT_MEMORY (Mono only) and PROFILE_NONE.  May significantly reduce script performance.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSendRemoteData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="ChannelID" Type="Key" />
    <Parameter Name="Destination" Type="String" />
    <Parameter Name="Value" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: use HTTP functions and events instead.  Sends an XML-RPC request to Destination through ChannelID with payload of ChannelID (in a string), integer Value and string Text.  Returns a key that is the message_id for the resulting remote_data events.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSensor" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Name" Type="String" />
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Type" Type="Integer" />
    <Parameter Name="Range" Type="Float" />
    <Parameter Name="Arc" Type="Float" />
    <DocumentationString>Performs a single scan for Name and ID with Type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within Range meters and Arc radians of forward vector.  Specifying a blank Name, 0 Type, or NULL_KEY ID will prevent filtering results based on that parameter. A range of 0.0 does not perform a scan.  Results are returned in the sensor and no_sensor events.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSensorRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>removes sensor.  Removes the sensor set by llSensorRepeat.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSensorRepeat" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Name" Type="String" />
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Type" Type="Integer" />
    <Parameter Name="Range" Type="Float" />
    <Parameter Name="Arc" Type="Float" />
    <Parameter Name="Rate" Type="Float" />
    <DocumentationString>Initiates a periodic scan every Rate seconds, for Name and ID with Type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within Range meters and Arc radians of forward vector.  Specifying a blank Name, 0 Type, or NULL_KEY ID will prevent filtering results based on that parameter. A range of 0.0 does not perform a scan.  Results are returned in the sensor and no_sensor events.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetAlpha" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Opacity" Type="Float" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Sets the alpha (opacity) of Face.  Sets the alpha (opacity) value for Face. If Face is ALL_SIDES, sets the alpha for all faces. The alpha value is interpreted as an opacity percentage (1.0 is fully opaque, and 0.2 is mostly transparent). This function will clamp alpha values less than 0.1 to 0.1 and greater than 1.0 to 1.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetAngularVelocity" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AngVel" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Sets an object's angular velocity to AngVel, in local coordinates if Local == TRUE (if the script is physical).  Has no effect on non-physical objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetAnimationOverride" ReturnType="Void" Subsets="lsl">
    <Parameter Name="AnimationState" Type="String" />
    <Parameter Name="AnimationName" Type="String" />
    <DocumentationString>Sets the animation (in object inventory) that will play for the given animation state.  To use this function the script must obtain the PERMISSION_OVERRIDE_ANIMATIONS permission.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetBuoyancy" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Buoyancy" Type="Float" />
    <DocumentationString>Set the tasks buoyancy (0 is none, &lt; 1.0 sinks, 1.0 floats, &gt; 1.0 rises).  Set the object buoyancy. A value of 0 is none, less than 1.0 sinks, 1.0 floats, and greater than 1.0 rises.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetCameraAtOffset" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Sets the camera used in this object, at offset, if an avatar sits on it.  Sets the offset that an avatar's camera will be moved to if the avatar sits on the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetCameraEyeOffset" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Sets the camera eye offset used in this object if an avatar sits on it.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetCameraParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Sets multiple camera parameters at once. List format is [ rule-1, data-1, rule-2, data-2 . . . rule-n, data-n ].</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetClickAction" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Action" Type="Integer" />
    <DocumentationString>Sets the action performed when a prim is clicked upon.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetColor" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Color" Type="Vector" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Sets the color, for the face.  Sets the color of the side specified. If Face is ALL_SIDES, sets the color on all faces.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetContentType" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="HTTPRequestID" Type="Key" />
    <Parameter Name="ContentType" Type="Integer" />
    <DocumentationString>Set the media type of an LSL HTTP server response to ContentType.  HTTPRequestID must be a valid http_request ID. ContentType must be one of the CONTENT_TYPE_* constants.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetDamage" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Damage" Type="Float" />
    <DocumentationString>Sets the amount of damage that will be done to an avatar that this task hits.	Task will be killed.  Sets the amount of damage that will be done to an avatar that this object hits. This object will be destroyed on damaging an avatar, and no collision event is triggered.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetForce" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Force" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Sets Force on object, in object-local coordinates if Local == TRUE (otherwise, the region reference frame is used).  Only works on physical objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetForceAndTorque" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Force" Type="Vector" />
    <Parameter Name="Torque" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Sets the Force and Torque of object, in object-local coordinates if Local == TRUE (otherwise, the region reference frame is used).  Only works on physical objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetHoverHeight" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Height" Type="Float" />
    <Parameter Name="Water" Type="Integer" />
    <Parameter Name="Tau" Type="Float" />
    <DocumentationString>Critically damps a physical object to a Height (either above ground level or above the higher of land and water if water == TRUE).  Do not use with vehicles. Use llStopHover to stop hovering.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetInventoryPermMask" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="InventoryItem" Type="String" />
    <Parameter Name="PermissionFlag" Type="Integer" />
    <Parameter Name="PermissionMask" Type="Integer" />
    <DocumentationString>Sets the given permission mask to the new value on the inventory item.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetKeyframedMotion" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Keyframes" Type="List" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Requests that a non-physical object be key-framed according to key-frame list.  Specify a list of times, positions, and orientations to be followed by an object. The object will be smoothly moved between key-frames by the simulator. Collisions with other non-physical or key-framed objects will be ignored (no script events will fire and collision processing will not occur). Collisions with physical objects will be computed and reported, but the key-framed object will be unaffected by those collisions.  Keyframes is a strided list containing positional, rotational, and time data for each step in the motion.  Options is a list containing optional arguments and parameters (specified by KFM_* constants).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkAlpha" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Opacity" Type="Float" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>If a prim exists in the link chain at LinkNumber, set Face to Opacity.  Sets the Face, on the linked prim specified, to the Opacity.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkCamera" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="EyeOffset" Type="Vector" />
    <Parameter Name="LookOffset" Type="Vector" />
    <DocumentationString>Sets the camera eye offset, and the offset that camera is looking at, for avatars that sit on the linked prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkColor" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Color" Type="Vector" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>If a task exists in the link chain at LinkNumber, set the Face to color.  Sets the color of the linked child's side, specified by LinkNumber.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkMedia" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Link" Type="Integer" />
    <Parameter Name="Face" Type="Integer" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Set the media parameters for a particular face on linked prim, specified by Link. Returns an integer that is a STATUS_* flag which details the success/failure of the operation(s).  MediaParameters is a set of name/value pairs in no particular order. Parameters not specified are unchanged, or if new media is added then set to the default specified.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkPrimitiveParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Set primitive parameters for LinkNumber based on Parameters.  Sets the parameters (or properties) of any linked prim in one step.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkPrimitiveParamsFast" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>Set primitive parameters for LinkNumber based on Parameters, without a delay.  Set parameters for link number, from the list of Parameters, with no built-in script sleep. This function is identical to llSetLinkPrimitiveParams, except without the delay.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Texture" Type="String" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Sets the Texture of Face on a linked prim, specified by LinkNumber. Texture may be a UUID or name of a texture in prim inventory.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkTextureAnim" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="LinkNumber" Type="Integer" />
    <Parameter Name="Mode" Type="Integer" />
    <Parameter Name="Face" Type="Integer" />
    <Parameter Name="SizeX" Type="Integer" />
    <Parameter Name="SizeY" Type="Integer" />
    <Parameter Name="Start" Type="Float" />
    <Parameter Name="Length" Type="Float" />
    <Parameter Name="Rate" Type="Float" />
    <DocumentationString>Animates a texture on the prim specified by LinkNumber, by setting the texture scale and offset.  Mode is a bitmask of animation options.  Face specifies which object face to animate.  SizeX and SizeY specify the number of horizontal and vertical frames.Start specifes the animation start point.  Length specifies the animation duration.  Rate specifies the animation playback rate.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLocalRot" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Sets the rotation of a child prim relative to the root prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetMemoryLimit" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Limit" Type="Integer" />
    <DocumentationString>Requests Limit bytes to be reserved for this script.  Returns TRUE or FALSE indicating whether the limit was set successfully.  This function has no effect if the script is running in the LSO VM.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetObjectDesc" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Description" Type="String" />
    <DocumentationString>Sets the description of the prim to Description.  The description field is limited to 127 characters.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetObjectName" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Name" Type="String" />
    <DocumentationString>Sets the prim's name to Name.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetObjectPermMask" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="PermissionFlag" Type="Integer" />
    <Parameter Name="PermissionMask" Type="Integer" />
    <DocumentationString>Sets the specified PermissionFlag permission to the value specified by PermissionMask on the object the script is attached to.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetParcelMusicURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="URL" Type="String" />
    <DocumentationString>Sets the streaming audio URL for the parcel the object is on.  The object must be owned by the owner of the parcel; if the parcel is group owned the object must be owned by that group.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPayPrice" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Price" Type="Integer" />
    <Parameter Name="QuickButtons" Type="List" />
    <DocumentationString>Sets the default amount when someone chooses to pay this object.  Price is the default price shown in the textu input field.  QuickButtons specifies the 4 payment values shown in the payment dialog's buttons.  Input field and buttons may be hidden with PAY_HIDE constant, and may be set to their default values using PAY_DEFAULT.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPhysicsMaterial" ReturnType="Void" Subsets="lsl">
    <Parameter Name="MaterialBits" Type="Integer" />
    <Parameter Name="GravityMultiplier" Type="Float" />
    <Parameter Name="Restitution" Type="Float" />
    <Parameter Name="Friction" Type="Float" />
    <Parameter Name="Density" Type="Float" />
    <DocumentationString>Sets the selected parameters of the object's physics behavior.  MaterialBits is a bitmask specifying which of the parameters in the other arguments should be applied to the object. GravityMultiplier, Restitution, Friction, and Density are the possible parameters to manipulate.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPos" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>If the object is not physical, this function sets the position of the prim.  If the script is in a child prim, Position is treated as root relative and the link-set is adjusted.  If the prim is the root prim, the entire object is moved (up to 10m) to Position in region coordinates.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPrimitiveParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Parameters" Type="List" />
    <DocumentationString>This function changes the many properties (or "parameters") of a prim in one operation. Parameters is a list of changes.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPrimMediaParams" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Face" Type="Integer" />
    <Parameter Name="MediaParameters" Type="List" />
    <DocumentationString>Sets the MediaParameters for a particular Face on the prim. Returns an integer that is a STATUS_* flag which details the success/failure of the operation(s).  MediaParameters is a set of name/value pairs in no particular order. Parameters not specified are unchanged, or if new media is added then set to the default specified.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPrimURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="URL" Type="String" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Use llSetPrimMediaParams instead.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetRegionPos" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>Attempts to move the object so that the root prim is within 0.1m of Position.  Returns an integer boolean, TRUE if the object is successfully placed within 0.1 m of Position, FALSE otherwise.  Position may be any location within the region or up to 10m across a region border.  If the position is below ground, it will be set to the ground level at that x,y location.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetRemoteScriptAccessPin" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="PIN" Type="Integer" />
    <DocumentationString>If PIN is set to a non-zero number, the task will accept remote script loads via llRemoteLoadScriptPin() if it passes in the correct PIN. Othersise, llRemoteLoadScriptPin() is ignored.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetRot" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>If the object is not physical, this function sets the rotation of the prim.  If the script is in a child prim, Rotation is treated as root relative and the link-set is adjusted.  If the prim is the root prim, the entire object is rotated to Rotation in the global reference frame.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetScale" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Scale" Type="Vector" />
    <DocumentationString>Sets the prim's scale (size) to Scale.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetScriptState" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ScriptName" Type="String" />
    <Parameter Name="Running" Type="Integer" />
    <DocumentationString>Enable or disable the script Running state of Script in the prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetSitText" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Displays Text rather than 'Sit' in the viewer's context menu.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetSoundQueueing" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="QueueEnable" Type="Integer" />
    <DocumentationString>Sets whether successive calls to llPlaySound, llLoopSound, etc., (attached sounds) interrupt the currently playing sound.  The default for objects is FALSE. Setting this value to TRUE will make the sound wait until the current playing sound reaches its end. The queue is one level deep.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetSoundRadius" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Radius" Type="Float" />
    <DocumentationString>Limits radius for audibility of scripted sounds (both attached and triggered) to distance Radius.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetStatus" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Status" Type="Integer" />
    <Parameter Name="Value" Type="Integer" />
    <DocumentationString>Sets object status specified in Status bitmask (e.g. STATUS_PHYSICS|STATUS_PHANTOM) to boolean Value.  For a full list of STATUS_* constants, see wiki documentation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetText" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Color" Type="Vector" />
    <Parameter Name="Opacity" Type="Float" />
    <DocumentationString>Causes Text to float above the prim, using the specified Color and Opacity.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Texture" Type="String" />
    <Parameter Name="Face" Type="Integer" />
    <DocumentationString>Applies Texture to Face of prim.  Texture may be a UUID or name of a texture in prim inventory.  If Face is ALL_SIDES, set the texture on all faces.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTextureAnim" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Mode" Type="Integer" />
    <Parameter Name="Face" Type="Integer" />
    <Parameter Name="SizeX" Type="Integer" />
    <Parameter Name="SizeY" Type="Integer" />
    <Parameter Name="Start" Type="Float" />
    <Parameter Name="Length" Type="Float" />
    <Parameter Name="Rate" Type="Float" />
    <DocumentationString>Animates a texture by setting the texture scale and offset.  Mode is a bitmask of animation options.  Face specifies which object face to animate.  SizeX and SizeY specify the number of horizontal and vertical frames.Start specifes the animation start point.  Length specifies the animation duration.  Rate specifies the animation playback rate.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTimerEvent" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Rate" Type="Float" />
    <DocumentationString>Causes the timer event to be triggered every Rate seconds.   Passing in 0.0 stops further timer events.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTorque" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Torque" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>Sets the Torque acting on the script's object, in object-local coordinates if Local == TRUE (otherwise, the region reference frame is used).  Only works on physical objects.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTouchText" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Displays Text in the viewer context menu that acts on a touch.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleFlags" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Flags" Type="Integer" />
    <DocumentationString>Enables the vehicle flags specified in the Flags bitmask.  Valid parameters can be found in the wiki documentation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleFloatParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ParameterName" Type="Integer" />
    <Parameter Name="ParameterValue" Type="Float" />
    <DocumentationString>Sets a vehicle float parameter.  Valid parameters can be found in the wiki documentation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleRotationParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ParameterName" Type="Integer" />
    <Parameter Name="ParameterValue" Type="Rotation" />
    <DocumentationString>Sets a vehicle rotation parameter.  Valid parameters can be found in the wiki documentation.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llSetVehicleRotationParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="param" Type="Integer" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llSetVehicleType" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Type" Type="Integer" />
    <DocumentationString>Activates the vehicle action on the object with vehicle preset Type.  Valid Types and an explanation of their characteristics can be found in wiki documentation.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleVectorParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="ParameterName" Type="Integer" />
    <Parameter Name="ParameterValue" Type="Vector" />
    <DocumentationString>Sets a vehicle vector parameter.  Valid parameters can be found in the wiki documentation.</DocumentationString>
  </LibraryFunction>
  <!--   <LibraryFunction Name="llSetVehicleVectorParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="param" Type="Integer" />
    <Parameter Name="vec" Type="Vector" />
    <DocumentationString />
  </LibraryFunction> -->
  <LibraryFunction Name="llSetVelocity" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Velocity" Type="Vector" />
    <Parameter Name="Local" Type="Integer" />
    <DocumentationString>If the object is physics-enabled, sets the object's linear velocity to Velocity.  If Local==TRUE, Velocity is treated as a local directional vector; otherwise, Velocity is treated as a global directional vector.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSHA1String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Returns a string of 40 hex characters that is the SHA1 security Hash of Text.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llShout" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Shouts Text on Channel.  This chat method has a range of 100m radius.  PUBLIC_CHANNEL is the public chat channel that all avatars see as chat text. DEBUG_CHANNEL is the script debug channel, and is also visible to nearby avatars. All other channels are are not sent to avatars, but may be used to communicate with scripts.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSin" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Theta" Type="Float" />
    <DocumentationString>Returns the sine of Theta (Theta in radians).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSitTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <Parameter Name="Rotation" Type="Rotation" />
    <DocumentationString>Set the sit location for this object. If offset == ZERO_VECTOR, clears the sit target.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSleep" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Time" Type="Float" />
    <DocumentationString>Put script to sleep for Time seconds.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <Parameter Name="Queue" Type="Integer" />
    <Parameter Name="Loop" Type="Integer" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Use llPlaySound instead.  Plays Sound at Volume and specifies whether the sound should loop and/or be enqueued.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSoundPreload" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Use llPreloadSound instead.  Preloads a sound on viewers within range.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSqrt" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Value" Type="Float" />
    <DocumentationString>Returns the square root of Value.  Triggers a math runtime error for imaginary results (if Value &lt; 0.0).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStartAnimation" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Animation" Type="String" />
    <DocumentationString>This function plays the specified animation from playing on the avatar who received the script's most recent permissions request.  Animation may be an animation in task inventory or a built-in animation.  Requires PERMISSION_TRIGGER_ANIMATION.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopAnimation" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Animation" Type="String" />
    <DocumentationString>This function stops the specified animation on the avatar who received the script's most recent permissions request.  Animation may be an animation in task inventory, a built-in animation, or the uuid of an animation.  Requires PERMISSION_TRIGGER_ANIMATION.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopHover" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stop hovering to a height (due to llSetHoverHeight()).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopLookAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stop causing object to point at a target (due to llLookAt() or llRotLookAt()).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopMoveToTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops critically damped motion (due to llMoveToTarget()).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops playback of the currently attached sound.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStringLength" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Returns an integer that is the number of characters in Text (not counting the null).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStringToBase64" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Returns the string Base64 representation of the input string.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStringTrim" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <Parameter Name="TrimType" Type="Integer" />
    <DocumentationString>
      Outputs a string, eliminating white-space from the start and/or end of the input string Text.  Valid options for TrimType:
      STRING_TRIM_HEAD: trim all leading spaces in Text
      STRING_TRIM_TAIL: trim all trailing spaces in Text
      STRING_TRIM: trim all leading and trailing spaces in Text.
    </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSubStringIndex" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Sequence" Type="String" />
    <DocumentationString>Returns an integer that is the index in Text where string pattern Sequence first appears. Returns -1 if not found.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTakeCamera" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Use llSetCameraParams instead.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTakeControls" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Controls" Type="Integer" />
    <Parameter Name="Accept" Type="Integer" />
    <Parameter Name="PassOn" Type="Integer" />
    <DocumentationString>Take controls from the agent the script has permissions for.  If (Accept == (Controls &amp; input)), send input to the script.  PassOn determines whether Controls also perform their normal functions.  Requires the PERMISSION_TAKE_CONTROLS permission to run.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTan" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Theta" Type="Float" />
    <DocumentationString>Returns the tangent of Theta (Theta in radians).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTarget" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="Range" Type="Float" />
    <DocumentationString>This function is to have the script know when it has reached a position.  It registers a Position with a Range that triggers at_target and not_at_target events continuously until unregistered.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTargetOmega" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Axis" Type="Vector" />
    <Parameter Name="SpinRate" Type="Float" />
    <Parameter Name="Gain" Type="Float" />
    <DocumentationString>Attempt to spin at SpinRate with strength Gain on Axis.  A spin rate of 0.0 cancels the spin. This function always works in object-local coordinates.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTargetRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Target" Type="Integer" />
    <DocumentationString>Removes positional target Handle registered with llTarget.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTeleportAgent" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="LandmarkName" Type="String" />
    <Parameter Name="Position" Type="Vector" />
    <Parameter Name="LookAtPoint" Type="Vector" />
    <DocumentationString>Requests a teleport of avatar to a landmark stored in the object's inventory. If no landmark is provided (an empty string), the avatar is teleported to the location position in the current region. In either case, the avatar is turned to face the position given by look_at in local coordinates.  Requires the PERMISSION_TELEPORT permission. This function can only teleport the owner of the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTeleportAgentGlobalCoords" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="GlobalPosition" Type="Vector" />
    <Parameter Name="RegionPosition" Type="Vector" />
    <Parameter Name="LookAtPoint" Type="Vector" />
    <DocumentationString>Teleports an agent to the RegionPosition local coordinates within a region which is specified by the GlobalPosition global coordinates. The agent lands facing the position defined by LookAtPoint local coordinates.  Requires the PERMISSION_TELEPORT permission. This function can only teleport the owner of the object.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTeleportAgentHome" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>Teleport agent over the owner's land to agent's home location.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTextBox" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Text" Type="String" />
    <Parameter Name="Channel" Type="Integer" />
    <DocumentationString>Opens a dialog for the specified avatar with message Text, which contains a text box for input. Any text that is entered is said on the specified Channel (as if by the avatar) when the "OK" button is clicked.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llToLower" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Returns a string that is Text with all lower-case characters.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llToUpper" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Returns a string that is Text with all upper-case characters.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTransferLindenDollars" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Amount" Type="Integer" />
    <DocumentationString>Transfer Amount of linden dollars (L$) from script owner to AvatarID. Returns a key to a corresponding transaction_result event for the success of the transfer.  Attempts to send the amount of money to the specified avatar, and trigger a transaction_result event identified by the returned key.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTriggerSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <DocumentationString>Plays Sound at Volume (0.0 - 1.0), centered at but not attached to object.  There is no limit to the number of triggered sounds which can be generated by an object, and calling llTriggerSound does not affect the attached sounds created by llPlaySound and llLoopSound. This is very useful for things like collision noises, explosions, etc. There is no way to stop or alter the volume of a sound triggered by this function.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTriggerSoundLimited" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Sound" Type="String" />
    <Parameter Name="Volume" Type="Float" />
    <Parameter Name="TNE" Type="Vector" />
    <Parameter Name="BSW" Type="Vector" />
    <DocumentationString>Plays Sound at Volume (0.0 - 1.0), centered at but not attached to object, limited to axis-aligned bounding box defined by vectors top-north-east (TNE) and bottom-south-west (BSW).  There is no limit to the number of triggered sounds which can be generated by an object, and calling llTriggerSound does not affect the attached sounds created by llPlaySound and llLoopSound. This is very useful for things like collision noises, explosions, etc. There is no way to stop or alter the volume of a sound triggered by this function.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUnescapeURL" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="URL" Type="String" />
    <DocumentationString>Returns the string that is the URL unescaped, replacing "%20" with spaces, etc., version of URL.  This function can output raw UTF-8 strings.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUnSit" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>If agent identified by AvatarID is sitting on the object the script is attached to or is over land owned by the objects owner, the agent is forced to stand up.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUpdateCharacter" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Updates settings for a pathfinding character.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVecDist" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Location1" Type="Vector" />
    <Parameter Name="Location2" Type="Vector" />
    <DocumentationString>Returns the distance between Location1 and Location2.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVecMag" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Vector" Type="Vector" />
    <DocumentationString>Returns the magnitude of the vector.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVecNorm" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Vector" Type="Vector" />
    <DocumentationString>Returns normalized vector.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVolumeDetect" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="DetectEnabled" Type="Integer" />
    <DocumentationString>If DetectEnabled = TRUE, object becomes phantom but triggers collision_start and collision_end events when other objects start and stop interpenetrating.  If another object (including avatars) interpenetrates it, it will get a collision_start event.  When an object stops interpenetrating, a collision_end event is generated. While the other is inter-penetrating, collision events are NOT generated.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWanderWithin" ReturnType="Void" Subsets="lsl">
    <Parameter Name="Origin" Type="Vector" />
    <Parameter Name="Area" Type="Vector" />
    <Parameter Name="Options" Type="List" />
    <DocumentationString>Wander within a specified volume.  Sets a character to wander about a central spot within a specified area.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWater" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Returns the water height below the object position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWhisper" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>Whispers Text on Channel.  This chat method has a range of 10m radius.  PUBLIC_CHANNEL is the public chat channel that all avatars see as chat text. DEBUG_CHANNEL is the script debug channel, and is also visible to nearby avatars. All other channels are are not sent to avatars, but may be used to communicate with scripts.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWind" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="Offset" Type="Vector" />
    <DocumentationString>Returns the wind velocity at the object position + Offset.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llXorBase64" ReturnType="String" Subsets="lsl">
    <Parameter Name="Text1" Type="String" />
    <Parameter Name="Text2" Type="String" />
    <DocumentationString>Performs an exclusive OR on two Base64 strings and returns a Base64 string. Text2 repeats if it is shorter than Text1.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llXorBase64Strings" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text1" Type="String" />
    <Parameter Name="Text2" Type="String" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Please use llXorBase64 instead.  Incorrectly performs an exclusive OR on two Base64 strings and returns a Base64 string. Text2 repeats if it is shorter than Text1.  Retained for backwards compatibility.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llXorBase64StringsCorrect" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="Text1" Type="String" />
    <Parameter Name="Text2" Type="String" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Deprecated: Please use llXorBase64 instead.  Correctly (unless nulls are present) performs an exclusive OR on two Base64 strings and returns a Base64 string.  Text2 repeats if it is shorter than Text1.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAgentInExperience" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="agent" Type="Key" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llCreateKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <Parameter Name="v" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llDataSizeKeyValue" ReturnType="Key" Subsets="lsl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llDeleteKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llGetExperienceDetails" ReturnType="List" Subsets="lsl">
    <Parameter Name="experience_id" Type="Key" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llGetExperienceErrorMessage" ReturnType="String" Subsets="lsl">
    <Parameter Name="error" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llKeyCountKeyValue" ReturnType="Key" Subsets="lsl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llKeysKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="first" Type="Integer" />
    <Parameter Name="count" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llMatchGroup" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="group_keys" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llPointAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llReadKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llRemoteLoadScript" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="running" Type="Integer" />
    <Parameter Name="start_param" Type="Integer" />
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llRequestExperiencePermissions" ReturnType="Void" Subsets="lsl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="name" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llStopPointAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llUpdateKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <Parameter Name="v" Type="String" />
    <Parameter Name="checked" Type="Integer" />
    <Parameter Name="original_value" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="lsGetWindlightScene" ReturnType="List" Subsets="os-lightshare">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Return the current Lightshare settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsSetWindlightScene" ReturnType="Integer" Subsets="os-lightshare">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets the Lightshare scene</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsSetWindlightSceneTargeted" ReturnType="Integer" Subsets="os-lightshare">
    <Parameter Name="rules" Type="List" />
    <Parameter Name="target" Type="String" />
    <DocumentationString>Sets the Lightshare scene for a given avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsClearWindlightScene" ReturnType="Void" Subsets="os-lightshare">
    <DocumentationString>Remove Windlight settings from a region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="print" ReturnType="Void" Subsets="os-lsl">
    <Parameter Name="str" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="SetPrimitiveParamsEx" ReturnType="Void" Subsets="os-lsl">
    <Parameter Name="prim" Type="String" />
    <Parameter Name="rules" Type="List" />
    <Parameter Name="originFunc" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="GetPrimitiveParamsEx" ReturnType="List" Subsets="os-lsl">
    <Parameter Name="prim" Type="String" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="state" ReturnType="Void" Subsets="os-lsl">
    <Parameter Name="newState" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetGridGatekeeperURI" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's Gatekeeper URI as a string.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridCustom" ReturnType="String" Subsets="ossl">
    <Parameter Name="key" Type="String" />
    <DocumentationString>Returns the current grid's GridInfo key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetAvatarHomeURI" ReturnType="String" Subsets="ossl">
    <Parameter Name="uuid" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osFormatString" ReturnType="String" Subsets="ossl">
    <Parameter Name="str" Type="String" />
    <Parameter Name="strings" Type="List" />
    <DocumentationString>Formats the given string using specified parameters</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMatchString" ReturnType="List" Subsets="ossl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <Parameter Name="start" Type="Integer" />
    <DocumentationString>Returns a list containing the matches from the specified string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osReplaceString" ReturnType="String" Subsets="ossl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <Parameter Name="replace" Type="String" />
    <Parameter Name="count" Type="Integer" />
    <Parameter Name="start" Type="Integer" />
    <DocumentationString>Replaces a given string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osLoadedCreationDate" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the creation date of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osLoadedCreationTime" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the creation time of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osLoadedCreationID" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the original UUID of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetLinkPrimitiveParams" ReturnType="List" Subsets="ossl">
    <Parameter Name="linknumber" Type="Integer" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Returns prim params for the prim specified by link_num</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceCreateLink" ReturnType="Void" Subsets="ossl">
    <Parameter Name="target" Type="String" />
    <Parameter Name="parent" Type="Integer" />
    <DocumentationString>osForceCreateLink(key target, int parent);Idential to  except that it doesn't require the link permission to be granted. Attempt to link the script's object with target.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceBreakLink" ReturnType="Void" Subsets="ossl">
    <Parameter Name="linknum" Type="Integer" />
    <DocumentationString>to  except that it doesn't require the link permission to be granted. Delinks the prim with the given link number in a linked object set.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceBreakAllLinks" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Identical to  except that it doesn't require the link permission to be granted. Delinks all prims in the link set.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osIsNpc" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Returns 1 if TRUE, 0 if FALSE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcCreate" ReturnType="String" Subsets="ossl">
    <Parameter Name="user" Type="String" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Creates an NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcCreate" ReturnType="String" Subsets="ossl">
    <Parameter Name="user" Type="String" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="notecard" Type="String" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Creates an NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSaveAppearance" ReturnType="String" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Save the target NPC's current appearance to a notecard in the object's inventory</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcLoadAppearance" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Load the target NPC's appearance from a notecard</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcGetPos" ReturnType="Vector" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Returns current position vector of the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcMoveTo" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <DocumentationString>Moves the target NPC to a location within the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcMoveToTarget" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="target" Type="Vector" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Moves the target NPC to a specified location over a period of time</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcGetOwner" ReturnType="String" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Returns the avatar key for the target NPC's owner</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcGetRot" ReturnType="Rotation" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Returns the rotation of the the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSetRot" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Set the rotation of the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcStopMoveToTarget" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Stop the target NPC's movement</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSay" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC says message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSay" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC says message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcShout" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC shouts message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSit" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="target" Type="String" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Makes the target NPC sit on an object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcStand" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Makes the target NPC stand up</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcRemove" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <DocumentationString>Removes the NPC specified by key npc</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcPlayAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Plays animation on the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcStopAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Stops animation being played by the NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcTouch" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npcLSL_Key" Type="String" />
    <Parameter Name="object_key" Type="String" />
    <Parameter Name="link_num" Type="Integer" />
    <DocumentationString>Makes the target NPC to touch the specified object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcWhisper" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="String" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC whispers message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osOwnerSaveAppearance" ReturnType="String" Subsets="ossl">
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Creates a notecard with the object owner's current appearance inside the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAgentSaveAppearance" ReturnType="String" Subsets="ossl">
    <Parameter Name="agentId" Type="String" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Creates a notecard with the specified avatar's current appearance inside the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGender" ReturnType="String" Subsets="ossl">
    <Parameter Name="rawAvatarId" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetHashMapTexture" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the map texture key for the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRegionHashMapTexture" ReturnType="String" Subsets="ossl">
    <Parameter Name="regionName" Type="String" />
    <DocumentationString>Returns the map texture key for a specified region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRegionStats" ReturnType="List" Subsets="ossl">
    <DocumentationString>Returns the current region' statistics</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRegionSize" ReturnType="Vector" Subsets="ossl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetSimulatorMemory" ReturnType="Integer" Subsets="ossl">
    <DocumentationString>Returns the memory in use by the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osKickAvatar" ReturnType="Void" Subsets="ossl">
    <Parameter Name="FirstName" Type="String" />
    <Parameter Name="SurName" Type="String" />
    <Parameter Name="alert" Type="String" />
    <DocumentationString>Kicks specified avatar out of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetSpeed" ReturnType="Void" Subsets="ossl">
    <Parameter Name="UUID" Type="String" />
    <Parameter Name="SpeedModifier" Type="Float" />
    <DocumentationString>Modify the speed of movement for the given avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetHealth" ReturnType="Float" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <DocumentationString>Return the target avatar's health</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osCauseHealing" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="healing" Type="Float" />
    <DocumentationString>Increase health to the specified avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osCauseDamage" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="damage" Type="Float" />
    <DocumentationString>Causes health damage to the specified avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceOtherSit" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osForceOtherSit" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="target" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetPrimitiveParams" ReturnType="List" Subsets="ossl">
    <Parameter Name="prim" Type="String" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Returns the parameters of a primitive, specified by its key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPrimitiveParams" ReturnType="Void" Subsets="ossl">
    <Parameter Name="prim" Type="String" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets the primitive parameters for the given primitive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetProjectionParams" ReturnType="Void" Subsets="ossl">
    <Parameter Name="projection" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="fov" Type="Float" />
    <Parameter Name="focus" Type="Float" />
    <Parameter Name="amb" Type="Float" />
    <DocumentationString>Sets the project parameters for the given primitive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetProjectionParams" ReturnType="Void" Subsets="ossl">
    <Parameter Name="prim" Type="String" />
    <Parameter Name="projection" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="fov" Type="Float" />
    <Parameter Name="focus" Type="Float" />
    <Parameter Name="amb" Type="Float" />
    <DocumentationString>Sets the project parameters for the given primitive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetAvatarList" ReturnType="List" Subsets="ossl">
    <DocumentationString>Returns a list with the keys, position, and name of each avatar in the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osUnixTimeToTimestamp" ReturnType="String" Subsets="ossl">
    <Parameter Name="time" Type="Integer" />
    <DocumentationString>Returns unix time as a formatted timestamp</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetInventoryDesc" ReturnType="String" Subsets="ossl">
    <Parameter Name="item" Type="String" />
    <DocumentationString>Returns the description of inventory item</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osInviteToGroup" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="agentId" Type="String" />
    <DocumentationString>Invited the specified avatar to the object's current group</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osEjectFromGroup" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="agentId" Type="String" />
    <DocumentationString>Eject the specified avatar from the object's current group</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetTerrainTexture" ReturnType="Void" Subsets="ossl">
    <Parameter Name="level" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <DocumentationString>Set the terrain texture for the current region to a given texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetTerrainTextureHeight" ReturnType="Void" Subsets="ossl">
    <Parameter Name="corner" Type="Integer" />
    <Parameter Name="low" Type="Float" />
    <Parameter Name="high" Type="Float" />
    <DocumentationString>Set the terrain texture height for the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osIsUUID" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="thing" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osMin" ReturnType="Float" Subsets="ossl">
    <Parameter Name="a" Type="Float" />
    <Parameter Name="b" Type="Float" />
    <DocumentationString>Returns the lesser of two numbers</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMax" ReturnType="Float" Subsets="ossl">
    <Parameter Name="a" Type="Float" />
    <Parameter Name="b" Type="Float" />
    <DocumentationString>Returns the greater of two numbers</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRezzingObject" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the key of the object's parent object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetContentType" ReturnType="Void" Subsets="ossl">
    <Parameter Name="id" Type="String" />
    <Parameter Name="type" Type="String" />
    <DocumentationString>Sets a content return type for a </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDropAttachment" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Drops an attachment</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceDropAttachment" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Drops an attachment without a PERMISSION_ATTACH check</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDropAttachmentAt" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Drops an attachment at a given position and rotation</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceDropAttachmentAt" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Drops an attachment at a given position and rotation without a PERMISSION_ATTACH check</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osListenRegex" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="channelID" Type="Integer" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="ID" Type="String" />
    <Parameter Name="msg" Type="String" />
    <Parameter Name="regexBitfield" Type="Integer" />
    <DocumentationString>Filter listen events by regex</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRegexIsMatch" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="input" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <DocumentationString>Returns 1 if the input string matches the regular expression pattern, returns 0 if not</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureURL" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="url" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <DocumentationString>Renders a web texture on the prim containing the script and returns the UUID of the newly created texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureURLBlend" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="url" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <DocumentationString>Allows for two dynamic textures to blend on the prim containing this script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureURLBlendFace" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="url" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="blend" Type="Integer" />
    <Parameter Name="disp" Type="Integer" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Allows for two dynamic textures to blend on the specified face of the prim containing this script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureData" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="data" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <DocumentationString>Renders a dynamically created texture on the prim containing the script and returns the UUID of the newly created texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureDataBlend" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="data" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureDataBlendFace" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="data" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="blend" Type="Integer" />
    <Parameter Name="disp" Type="Integer" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns UUID of the generated texture. Intended to be used with subsequent calls to osSetDynamicTexture* functions in order to modify the texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetTerrainHeight" ReturnType="Float" Subsets="ossl">
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <DocumentationString>Returns the current region's terrain height as a float at the given coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTerrainGetHeight" ReturnType="Float" Subsets="ossl">
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetTerrainHeight" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Sets the current region's terrain height at the given coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTerrainSetHeight" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <Parameter Name="val" Type="Float" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osTerrainFlush" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Updates terrain changes in the grid's database</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRegionRestart" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="seconds" Type="Float" />
    <DocumentationString>Restarts the current region after a specified amount of time (in seconds)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRegionNotice" ReturnType="Void" Subsets="ossl">
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Sends a region notice throughout the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osConsoleCommand" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="Command" Type="String" />
    <DocumentationString>Sends a given console command to the region.;NOTE: There are no security checks with this function. DO NOT USE THIS FUNCTION UNLESS YOU ARE ABSOLUTELY SURE YOU KNOW WHAT YOU ARE DOING.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetParcelMediaURL" ReturnType="Void" Subsets="ossl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>Set parcel media to a given url</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPrimFloatOnWater" ReturnType="Void" Subsets="ossl">
    <Parameter Name="floatYN" Type="Integer" />
    <DocumentationString>Set physical object to float at the given water level</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetParcelSIPAddress" ReturnType="Void" Subsets="ossl">
    <Parameter Name="SIPAddress" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetAgentIP" ReturnType="String" Subsets="ossl">
    <Parameter Name="agent" Type="String" />
    <DocumentationString>Returns the agent's IP Address</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetAgents" ReturnType="List" Subsets="ossl">
    <DocumentationString>Returns a list of all avatars in the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportAgent" ReturnType="Void" Subsets="ossl">
    <Parameter Name="agent" Type="String" />
    <Parameter Name="regionName" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports an agent to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportAgent" ReturnType="Void" Subsets="ossl">
    <Parameter Name="agent" Type="String" />
    <Parameter Name="regionX" Type="Integer" />
    <Parameter Name="regionY" Type="Integer" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports an agent to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportAgent" ReturnType="Void" Subsets="ossl">
    <Parameter Name="agent" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports an agent to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportOwner" ReturnType="Void" Subsets="ossl">
    <Parameter Name="regionName" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports the owner of the object containing the script to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportOwner" ReturnType="Void" Subsets="ossl">
    <Parameter Name="regionX" Type="Integer" />
    <Parameter Name="regionY" Type="Integer" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports the owner of the object containing the script to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportOwner" ReturnType="Void" Subsets="ossl">
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports the owner of the object containing the script to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAvatarPlayAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Plays a given animation on a specified avatar.;No PERMISSION_TRIGGER_ANIMATION check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAvatarStopAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Stops playing an animation on a specified avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceAttachToAvatar" ReturnType="Void" Subsets="ossl">
    <Parameter Name="attachment" Type="Integer" />
    <DocumentationString>Attaches the object to the avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceAttachToAvatarFromInventory" ReturnType="Void" Subsets="ossl">
    <Parameter Name="itemName" Type="String" />
    <Parameter Name="attachment" Type="Integer" />
    <DocumentationString>Attaches given inventory item to the avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceAttachToOtherAvatarFromInventory" ReturnType="Void" Subsets="ossl">
    <Parameter Name="rawAvatarId" Type="String" />
    <Parameter Name="itemName" Type="String" />
    <Parameter Name="attachmentPoint" Type="Integer" />
    <DocumentationString>Attaches given inventory item to a specified avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceDetachFromAvatar" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Detaches the object from the avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNumberOfAttachments" ReturnType="List" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="attachmentPoints" Type="List" />
    <DocumentationString>Returns a strided list of the specified attachment points and the number of attachments on those points</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMessageAttachments" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="message" Type="String" />
    <Parameter Name="attachmentPoints" Type="List" />
    <Parameter Name="flags" Type="Integer" />
    <DocumentationString>Sends a given message to the specified avatar's attachments on the given attachment points</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMovePen" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <DocumentationString>Moves the pen's location to the coordinates specified by the x and y parameters, without drawing anything</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawLine" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="startX" Type="Integer" />
    <Parameter Name="startY" Type="Integer" />
    <Parameter Name="endX" Type="Integer" />
    <Parameter Name="endY" Type="Integer" />
    <DocumentationString>Draws a line on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawLine" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="endX" Type="Integer" />
    <Parameter Name="endY" Type="Integer" />
    <DocumentationString>Draws a line on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawText" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="text" Type="String" />
    <DocumentationString>Renders text on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawEllipse" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <DocumentationString>Draws an ellipse on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawRectangle" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <DocumentationString>Draws a rectangle on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawFilledRectangle" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <DocumentationString>Draws a rectangle on a dynamic texture, and fills it with the current pen color</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawPolygon" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="x" Type="List" />
    <Parameter Name="y" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osDrawFilledPolygon" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="x" Type="List" />
    <Parameter Name="y" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetFontName" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="fontName" Type="String" />
    <DocumentationString>Sets the font to be used by osDrawText</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetFontSize" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="fontSize" Type="Integer" />
    <DocumentationString>Sets the font size to be used in osDrawText</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPenSize" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="penSize" Type="Integer" />
    <DocumentationString>Sets the line thickness to be used when drawing dynamic textures</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPenColor" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="color" Type="String" />
    <DocumentationString>Sets the pen color to be used when drawing dynamic textures</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPenColour" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="colour" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetPenCap" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="direction" Type="String" />
    <Parameter Name="type" Type="String" />
    <DocumentationString>Apply a shape on the end of a line</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawImage" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <Parameter Name="imageUrl" Type="String" />
    <DocumentationString>Retrieves a specified image and draws it at the specified height and width</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetDrawStringSize" ReturnType="Vector" Subsets="ossl">
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="text" Type="String" />
    <Parameter Name="fontName" Type="String" />
    <Parameter Name="fontSize" Type="Integer" />
    <DocumentationString>Returns a vector containing the horizontal and vertical dimensions in pixels of the specified text</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetStateEvents" ReturnType="Void" Subsets="ossl">
    <Parameter Name="events" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osList2Double" ReturnType="Float" Subsets="ossl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>This function converts a value in the specified index of the list src to the double data type. However, OSSL does not have a double data type. C# contains a double type, but the current LSL implementation does not.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetRegionWaterHeight" ReturnType="Void" Subsets="ossl">
    <Parameter Name="height" Type="Float" />
    <DocumentationString>Adjusts water height in current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetRegionSunSettings" ReturnType="Void" Subsets="ossl">
    <Parameter Name="useEstateSun" Type="Integer" />
    <Parameter Name="sunFixed" Type="Integer" />
    <Parameter Name="sunHour" Type="Float" />
    <DocumentationString>Set the current region's sun settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetEstateSunSettings" ReturnType="Void" Subsets="ossl">
    <Parameter Name="sunFixed" Type="Integer" />
    <Parameter Name="sunHour" Type="Float" />
    <DocumentationString>Set current estate's sun settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetCurrentSunHour" ReturnType="Float" Subsets="ossl">
    <DocumentationString>Returns the value of the current region's sun hour</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetSunParam" ReturnType="Float" Subsets="ossl">
    <Parameter Name="param" Type="String" />
    <DocumentationString>Returns region's current sun parameters.;Param are: day_length, year_length, day_night_offset, update_interval.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSunGetParam" ReturnType="Float" Subsets="ossl">
    <Parameter Name="param" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetSunParam" ReturnType="Void" Subsets="ossl">
    <Parameter Name="param" Type="String" />
    <Parameter Name="value" Type="Float" />
    <DocumentationString>Sets the current region's sun parameters.;Param are: day_length, year_length, day_night_offset, update_interval.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSunSetParam" ReturnType="Void" Subsets="ossl">
    <Parameter Name="param" Type="String" />
    <Parameter Name="value" Type="Float" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osWindActiveModelPluginName" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns active wind plugin name, specified by "wind_plugin" in OpenSim.ini</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetWindParam" ReturnType="Void" Subsets="ossl">
    <Parameter Name="plugin" Type="String" />
    <Parameter Name="param" Type="String" />
    <Parameter Name="value" Type="Float" />
    <DocumentationString>Sets value of param property for plugin module.;SimpleRandomWind plugin param is: strength.;ConfigurableWind plugin params are: avgStrength, avgDirection, varStrength, varDirection, rateChange</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetWindParam" ReturnType="Float" Subsets="ossl">
    <Parameter Name="plugin" Type="String" />
    <Parameter Name="param" Type="String" />
    <DocumentationString>Gets the value of param property for plugin module.;SimpleRandomWind plugin param is: strength.;ConfigurableWind plugin params are: avgStrength, avgDirection, varStrength, varDirection, rateChange.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParcelJoin" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos1" Type="Vector" />
    <Parameter Name="pos2" Type="Vector" />
    <DocumentationString>Joins two adjacent parcels within the same region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParcelSubdivide" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos1" Type="Vector" />
    <Parameter Name="pos2" Type="Vector" />
    <DocumentationString>Subdivides a parcel into two adjacent parcels within the same region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetParcelDetails" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets parcel details;PARCEL_DETAILS_NAME, PARCEL_DETAILS_DESC, PARCEL_DETAILS_OWNER, PARCEL_DETAILS_GROUP, PARCEL_DETAILS_CLAIMDATE are implemented</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParcelSetDetails" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetScriptEngineName" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the name of the script engine running on the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetSimulatorVersion" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current simulator version</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osCheckODE" ReturnType="Integer" Subsets="ossl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetPhysicsEngineType" ReturnType="String" Subsets="ossl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osMessageObject" ReturnType="Void" Subsets="ossl">
    <Parameter Name="objectUUID" Type="String" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Sends a specified message to an object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMakeNotecard" ReturnType="Void" Subsets="ossl">
    <Parameter Name="notecardName" Type="String" />
    <Parameter Name="contents" Type="List" />
    <DocumentationString>Creates a notecard with contents of GenericArray</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNotecardLine" ReturnType="String" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="line" Type="Integer" />
    <DocumentationString>Returns a given line in a specified notecard contained in the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNotecard" ReturnType="String" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the full contents of a notecard</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNumberOfNotecardLines" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the number of lines in a notecard</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAvatarName2Key" ReturnType="String" Subsets="ossl">
    <Parameter Name="firstname" Type="String" />
    <Parameter Name="lastname" Type="String" />
    <DocumentationString>Returns the avatar's key from their first and last name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osKey2Name" ReturnType="String" Subsets="ossl">
    <Parameter Name="id" Type="String" />
    <DocumentationString>Returns the avatar's name from their key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridNick" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's nickname</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridName" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridLoginURI" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's LoginURI</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridHomeURI" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's HomeURI</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="modInvokeN" ReturnType="Void" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeS" ReturnType="String" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeI" ReturnType="Integer" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeF" ReturnType="Float" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeK" ReturnType="String" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeV" ReturnType="Vector" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeR" ReturnType="Rotation" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeL" ReturnType="List" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modSendCommand" ReturnType="String" Subsets="os-mod-api">
    <Parameter Name="modules" Type="String" />
    <Parameter Name="command" Type="String" />
    <Parameter Name="k" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physGetEngineType" ReturnType="String" Subsets="os-bullet-physics">
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString>Get physics engine type</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="physAxisLock" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="parms" Type="List" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physSetLinksetType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linksetType" Type="Integer" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString>:Bulletsim: Set linkset type</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="physGetLinksetType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physChangeLinkType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <Parameter Name="typeCode" Type="Integer" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physGetLinkType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physChangeLinkFixed" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physChangeLinkParams" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <Parameter Name="parms" Type="List" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString>Bulletsim: Change link params</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="JsonAttachObjectStore" ReturnType="Key" Subsets="os-json-store">
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonCreateStore" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="value" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonDestroyStore" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonTestStore" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonRezAtRoot" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="item" Type="String" />
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="vel" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <Parameter Name="param" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonReadNotecard" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Parameter Name="notecardIdentifier" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonWriteNotecard" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Parameter Name="name" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonList2Path" ReturnType="String" Subsets="os-json-store">
    <Parameter Name="pathlist" Type="List" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonGetNodeType" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonGetValueType" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonSetValue" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Parameter Name="value" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonSetJson" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Parameter Name="value" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonRemoveValue" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonGetArrayLength" ReturnType="Integer" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonGetValue" ReturnType="String" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonGetJson" ReturnType="String" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonTakeValue" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonTakeValueJson" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonReadValue" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="JsonReadValueJson" ReturnType="Key" Subsets="os-json-store">
    <Parameter Name="storeID" Type="Key" />
    <Parameter Name="path" Type="String" />
    <Property Name="ModInvoke" Value="true" />
    <DocumentationString />
  </LibraryFunction>
  <EventHandler Name="at_rot_target" Subsets="lsl,os-lsl">
    <Parameter Name="TargetNumber" Type="Integer" />
    <Parameter Name="TargetRotation" Type="Rotation" />
    <Parameter Name="CurrentRotation" Type="Rotation" />
    <DocumentationString>This event is triggered when a script comes within a defined angle of a target rotation. The range and rotation, are set by a call to llRotTarget.</DocumentationString>
  </EventHandler>
  <EventHandler Name="at_target" Subsets="lsl,os-lsl">
    <Parameter Name="TargetNumber" Type="Integer" />
    <Parameter Name="TargetPosition" Type="Vector" />
    <Parameter Name="CurrentPosition" Type="Vector" />
    <DocumentationString>This event is triggered when the scripted object comes within a defined range of the target position, defined by the llTarget function call.</DocumentationString>
  </EventHandler>
  <EventHandler Name="attach" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <DocumentationString>This event is triggered whenever an object is attached or detached from an avatar. If it is attached, the key of the avatar it is attached to is passed in, otherwise NULL_KEY is.</DocumentationString>
  </EventHandler>
  <EventHandler Name="changed" Subsets="lsl,os-lsl">
    <Parameter Name="Changed" Type="Integer" />
    <DocumentationString>Triggered when various events change the object. The change argument will be a bit-field of CHANGED_* constants.</DocumentationString>
  </EventHandler>
  <EventHandler Name="collision" Subsets="lsl,os-lsl">
    <Parameter Name="NumberOfCollisions" Type="Integer" />
    <DocumentationString>This event is raised while another object, or avatar, is colliding with the object the script is attached to.  The number of detected objects is passed to the script. Information on those objects may be gathered via the llDetected* functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="collision_end" Subsets="lsl,os-lsl">
    <Parameter Name="NumberOfCollisions" Type="Integer" />
    <DocumentationString>This event is raised when another object, or avatar, stops colliding with the object the script is attached to.  The number of detected objects is passed to the script. Information on those objects may be gathered via the llDetected* library functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="collision_start" Subsets="lsl,os-lsl">
    <Parameter Name="NumberOfCollisions" Type="Integer" />
    <DocumentationString>This event is raised when another object, or avatar, starts colliding with the object the script is attached to.  The number of detected objects is passed to the script. Information on those objects may be gathered via the llDetected* library functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="control" Subsets="lsl,os-lsl">
    <Parameter Name="AvatarID" Type="Key" />
    <Parameter Name="Levels" Type="Integer" />
    <Parameter Name="Edges" Type="Integer" />
    <DocumentationString>Once a script has the ability to grab control inputs from the avatar, this event will be used to pass the commands into the script.  The levels and edges are bit-fields of control constants.</DocumentationString>
  </EventHandler>
  <EventHandler Name="dataserver" Subsets="lsl,os-lsl">
    <Parameter Name="RequestID" Type="Key" />
    <Parameter Name="Data" Type="String" />
    <DocumentationString>This event is triggered when the requested data is returned to the script.  Data may be requested by the llRequestAgentData, llRequestInventoryData, and llGetNotecardLine function calls, for example.</DocumentationString>
  </EventHandler>
  <EventHandler Name="email" Subsets="lsl,os-lsl">
    <Parameter Name="Time" Type="String" />
    <Parameter Name="Address" Type="String" />
    <Parameter Name="Subject" Type="String" />
    <Parameter Name="Body" Type="String" />
    <Parameter Name="NumberRemaining" Type="Integer" />
    <DocumentationString>This event is triggered when an email sent to this script arrives.  The number remaining tells how many more emails are known to be still pending.</DocumentationString>
  </EventHandler>
  <EventHandler Name="http_request" Subsets="lsl,os-lsl">
    <Parameter Name="HTTPRequestID" Type="Key" />
    <Parameter Name="HTTPMethod" Type="String" />
    <Parameter Name="Body" Type="String" />
    <DocumentationString>Triggered when task receives an HTTP request.</DocumentationString>
  </EventHandler>
  <EventHandler Name="http_response" Subsets="lsl,os-lsl">
    <Parameter Name="HTTPRequestID" Type="Key" />
    <Parameter Name="Status" Type="Integer" />
    <Parameter Name="Metadata" Type="List" />
    <Parameter Name="Body" Type="String" />
    <DocumentationString>This event handler is invoked when an HTTP response is received for a pending llHTTPRequest request or if a pending request fails or times out.</DocumentationString>
  </EventHandler>
  <EventHandler Name="land_collision" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>This event is raised when the object the script is attached to is colliding with the ground.</DocumentationString>
  </EventHandler>
  <EventHandler Name="land_collision_end" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>This event is raised when the object the script is attached to stops colliding with the ground.</DocumentationString>
  </EventHandler>
  <EventHandler Name="land_collision_start" Subsets="lsl,os-lsl">
    <Parameter Name="Position" Type="Vector" />
    <DocumentationString>This event is raised when the object the script is attached to begins to collide with the ground.</DocumentationString>
  </EventHandler>
  <EventHandler Name="link_message" Subsets="lsl,os-lsl">
    <Parameter Name="SendersLink" Type="Integer" />
    <Parameter Name="Value" Type="Integer" />
    <Parameter Name="Text" Type="String" />
    <Parameter Name="ID" Type="Key" />
    <DocumentationString>Triggered when object receives a link message via llMessageLinked function call.</DocumentationString>
  </EventHandler>
  <EventHandler Name="listen" Subsets="lsl,os-lsl">
    <Parameter Name="Channel" Type="Integer" />
    <Parameter Name="Name" Type="String" />
    <Parameter Name="ID" Type="Key" />
    <Parameter Name="Text" Type="String" />
    <DocumentationString>This event is raised whenever a chat message matching the constraints set in the llListen command is received. The name and ID of the speaker, as well as the message, are passed in as parameters.  Channel 0 is the public chat channel that all avatars see as chat text. Channels 1 through 2,147,483,648 are private channels that are not sent to avatars but other scripts can listen on those channels.</DocumentationString>
  </EventHandler>
  <EventHandler Name="money" Subsets="lsl,os-lsl">
    <Parameter Name="Payer" Type="Key" />
    <Parameter Name="Amount" Type="Integer" />
    <DocumentationString>This event is triggered when a resident has given an amount of Linden dollars to the object.</DocumentationString>
  </EventHandler>
  <EventHandler Name="moving_end" Subsets="lsl,os-lsl">
    <DocumentationString>Triggered whenever an object with this script stops moving.</DocumentationString>
  </EventHandler>
  <EventHandler Name="moving_start" Subsets="lsl,os-lsl">
    <DocumentationString>Triggered whenever an object with this script starts moving.</DocumentationString>
  </EventHandler>
  <EventHandler Name="no_sensor" Subsets="lsl,os-lsl">
    <DocumentationString>This event is raised when sensors are active, via the llSensor function call, but are not sensing anything.</DocumentationString>
  </EventHandler>
  <EventHandler Name="not_at_rot_target" Subsets="lsl,os-lsl">
    <DocumentationString>When a target is set via the llRotTarget function call, but the script is outside the specified angle this event is raised.</DocumentationString>
  </EventHandler>
  <EventHandler Name="not_at_target" Subsets="lsl,os-lsl">
    <DocumentationString>When a target is set via the llTarget library call, but the script is outside the specified range this event is raised.</DocumentationString>
  </EventHandler>
  <EventHandler Name="object_rez" Subsets="lsl,os-lsl">
    <Parameter Name="RezzedObjectsID" Type="Key" />
    <DocumentationString>Triggered when an object rezzes another object from its inventory via the llRezObject, or similar, functions. The id is the globally unique key for the object rezzed.</DocumentationString>
  </EventHandler>
  <EventHandler Name="on_rez" Subsets="lsl,os-lsl">
    <Parameter Name="StartParameter" Type="Integer" />
    <DocumentationString>Triggered whenever an object is rezzed from inventory or by another object. The start parameter is passed in from the llRezObject call, or zero if from inventory.</DocumentationString>
  </EventHandler>
  <EventHandler Name="path_update" Subsets="lsl">
    <Parameter Name="Type" Type="Integer" />
    <Parameter Name="Reserved" Type="List" />
    <DocumentationString>This event is called to inform the script of changes within the object's path-finding status.</DocumentationString>
  </EventHandler>
  <EventHandler Name="remote_data" Subsets="lsl,os-lsl">
    <Parameter Name="EventType" Type="Integer" />
    <Parameter Name="ChannelID" Type="Key" />
    <Parameter Name="MessageID" Type="Key" />
    <Parameter Name="Sender" Type="String" />
    <Parameter Name="Data" Type="Integer" />
    <Parameter Name="Data_1" Type="String" />
    <DocumentationString>Triggered by various XML-RPC calls with event_type specifying the type of data.</DocumentationString>
  </EventHandler>
  <EventHandler Name="run_time_permissions" Subsets="lsl,os-lsl">
    <Parameter Name="PermissionFlags" Type="Integer" />
    <DocumentationString>Scripts need permission from either the owner or the avatar they wish to act on before they may perform certain functions, such as debiting money from their owners account, triggering an animation on an avatar, or capturing control inputs. The llRequestPermissions library function is used to request these permissions and the various permissions integer constants can be supplied.  The integer returned to this event handler contains the current set of permissions flags, so if permissions equal 0 then no permissions are set.</DocumentationString>
  </EventHandler>
  <EventHandler Name="sensor" Subsets="lsl,os-lsl">
    <Parameter Name="NumberDetected" Type="Integer" />
    <DocumentationString>This event is raised whenever objects matching the constraints of the llSensor command are detected.  The number of detected objects is passed to the script in the parameter. Information on those objects may be gathered via the llDetected* functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="state_entry" Subsets="lsl,os-lsl">
    <DocumentationString>The state_entry event occurs whenever a new state is entered, including at program start, and is always the first event handled.</DocumentationString>
  </EventHandler>
  <EventHandler Name="state_exit" Subsets="lsl,os-lsl">
    <DocumentationString>The state_exit event occurs whenever the state command is used to transition to another state. It is handled before the new states state_entry event.</DocumentationString>
  </EventHandler>
  <EventHandler Name="timer" Subsets="lsl,os-lsl">
    <DocumentationString>This event is raised at regular intervals set by the llSetTimerEvent library function.</DocumentationString>
  </EventHandler>
  <EventHandler Name="touch" Subsets="lsl,os-lsl">
    <Parameter Name="NumberOfTouches" Type="Integer" />
    <DocumentationString>This event is raised while a user is touching the object the script is attached to.  The number of touching objects is passed to the script in the parameter.  Information on those objects may be gathered via the llDetected* library functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="touch_end" Subsets="lsl,os-lsl">
    <Parameter Name="NumberOfTouches" Type="Integer" />
    <DocumentationString>This event is raised when a user stops touching the object the script is attached to. The number of touches is passed to the script in the parameter.  Information on those objects may be gathered via the llDetected* library functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="touch_start" Subsets="lsl,os-lsl">
    <Parameter Name="NumberOfTouches" Type="Integer" />
    <DocumentationString>This event is raised when a user first touches the object the script is attached to. The number of touches is passed to the script in the parameter.  Information on those objects may be gathered via the llDetected() library functions.</DocumentationString>
  </EventHandler>
  <EventHandler Name="transaction_result" Subsets="lsl,os-lsl">
    <Parameter Name="RequestID" Type="Key" />
    <Parameter Name="Success" Type="Integer" />
    <Parameter Name="Message" Type="String" />
    <DocumentationString>Triggered by llTransferMoney() function.</DocumentationString>
  </EventHandler>
  <EventHandler Name="experience_permissions" Subsets="lsl">
    <Parameter Name="agent_id" Type="Key" />
    <DocumentationString />
  </EventHandler>
  <EventHandler Name="experience_permissions_denied" Subsets="lsl">
    <Parameter Name="agent_id" Type="Key" />
    <Parameter Name="reason" Type="Integer" />
    <DocumentationString />
  </EventHandler>
  <LibraryConstant Name="ACTIVE" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Objects in world that are running a script or currently physically moving.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Objects in world that are agents.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_ALWAYS_RUN" Type="Integer" Value="4096" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_ATTACHMENTS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>The agent has attachments.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_AUTOPILOT" Type="Integer" Value="8192" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_AWAY" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_BUSY" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_BY_LEGACY_NAME" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_BY_USERNAME" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_CROUCHING" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_FLYING" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>The agent is flying.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_IN_AIR" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_LIST_PARCEL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Agents on the same parcel where the script is running.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_LIST_PARCEL_OWNER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Agents on any parcel in the region where the parcel owner is the same as the owner of the parcel under the scripted object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_LIST_REGION" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>All agents in the region.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_MOUSELOOK" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_ON_OBJECT" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_SCRIPTED" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>The agent has scripted attachments.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_SITTING" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_TYPING" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AGENT_WALKING" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ALL_SIDES" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ANIM_ON" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Texture animation is on.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_AVATAR_CENTER" Type="Integer" Value="40" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's geometric centre.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_BACK" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's back.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_BELLY" Type="Integer" Value="28" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's belly.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_CHEST" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's chest.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_CHIN" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's chin.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HEAD" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's head.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_BOTTOM" Type="Integer" Value="37" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_BOTTOM_LEFT" Type="Integer" Value="36" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_BOTTOM_RIGHT" Type="Integer" Value="38" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_CENTER_1" Type="Integer" Value="35" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_CENTER_2" Type="Integer" Value="31" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_TOP_CENTER" Type="Integer" Value="33" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_TOP_LEFT" Type="Integer" Value="34" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_TOP_RIGHT" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LEAR" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left ear.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LEFT_PEC" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left pectoral.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LEYE" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left eye.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LFOOT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left foot.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LHAND" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left hand.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LHIP" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left hip.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LLARM" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left lower arm.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LLLEG" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's lower left leg.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LPEC" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Attach to the avatar's right pectoral. (Deprecated, use ATTACH_RIGHT_PEC)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LSHOULDER" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left shoulder.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LUARM" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's left upper arm.</DocumentationString>
  </LibraryConstant>
  <!-- EDITED ATTACH_LULEG -->
  <LibraryConstant Name="ATTACH_LULEG" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's lower upper leg.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_MOUTH" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's mouth.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_NECK" Type="Integer" Value="39" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's neck.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_NOSE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's nose.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_PELVIS" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's pelvis.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_REAR" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right ear.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_REYE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right eye.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RFOOT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right foot.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RHAND" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right hand.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RHIP" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right hip.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RIGHT_PEC" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right pectoral.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RLARM" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right lower arm.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RLLEG" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right lower leg.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RPEC" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Attach to the avatar's left pectoral. (deprecated, use ATTACH_LEFT_PEC)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RSHOULDER" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right shoulder.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RUARM" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right upper arm.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RULEG" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString>Attach to the avatar's right upper leg.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AVOID_CHARACTERS" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AVOID_DYNAMIC_OBSTACLES" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="AVOID_NONE" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_ACTIVE" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_BEHINDNESS_ANGLE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_BEHINDNESS_LAG" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_DISTANCE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_LAG" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_LOCKED" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_THRESHOLD" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_PITCH" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <!-- EDITED CAMERA_POSITION_LAG -->
  <LibraryConstant Name="CAMERA_POSITION_LAG" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <!-- EDITED CAMERA_POSITION_LAG -->
  <LibraryConstant Name="CAMERA_POSITION_LOCKED" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_THRESHOLD" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_ALLOWED_DROP" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>The object inventory has changed because an item was added through the llAllowInventoryDrop interface.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_COLOR" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>The object color has changed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_INVENTORY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>The object inventory has changed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_LINK" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>The object has linked or its links were broken.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_MEDIA" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_OWNER" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_REGION" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_REGION_START" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_SCALE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>The object scale (size) has changed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_SHAPE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>The object base shape has changed, e.g., a box to a cylinder.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_TELEPORT" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_TEXTURE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>The texture offset, scale rotation, or simply the object texture has changed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES" Type="Integer" Value="14" Subsets="lsl">
    <DocumentationString>If set to false, character will not attempt to catch up on lost time when pathfinding performance is low, potentially providing more reliable movement (albeit while potentially appearing to be more stuttery). Default is true to match pre-existing behavior.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_AVOIDANCE_MODE" Type="Integer" Value="5" Subsets="lsl">
    <DocumentationString>Allows you to specify that a character should not try to avoid other characters, should not try to avoid dynamic obstacles (relatively fast moving objects and avatars), or both.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_CMD_JUMP" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Makes the character jump. Requires an additional parameter, the height to jump, between 0.1m and 2.0m. This must be provided as the first element of the llExecCharacterCmd option list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_CMD_SMOOTH_STOP" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_CMD_STOP" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Stops any current pathfinding operation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_DESIRED_SPEED" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Speed of pursuit in meters per second.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_DESIRED_TURN_SPEED" Type="Integer" Value="12" Subsets="lsl">
    <DocumentationString>The character's maximum speed while turning about the Z axis. - Note that this is only loosely enforced.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_LENGTH" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Set collision capsule length - cannot be less than two times the radius.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_ACCEL" Type="Integer" Value="8" Subsets="lsl">
    <DocumentationString>The character's maximum acceleration rate.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_DECEL" Type="Integer" Value="9" Subsets="lsl">
    <DocumentationString>The character's maximum deceleration rate.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_SPEED" Type="Integer" Value="13" Subsets="lsl">
    <DocumentationString>The character's maximum speed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_TURN_RADIUS" Type="Integer" Value="10" Subsets="lsl">
    <DocumentationString>The character's turn radius when travelling at CHARACTER_MAX_TURN_SPEED.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_ORIENTATION" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Valid options are: VERTICAL, HORIZONTAL.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_RADIUS" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Set collision capsule radius.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_STAY_WITHIN_PARCEL" Type="Integer" Value="15" Subsets="lsl">
    <DocumentationString>Determines whether a character can leave its starting parcel.  Takes a boolean parameter. If TRUE, the character cannot voluntarilly leave the parcel, but can return to it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE" Type="Integer" Value="6" Subsets="lsl">
    <DocumentationString>Specifies which walk-ability coefficient will be used by this character.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_A" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_B" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_C" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_D" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_NONE" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_BUY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is clicked, the buy dialog is opened.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Performs the default action: when the prim is clicked, touch events are triggered.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_OPEN" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is clicked, the object inventory dialog is opened.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_OPEN_MEDIA" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is touched, the web media dialog is opened.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_PAY" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is clicked, the pay dialog is opened.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_PLAY" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is clicked, html-on-a-prim is enabled?</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_SIT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is clicked, the avatar sits upon it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_TOUCH" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>When the prim is clicked, touch events are triggered.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_ATOM" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>"application/atom+xml"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_FORM" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>"application/x-www-form-urlencoded"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_HTML" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>"text/html", only valid for embedded browsers on content owned by the person viewing. Falls back to "text/plain" otherwise.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_JSON" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>"application/json"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_LLSD" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>"application/llsd+xml"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_RSS" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>"application/rss+xml"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_TEXT" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>"text/plain"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_XHTML" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>"application/xhtml+xml"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_XML" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>"application/xml"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_BACK" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar move back control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_DOWN" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar move down control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_FWD" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar move forward control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_LBUTTON" Type="Integer" Value="268435456" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar left button control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_LEFT" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar move left control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_ML_LBUTTON" Type="Integer" Value="1073741824" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar left button control while in mouse look.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_RIGHT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar move right control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_ROT_LEFT" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar rotate left control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_ROT_RIGHT" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar rotate right control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_UP" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Test for the avatar move up control.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_BORN" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>The date the agent was born, returned in ISO 8601 format of YYYY-MM-DD.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_NAME" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>The name of the agent.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_ONLINE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>TRUE for online, FALSE for offline.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_PAYINFO" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="DATA_RATING" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the agent ratings as a comma separated string of six integers. They are: (1 Positive rated behaviour) (2 Negative rated behaviour) (3 Positive rated appearance) (4 Negative rated appearance) (5 Positive rated building) (6 Negative rated building)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_POS" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_RATING" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_STATUS" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="DEBUG_CHANNEL" Type="Integer" Value="2147483647" Subsets="lsl,os-lsl">
    <DocumentationString>DEBUG_CHANNEL is an integer constant that, when passed to llSay, llWhisper, or llShout as a channel parameter, will print text to the Script Warning/Error Window.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DEG_TO_RAD" Type="Float" Value="0.017453292519943295769236907684886" Subsets="lsl,os-lsl">
    <DocumentationString>0.01745329 - Number of radians per degree. You can use this to convert degrees to radians by multiplying the degrees by this number.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DENSITY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetPhysicsMaterial to enable the density value. Must be between 1.0 and 22587.0 (in Kg/m^3 -- see if you can figure out what 22587 represents)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="EOF" Type="String" Value="&#xA;&#xA;&#xA;" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates the last line of a notecard was read.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ERR_GENERIC" Type="Integer" Value="-1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ERR_MALFORMED_PARAMS" Type="Integer" Value="-3" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ERR_PARCEL_PERMISSIONS" Type="Integer" Value="-2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ERR_RUNTIME_PERMISSIONS" Type="Integer" Value="-4" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ERR_THROTTLED" Type="Integer" Value="-5" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_AGENT_ADD" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Add the agent to this estate's Allowed Residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_AGENT_REMOVE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Remove the agent from this estate's Allowed Residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_GROUP_ADD" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Add the group to this estate's Allowed groups list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_GROUP_REMOVE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Remove the group from this estate's Allowed groups list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_BANNED_AGENT_ADD" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Add the agent to this estate's Banned residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_BANNED_AGENT_REMOVE" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Remove the agent from this estate's Banned residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="FALSE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>An integer constant for boolean comparisons. Has the value '0'.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="FORCE_DIRECT_PATH" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Makes character navigate in a straight line toward position. May be set to TRUE or FALSE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="FRICTION" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetPhysicsMaterial to enable the friction value. Must be between 0.0 and 255.0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="GCNP_RADIUS" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="GCNP_STATIC" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="GRAVITY_MULTIPLIER" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetPhysicsMaterial to enable the gravity multiplier value. Must be between -1.0 and +28.0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HORIZONTAL" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="HTTP_BODY_MAXLENGTH" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="HTTP_BODY_TRUNCATED" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="HTTP_CUSTOM_HEADER" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Add an extra custom HTTP header to the request. The first string is the name of the parameter to change, e.g. "Pragma", and the second string is the value, e.g. "no-cache". Up to 8 custom headers may be configured per request. Note that certain headers, such as the default headers, are blocked for security reasons.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_METHOD" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="HTTP_MIMETYPE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="HTTP_PRAGMA_NO_CACHE" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Allows enabling/disabling of the "Pragma: no-cache" header.  Usage: [HTTP_PRAGMA_NO_CACHE, integer SendHeader]. When SendHeader is TRUE, the "Pragma: no-cache" header is sent by the script. This matches the default behavior. When SendHeader is FALSE, no "Pragma" header is sent by the script.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_VERBOSE_THROTTLE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="HTTP_VERIFY_CERT" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_ALL" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_ANIMATION" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_BODYPART" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_CLOTHING" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_GESTURE" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_LANDMARK" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_NONE" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_NOTECARD" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_OBJECT" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_SCRIPT" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_SOUND" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_TEXTURE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_APPEND" Type="Integer" Value="-1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_ARRAY" Type="String" Value="﷒" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_DELETE" Type="String" Value="﷘" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_FALSE" Type="String" Value="﷗" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_INVALID" Type="String" Value="﷐" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_NULL" Type="String" Value="﷕" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_NUMBER" Type="String" Value="﷓" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_OBJECT" Type="String" Value="﷑" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_STRING" Type="String" Value="﷔" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_TRUE" Type="String" Value="﷖" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_PAUSE" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_COMMAND.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_PLAY" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_COMMAND.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_STOP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_COMMAND.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_COMMAND" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="KFM_DATA" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="KFM_FORWARD" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_MODE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_LOOP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_MODE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_MODE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="KFM_PING_PONG" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_MODE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_REVERSE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_MODE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_ROTATION" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_DATA.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_TRANSLATION" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>For use with KFM_DATA.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_LARGE_BRUSH" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Use a large brush size.  NOTE: This value is incorrect, a large brush should be 2.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_LEVEL" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Action to level the land.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_LOWER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Action to lower the land.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_MEDIUM_BRUSH" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Use a medium brush size.  NOTE: This value is incorrect, a medium brush should be 1.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_NOISE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LAND_RAISE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Action to raise the land.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_REVERT" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LAND_SMALL_BRUSH" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Use a small brush size.  NOTE: This value is incorrect, a small brush should be 0.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_SMOOTH" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LINK_ALL_CHILDREN" Type="Integer" Value="-3" Subsets="lsl,os-lsl">
    <DocumentationString>This targets every object except the root in the linked set.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_ALL_OTHERS" Type="Integer" Value="-2" Subsets="lsl,os-lsl">
    <DocumentationString>This targets every object in the linked set except the object with the script.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_ROOT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>This targets the root of the linked set.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_SET" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>This targets every object in the linked set.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_THIS" Type="Integer" Value="-4" Subsets="lsl,os-lsl">
    <DocumentationString>The link number of the prim containing the script.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_GEOMETRIC_MEAN" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MAX" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MEAN" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MEDIAN" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MIN" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_NUM_COUNT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_RANGE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_STD_DEV" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_SUM" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_SUM_SQUARES" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LOOP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Loop the texture animation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="MASK_BASE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="MASK_EVERYONE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="MASK_GROUP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="MASK_NEXT" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="MASK_OWNER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="NULL_KEY" Type="String" Value="00000000-0000-0000-0000-000000000000" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_ATTACHED_POINT" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the attachment point to which the object is attached.  Returns 0 if the object is not an attachment (or is an avatar, etc).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_CHARACTER_TIME" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Units in seconds</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_CREATOR" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the object's creator key. If id is an avatar, a NULL_KEY is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_DESC" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the object's description. If id is an avatar, an empty string is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_GROUP" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the prims's group key. If id is an avatar, a NULL_KEY is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_NAME" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the object's name.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_OWNER" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Gets an object's owner's key. If id is group owned, a NULL_KEY is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PATHFINDING_TYPE" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the pathfinding setting of any object in the region. It returns an integer matching one of the OPT_* constants.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PHANTOM" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>Returns boolean, detailing if phantom is enabled or disabled on the object.  If id is an avatar or attachment, 0 is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PHYSICS" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Returns boolean, detailing if physics is enabled or disabled on the object.  If id is an avatar or attachment, 0 is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PHYSICS_COST" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_POS" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the object's position in region coordinates.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PRIM_EQUIVALENCE" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RENDER_WEIGHT" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString>This is a flag used with llGetObjectDetails to get the Avatar_Rendering_Cost of an avatar, based on values reported by nearby viewers.  If no data is available, -1 is returned.  The maximum render weight stored by the simulator is 500000. When called against an object, 0 is returned.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RETURN_PARCEL" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RETURN_PARCEL_OWNER" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RETURN_REGION" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_ROOT" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the id of the root prim of the object requested.  If id is an avatar, return the id of the root prim of the linkset the avatar is sitting on (or the avatar's own id if the avatar is not sitting on an object within the region).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_ROT" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the object's rotation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RUNNING_SCRIPT_COUNT" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_SCRIPT_MEMORY" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_SCRIPT_TIME" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_SERVER_COST" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_STREAMING_COST" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_TEMP_ON_REZ" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString>Returns boolean, detailing if temporary is enabled or disabled on the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_TOTAL_SCRIPT_COUNT" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_UNKNOWN_DETAIL" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_VELOCITY" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the object's velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_AVATAR" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for avatars.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_CHARACTER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for pathfinding characters.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_EXCLUSION_VOLUME" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for exclusion volumes.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_LEGACY_LINKSET" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for movable obstacles, movable phantoms, physical, and volumedetect objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_MATERIAL_VOLUME" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for material volumes.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_OTHER" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for attachments, Linden trees, and grass.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_STATIC_OBSTACLE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for static obstacles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_WALKABLE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for walkable objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_GROUP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_OTHER" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_OWNER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_SELECTED" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_TEMP" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_TOTAL" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_AREA" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>The parcel's area, in square meters. (5 chars.).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_DESC" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>The description of the parcel. (127 chars).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_GROUP" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>The parcel group's key. (36 chars.).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_ID" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>The parcel's key. (36 chars.).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_NAME" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>The name of the parcel. (63 chars.).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_OWNER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>The parcel owner's key. (36 chars.).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_SEE_AVATARS" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>The parcel's avatar visibility setting. (1 char.).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY" Type="Integer" Value="134217728" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS" Type="Integer" Value="67108864" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_CREATE_OBJECTS" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_DAMAGE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_FLY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY" Type="Integer" Value="268435456" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_GROUP_SCRIPTS" Type="Integer" Value="33554432" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_LANDMARK" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_SCRIPTS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_TERRAFORM" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_LOCAL_SOUND_ONLY" Type="Integer" Value="32768" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_RESTRICT_PUSHOBJECT" Type="Integer" Value="2097152" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_ACCESS_GROUP" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_ACCESS_LIST" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_BAN_LIST" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_LAND_PASS_LIST" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_AGENT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_AUTO_ALIGN" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_DESC" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Use this to get or set the parcel media description.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_LOOP" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_LOOP_SET" Type="Integer" Value="13" Subsets="lsl">
    <DocumentationString>Used to get or set the parcel's media looping variable.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_PAUSE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_PLAY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_SIZE" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Use this to get or set the parcel media pixel resolution.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_STOP" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_TEXTURE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_TIME" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_TYPE" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Use this to get or set the parcel media MIME type (e.g. "text/html").</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_UNLOAD" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_URL" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PASSIVE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Static in-world objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PATROL_PAUSE_AT_WAYPOINTS" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PAY_DEFAULT" Type="Integer" Value="-2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PAY_HIDE" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PAYMENT_INFO_ON_FILE" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PAYMENT_INFO_USED" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERM_ALL" Type="Integer" Value="2147483647" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERM_COPY" Type="Integer" Value="32768" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERM_MODIFY" Type="Integer" Value="16384" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERM_MOVE" Type="Integer" Value="524288" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERM_TRANSFER" Type="Integer" Value="8192" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_ATTACH" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>If this permission is enabled, the object can successfully call llAttachToAvatar to attach to the given avatar.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CHANGE_JOINTS" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>(not yet implemented)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CHANGE_LINKS" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>If this permission is enabled, the object can successfully call llCreateLink, llBreakLink, and llBreakAllLinks to change links to other objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CHANGE_PERMISSIONS" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>(not yet implemented)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CONTROL_CAMERA" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_DEBIT" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>If this permission is enabled, the object can successfully call llGiveMoney or llTransferLindenDollars to debit the owners account.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_OVERRIDE_ANIMATIONS" Type="Integer" Value="32768" Subsets="lsl">
    <DocumentationString>Permission to override default animations.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_RELEASE_OWNERSHIP" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>(not yet implemented)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_REMAP_CONTROLS" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>(not yet implemented)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_RETURN_OBJECTS" Type="Integer" Value="65536" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_SILENT_ESTATE_MANAGEMENT" Type="Integer" Value="16384" Subsets="lsl">
    <DocumentationString>A script with this permission does not notify the object owner when it modifies estate access rules via llManageEstateAccess.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TAKE_CONTROLS" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>If this permission enabled, the object can successfully call the llTakeControls libray call.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TELEPORT" Type="Integer" Value="4096" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TRACK_CAMERA" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TRIGGER_ANIMATION" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>If this permission is enabled, the object can successfully call llStartAnimation for the avatar that owns this.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PI" Type="Float" Value="3.1415926535897932384626433832795" Subsets="lsl,os-lsl">
    <DocumentationString>3.14159265 - The number of radians in a semi-circle.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PI_BY_TWO" Type="Float" Value="1.5707963267948966192313216916398" Subsets="lsl,os-lsl">
    <DocumentationString>1.57079633 - The number of radians in a quarter circle.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PING_PONG" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Play animation going forwards, then backwards.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BARK" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BLOBS" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BRICKS" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BRIGHT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_CHECKER" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_CONCRETE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_DARK" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_DISKS" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_GRAVEL" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_LARGETILE" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_SHINY" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_SIDING" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_STONE" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_STUCCO" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_SUCTION" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_TILE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_WEAVE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_WOOD" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_CAST_SHADOWS" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_COLOR" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_DESC" Type="Integer" Value="28" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_FLEXIBLE" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_FULLBRIGHT" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_GLOW" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString>PRIM_GLOW is used to get or set the glow status of the face.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_CIRCLE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_DEFAULT" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_SQUARE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_TRIANGLE" Type="Integer" Value="48" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_LINK_TARGET" Type="Integer" Value="34" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_FLESH" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_GLASS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_LIGHT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_METAL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_PLASTIC" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_RUBBER" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_STONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_WOOD" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_ALT_IMAGE_ENABLE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets the default image state (the image that the user sees before a piece of media is active) for the chosen face. The default image is specified by Second Life's server for that media type.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_LOOP" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets whether auto-looping is enabled.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_PLAY" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets whether the media auto-plays when a Resident can view it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_SCALE" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets whether auto-scaling is enabled. Auto-scaling forces the media to the full size of the texture.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_ZOOM" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets whether clicking the media triggers auto-zoom and auto-focus on the media.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CONTROLS" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Integer. Gets/Sets the style of controls. Can be either PRIM_MEDIA_CONTROLS_STANDARD or PRIM_MEDIA_CONTROLS_MINI.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CONTROLS_MINI" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Mini web navigation controls; does not include an address bar.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CONTROLS_STANDARD" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Standard web navigation controls.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CURRENT_URL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>String. Gets/Sets the current url displayed on the chosen face. Changing this URL causes navigation. 1024 characters Maximum.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_FIRST_CLICK_INTERACT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets whether the first click interaction is enabled.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_HEIGHT_PIXELS" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Integer. Gets/Sets the height of the media in pixels.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_HOME_URL" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>String. Gets/Sets the home URL for the chosen face. 1024 characters maximum.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_HEIGHT_PIXELS" Type="Integer" Value="2048" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_URL_LENGTH" Type="Integer" Value="1024" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_WHITELIST_COUNT" Type="Integer" Value="64" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_WHITELIST_SIZE" Type="Integer" Value="1024" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_WIDTH_PIXELS" Type="Integer" Value="2048" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PARAM_MAX" Type="Integer" Value="14" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_ANYONE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_GROUP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_OWNER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERMS_CONTROL" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString>Integer. Gets/Sets the permissions mask that control who can see the media control bar above the object:: PRIM_MEDIA_PERM_ANYONE, PRIM_MEDIA_PERM_GROUP, PRIM_MEDIA_PERM_NONE, PRIM_MEDIA_PERM_OWNER</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERMS_INTERACT" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Integer. Gets/Sets the permissions mask that control who can interact with the object: PRIM_MEDIA_PERM_ANYONE, PRIM_MEDIA_PERM_GROUP, PRIM_MEDIA_PERM_NONE, PRIM_MEDIA_PERM_OWNER</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_WHITELIST" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>String. Gets/Sets the white-list as a string of escaped, comma-separated URLs. This string can hold up to 64 URLs or 1024 characters, whichever comes first.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_WHITELIST_ENABLE" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Boolean. Gets/Sets whether navigation is restricted to URLs in PRIM_MEDIA_WHITELIST.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_WIDTH_PIXELS" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Integer. Gets/Sets the width of the media in pixels.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_NAME" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_OMEGA" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHANTOM" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_CONVEX" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Use the convex hull of the prim shape for physics (this is the default for mesh objects).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_NONE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Ignore this prim in the physics shape. NB: This cannot be applied to the root prim.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_PRIM" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Use the normal prim shape for physics (this is the default for all non-mesh objects).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_TYPE" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString>Allows you to set the physics shape type of a prim via lsl. Permitted values are: PRIM_PHYSICS_SHAPE_NONE, PRIM_PHYSICS_SHAPE_PRIM, PRIM_PHYSICS_SHAPE_CONVEX</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_POINT_LIGHT" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_POS_LOCAL" Type="Integer" Value="33" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_POSITION" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ROT_LOCAL" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ROTATION" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_FLAG_INVERT" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Render inside out (inverts the normals).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_FLAG_MIRROR" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Render an X axis mirror of the sculpty.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_CYLINDER" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_MASK" Type="Integer" Value="7" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_PLANE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_SPHERE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_TORUS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_HIGH" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_LOW" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_MEDIUM" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SIZE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SLICE" Type="Integer" Value="35" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEMP_ON_REZ" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXGEN" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXGEN_DEFAULT" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXGEN_PLANAR" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXT" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXTURE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_BOX" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_CYLINDER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_PRISM" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_RING" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_SCULPT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_SPHERE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_TORUS" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_TUBE" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PROFILE_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Disables profiling</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PROFILE_SCRIPT_MEMORY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Enables memory profiling</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_DEST_COLOR" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE_MINUS_DEST_COLOR" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_SOURCE_ALPHA" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_SOURCE_COLOR" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ZERO" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BLEND_FUNC_DEST" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BLEND_FUNC_SOURCE" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BOUNCE_MASK" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Particles bounce off of a plane at the objects Z height.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_EMISSIVE_MASK" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>The particle glows.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_ALPHA" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>A float which determines the ending alpha of the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_COLOR" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>A vector &lt;r, g, b&gt; which determines the ending color of the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_GLOW" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_SCALE" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>A vector &lt;sx, sy, z&gt;, which is the ending size of the particle billboard in meters (z is ignored).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_FLAGS" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Each particle that is emitted by the particle system is simulated based on the following flags. To use multiple flags, bitwise or (|) them together.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_FOLLOW_SRC_MASK" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>The particle position is relative to the source objects position.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_FOLLOW_VELOCITY_MASK" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>The particle orientation is rotated so the vertical axis faces towards the particle velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_INTERP_COLOR_MASK" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Interpolate both the color and alpha from the start value to the end value.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_INTERP_SCALE_MASK" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Interpolate the particle scale from the start value to the end value.</DocumentationString>
  </LibraryConstant>
  <!-- EDITED PSYS_PART_MAX_AGE -->
  <LibraryConstant Name="PSYS_PART_MAX_AGE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Age in seconds of a particle at which it dies.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_RIBBON_MASK" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_ALPHA" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>A float which determines the starting alpha of the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_COLOR" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>A vector &lt;r.r, g.g, b.b&gt; which determines the starting color of the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_GLOW" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_SCALE" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>A vector &lt;sx, sy, z&gt;, which is the starting size of the particle billboard in meters (z is ignored).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_TARGET_LINEAR_MASK" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_TARGET_POS_MASK" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>The particle heads towards the location of the target object as defined by PSYS_SRC_TARGET_KEY.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_WIND_MASK" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Particles have their velocity damped towards the wind velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_ACCEL" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>A vector &lt;x, y, z&gt; which is the acceleration to apply on particles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_ANGLE_BEGIN" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>Area in radians specifying where particles will NOT be created (for ANGLE patterns)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_ANGLE_END" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString>Area in radians filled with particles (for ANGLE patterns) (if lower than PSYS_SRC_ANGLE_BEGIN, acts as PSYS_SRC_ANGLE_BEGIN itself, and PSYS_SRC_ANGLE_BEGIN acts as PSYS_SRC_ANGLE_END).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_PART_COUNT" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString>How many particles to release in a burst.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_RADIUS" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>What distance from the center of the object to create the particles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_RATE" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>How often to release a particle burst (float seconds).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_SPEED_MAX" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>Maximum speed that a particle should be moving.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_SPEED_MIN" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Minimum speed that a particle should be moving.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_INNERANGLE" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Specifies the inner angle of the arc created by the PSYS_SRC_PATTERN_ANGLE or PSYS_SRC_PATTERN_ANGLE_CONE source pattern.  The area specified will NOT have particles in it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_MAX_AGE" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>How long this particle system should last, 0.0 means forever.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_OMEGA" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the angular velocity to rotate the axis that SRC_PATTERN_ANGLE and SRC_PATTERN_ANGLE_CONE use.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_OUTERANGLE" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Specifies the outer angle of the arc created by the PSYS_SRC_PATTERN_ANGLE or PSYS_SRC_PATTERN_ANGLE_CONE source pattern.  The area between the outer and inner angle will be filled with particles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>The pattern which is used to generate particles.  Use one of the following values: PSYS_SRC_PATTERN Values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_ANGLE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Shoot particles across a 2 dimensional area defined by the arc created from PSYS_SRC_OUTERANGLE. There will be an open area defined by PSYS_SRC_INNERANGLE within the larger arc.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_ANGLE_CONE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Shoot particles out in a 3 dimensional cone with an outer arc of PSYS_SRC_OUTERANGLE and an inner open area defined by PSYS_SRC_INNERANGLE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_DROP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Drop particles at the source position.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_EXPLODE" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Shoot particles out in all directions, using the burst parameters.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_TARGET_KEY" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>The key of a target object to move towards if PSYS_PART_TARGET_POS_MASK is enabled.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_TEXTURE" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>An asset name for the texture to use for the particles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_EVADE_HIDDEN" Type="Integer" Value="7" Subsets="lsl">
    <DocumentationString>Triggered when an llEvade character thinks it has hidden from its pursuer.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_EVADE_SPOTTED" Type="Integer" Value="8" Subsets="lsl">
    <DocumentationString>Triggered when an llEvade character switches from hiding to running</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED" Type="Integer" Value="10" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_INVALID_GOAL" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Goal is not on the navigation-mesh and cannot be reached.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_INVALID_START" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Character cannot navigate from the current location - e.g., the character is off the navmesh or too high above it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_NO_NAVMESH" Type="Integer" Value="9" Subsets="lsl">
    <DocumentationString>This is a fatal error reported to a character when there is no navmesh for the region. This usually indicates a server failure and users should file a bug report and include the time and region in which they received this message.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_NO_VALID_DESTINATION" Type="Integer" Value="6" Subsets="lsl">
    <DocumentationString>There is no good place for the character to go - e.g., it is patrolling and all the patrol points are now unreachable.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_OTHER" Type="Integer" Value="1000000" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_PARCEL_UNREACHABLE" Type="Integer" Value="11" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_TARGET_GONE" Type="Integer" Value="5" Subsets="lsl">
    <DocumentationString>Target (for llPursue or llEvade) can no longer be tracked - e.g., it left the region or is an avatar that is now more than about 30m outside the region.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_UNREACHABLE" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Goal is no longer reachable for some reason - e.g., an obstacle blocks the path.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_GOAL_REACHED" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Character has reached the goal and will stop or choose a new goal (if wandering).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_SLOWDOWN_DISTANCE_REACHED" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Character is near current goal.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PUBLIC_CHANNEL" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>PUBLIC_CHANNEL is an integer constant that, when passed to llSay, llWhisper, or llShout as a channel parameter, will print text to the publicly heard chat channel.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_FUZZ_FACTOR" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Selects a random destination near the offset.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_GOAL_TOLERANCE" Type="Integer" Value="5" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_INTERCEPT" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Define whether the character attempts to predict the target's location.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_OFFSET" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Go to a position offset from the target.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RAD_TO_DEG" Type="Float" Value="57.295779513082320876798154814105" Subsets="lsl,os-lsl">
    <DocumentationString>57.2957795 - Number of degrees per radian. You can use this number to convert radians to degrees by multiplying the radians by this number.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_DATA_FLAGS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_DETECT_PHANTOM" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_GET_LINK_NUM" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_GET_NORMAL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_GET_ROOT_KEY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_MAX_HITS" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_AGENTS" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_LAND" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_NONPHYSICAL" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_PHYSICAL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <!-- EDITED RC_REJECT_TYPES -->
  <LibraryConstant Name="RC_REJECT_TYPES" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RCERR_CAST_TIME_EXCEEDED" Type="Integer" Value="-3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RCERR_SIM_PERF_LOW" Type="Integer" Value="-2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="RCERR_UNKNOWN" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_ALLOW_DAMAGE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_ALLOW_DIRECT_TELEPORT" Type="Integer" Value="1048576" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_BLOCK_FLY" Type="Integer" Value="524288" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_BLOCK_TERRAFORM" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_DISABLE_COLLISIONS" Type="Integer" Value="4096" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_DISABLE_PHYSICS" Type="Integer" Value="16384" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_FIXED_SUN" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_RESTRICT_PUSHOBJECT" Type="Integer" Value="4194304" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_SANDBOX" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REMOTE_DATA_CHANNEL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REMOTE_DATA_REPLY" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REMOTE_DATA_REQUEST" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="REQUIRE_LINE_OF_SIGHT" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Define whether the character needs a line-of-sight to give chase.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RESTITUTION" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetPhysicsMaterial to enable the density value. Must be between 0.0 and 1.0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REVERSE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Play animation in reverse direction.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ROTATE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Animate texture rotation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SCALE" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Animate the texture scale.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SCRIPTED" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Scripted in-world objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SIM_STAT_PCT_CHARS_STEPPED" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Returns the % of pathfinding characters skipped each frame, averaged over the last minute.  The returned value corresponds to the "Characters Updated" stat in the viewer's Statistics Bar.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SMOOTH" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Slide in the X direction, instead of playing separate frames.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SQRT2" Type="Float" Value="1.4142135623730950488016887242097" Subsets="lsl,os-lsl">
    <DocumentationString>1.41421356 - The square root of 2.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_BLOCK_GRAB" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Controls whether the object can be grabbed.  A grab is the default action when in third person, and is available as the hand tool in build mode. This is useful for physical objects that you don't want other people to be able to trivially disturb. The default is FALSE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_BLOCK_GRAB_OBJECT" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString>Prevent click-and-drag movement on all prims in the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_BOUNDS_ERROR" Type="Integer" Value="1002" Subsets="lsl">
    <DocumentationString>Argument(s) passed to function had a bounds error.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_CAST_SHADOWS" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STATUS_DIE_AT_EDGE" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Controls whether the object is returned to the owners inventory if it wanders off the edge of the world.  It is useful to set this status TRUE for things like bullets or rockets. The default is TRUE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_INTERNAL_ERROR" Type="Integer" Value="1999" Subsets="lsl">
    <DocumentationString>An internal error occurred.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_MALFORMED_PARAMS" Type="Integer" Value="1000" Subsets="lsl">
    <DocumentationString>Function was called with malformed parameters.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_NOT_FOUND" Type="Integer" Value="1003" Subsets="lsl">
    <DocumentationString>Object or other item was not found.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_NOT_SUPPORTED" Type="Integer" Value="1004" Subsets="lsl">
    <DocumentationString>Feature not supported.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_OK" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Result of function call was a success.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_PHANTOM" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Controls/indicates whether the object collides or not.  Setting the value to TRUE makes the object non-colliding with all objects. It is a good idea to use this for most objects that move or rotate, but are non-physical. It is also useful for simulating volumetric lighting. The default is FALSE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_PHYSICS" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Controls/indicates whether the object moves physically.  This controls the same flag that the UI check-box for Physical controls. The default is FALSE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_RETURN_AT_EDGE" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STATUS_ROTATE_X" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STATUS_ROTATE_Y" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STATUS_ROTATE_Z" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Controls/indicates whether the object can physically rotate around the specific axis or not. This flag has no meaning for non-physical objects.  Set the value to FALSE if you want to disable rotation around that axis.  The default is TRUE for a physical object.  A useful example to think about when visualizing the effect is a sit-and-spin device.  They spin around the Z axis (up) but not around the X or Y axis.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_SANDBOX" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Controls/indicates whether the object can cross region boundaries and move more than 20 meters from its creation point.  The default if FALSE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_TYPE_MISMATCH" Type="Integer" Value="1001" Subsets="lsl">
    <DocumentationString>Argument(s) passed to function had a type mismatch.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_WHITELIST_FAILED" Type="Integer" Value="2001" Subsets="lsl">
    <DocumentationString>Whitelist Failed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STRING_TRIM" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STRING_TRIM_HEAD" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STRING_TRIM_TAIL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_BLANK" Type="String" Value="5748decc-f629-461c-9a36-a35a221fe21f" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_DEFAULT" Type="String" Value="89556747-24cb-43ed-920b-47caed15465f" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_MEDIA" Type="String" Value="8b5fec65-8d8d-9dc5-cda8-8fdf2716e361" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_PLYWOOD" Type="String" Value="89556747-24cb-43ed-920b-47caed15465f" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_TRANSPARENT" Type="String" Value="8dcd4a48-2d37-4909-9f78-f7a9eb4ef903" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TOUCH_INVALID_FACE" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TOUCH_INVALID_TEXCOORD" Type="Vector" Value="-1.0, -1.0, 0.0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TOUCH_INVALID_VECTOR" Type="Vector" Value="0.0, 0.0, 0.0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE" Type="Integer" Value="7" Subsets="lsl">
    <DocumentationString>One of TRAVERSAL_TYPE_FAST, TRAVERSAL_TYPE_SLOW, and TRAVERSAL_TYPE_NONE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE_FAST" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE_NONE" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE_SLOW" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="TRUE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>An integer constant for boolean comparisons. Has the value '1'.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TWO_PI" Type="Float" Value="6.283185307179586476925286766559" Subsets="lsl,os-lsl">
    <DocumentationString>6.28318530 - The radians of a circle.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_FLOAT" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is a float.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_INTEGER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is an integer.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_INVALID" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is invalid.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_KEY" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is a key.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_ROTATION" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is a rotation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_STRING" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is a string.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_VECTOR" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>The list entry is a vector.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="URL_REQUEST_DENIED" Type="String" Value="URL_REQUEST_DENIED" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="URL_REQUEST_GRANTED" Type="String" Value="URL_REQUEST_GRANTED" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between minimum (0.0) and maximum (1.0) deflection of angular orientation. That is, its a simple scalar for modulating the strength of angular deflection such that the vehicles preferred axis of motion points toward its real velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_DEFLECTION_TIMESCALE" Type="Integer" Value="33" Subsets="lsl,os-lsl">
    <DocumentationString>The time-scale for exponential success of linear deflection deflection. Its another way to specify the strength of the vehicles tendency to reorient itself so that its preferred axis of motion agrees with its true velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_FRICTION_TIMESCALE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>A vector of timescales for exponential decay of the vehicles angular velocity about its preferred axes of motion (at, left, up).  Range = [0.07, inf) seconds for each element of the vector.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE" Type="Integer" Value="35" Subsets="lsl,os-lsl">
    <DocumentationString>The timescale for exponential decay of the angular motors magnitude.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_MOTOR_DIRECTION" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>The direction and magnitude (in preferred frame) of the vehicles angular motor.The vehicle will accelerate (or decelerate if necessary) to match its velocity to its motor.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_MOTOR_TIMESCALE" Type="Integer" Value="34" Subsets="lsl,os-lsl">
    <DocumentationString>The timescale for exponential approach to full angular motor velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BANKING_EFFICIENCY" Type="Integer" Value="38" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between anti (-1.0), none (0.0), and maxmum (1.0) banking strength.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BANKING_MIX" Type="Integer" Value="39" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between static (0.0) and dynamic (1.0) banking. "Static" means the banking scales only with the angle of roll, whereas "dynamic" is a term that also scales with the vehicles linear speed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BANKING_TIMESCALE" Type="Integer" Value="40" Subsets="lsl,os-lsl">
    <DocumentationString>The timescale for banking to exponentially approach its maximum effect. This is another way to scale the strength of the banking effect, however it affects the term that is proportional to the difference between what the banking behavior is trying to do, and what the vehicle is actually doing.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BUOYANCY" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between minimum (0.0) and maximum anti-gravity (1.0).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_CAMERA_DECOUPLED" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Hover at global height.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_TERRAIN_ONLY" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Ignore water height when hovering.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_UP_ONLY" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Hover does not push down. Use this flag for hovering vehicles that should be able to jump above their hover height.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_WATER_ONLY" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Ignore terrain height when hovering.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LIMIT_MOTOR_UP" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Prevents ground vehicles from motoring into the sky.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LIMIT_ROLL_ONLY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>For vehicles with vertical attractor that want to be able to climb/dive, for instance, aeroplanes that want to use the banking feature.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_MOUSELOOK_BANK" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_MOUSELOOK_STEER" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_DEFLECTION_UP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>This flag prevents linear deflection parallel to world z-axis. This is useful for preventing ground vehicles with large linear deflection, like bumper cars, from climbing their linear deflection into the sky.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_FLY_UP" Type="Integer" Value="1" Subsets="lsl">
    <Property Name="Deprecated" Value="true" />
    <DocumentationString>Old, changed to VEHICLE_FLAG_NO_DEFLECTION_UP</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_HOVER_EFFICIENCY" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between minimum (0.0 = bouncy) and maximum (1.0 = fast as possible) damped motion of the hover behavior. </DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_HOVER_HEIGHT" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString>The height (above the terrain or water, or global) at which the vehicle will try to hover.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_HOVER_TIMESCALE" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString>Period of time (in seconds) for the vehicle to achieve its hover height.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_DEFLECTION_EFFICIENCY" Type="Integer" Value="28" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between minimum (0.0) and maximum (1.0) deflection of linear velocity. That is, its a simple scalar for modulating the strength of linear deflection.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_DEFLECTION_TIMESCALE" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <DocumentationString>The timescale for exponential success of linear deflection deflection. It is another way to specify how much time it takes for the vehicles linear velocity to be redirected to its preferred axis of motion.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_FRICTION_TIMESCALE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>A vector of timescales for exponential decay of the vehicles linear velocity along its preferred axes of motion (at, left, up).  Range = [0.07, inf) seconds for each element of the vector.</DocumentationString>
  </LibraryConstant>
  <!-- EDITED VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE -->
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE" Type="Integer" Value="31" Subsets="lsl,os-lsl">
    <DocumentationString>The timescale for exponential decay of the linear motors magnitude.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_DIRECTION" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>The direction and magnitude (in preferred frame) of the vehicles linear motor. The vehicle will accelerate (or decelerate if necessary) to match its velocity to its motor.  Range of magnitude = [0, 30] meters/second.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_OFFSET" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_TIMESCALE" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString>The timescale for exponential approach to full linear motor velocity.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_REFERENCE_FRAME" Type="Integer" Value="44" Subsets="lsl,os-lsl">
    <DocumentationString>A rotation of the vehicles preferred axes of motion and orientation (at, left, up) with respect to the vehicles local frame (x, y, z).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_AIRPLANE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Uses linear deflection for lift, no hover, and banking to turn.  See http://wiki.secondlife.com/wiki/VEHICLE_TYPE_AIRPLANE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_BALLOON" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Hover, and friction, but no deflection.  See http://wiki.secondlife.com/wiki/VEHICLE_TYPE_BALLOON</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_BOAT" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Hovers over water with lots of friction and some anglar deflection.  See http://wiki.secondlife.com/wiki/VEHICLE_TYPE_BOAT</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_CAR" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Another vehicle that bounces along the ground but needs the motors to be driven from external controls or timer events.  See http://wiki.secondlife.com/wiki/VEHICLE_TYPE_CAR</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_SLED" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Simple vehicle that bumps along the ground, and likes to move along its local x-axis.  See http://wiki.secondlife.com/wiki/VEHICLE_TYPE_SLED</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY" Type="Integer" Value="36" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between minimum (0.0 = wobbly) and maximum (1.0 = firm as possible) stability of the vehicle to keep itself upright.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_VERTICAL_ATTRACTION_TIMESCALE" Type="Integer" Value="37" Subsets="lsl,os-lsl">
    <DocumentationString>The period of wobble, or timescale for exponential approach, of the vehicle to rotate such that its preferred "up" axis is oriented along the worlds "up" axis.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VERTICAL" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="WANDER_PAUSE_AT_WAYPOINTS" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ZERO_ROTATION" Type="Rotation" Value="0.0, 0.0, 0.0, 1.0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="ZERO_VECTOR" Type="Vector" Value="0.0, 0.0, 0.0" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <!--   <LibraryConstant Name="CLICK_ACTION_ZOOM" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant> -->
  <LibraryConstant Name="OBJECT_BODY_SHAPE_TYPE" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_CLICK_ACTION" Type="Integer" Value="28" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_HOVER_HEIGHT" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_LAST_OWNER_ID" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE" Type="Integer" Value="38" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_BLEND" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_EMISSIVE" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_MASK" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_NONE" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_NORMAL" Type="Integer" Value="37" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SPECULAR" Type="Integer" Value="36" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <!--   <LibraryConstant Name="PSYS_PART_BEAM_MASK" Type="Integer" Value="512" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant> -->
  <!--   <LibraryConstant Name="LL_PART_HUD" Type="Integer" Value="1073741824" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant> -->
  <!--   <LibraryConstant Name="LL_PART_DEAD_MASK" Type="Integer" Value="-2147483648" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant> -->
  <LibraryConstant Name="PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_OK" Type="Integer" Value="0" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_MALFORMED_PARAMS" Type="Integer" Value="1000" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_TYPE_MISMATCH" Type="Integer" Value="1001" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_BOUNDS_ERROR" Type="Integer" Value="1002" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_NOT_FOUND" Type="Integer" Value="1003" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_NOT_SUPPORTED" Type="Integer" Value="1004" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_INTERNAL_ERROR" Type="Integer" Value="1999" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_WHITELIST_FAILED" Type="Integer" Value="2001" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="WL_WATER_COLOR" Type="Integer" Value="0" Subsets="os-lsl">
    <DocumentationString>Windlight Water Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_WATER_FOG_DENSITY_EXPONENT" Type="Integer" Value="1" Subsets="os-lsl">
    <DocumentationString>Windlight Water Fog Density Exponent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_UNDERWATER_FOG_MODIFIER" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Windlight Underwater Fog Modifier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_REFLECTION_WAVELET_SCALE" Type="Integer" Value="3" Subsets="os-lsl">
    <DocumentationString>Windlight Reflection Wavelet Scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_FRESNEL_SCALE" Type="Integer" Value="4" Subsets="os-lsl">
    <DocumentationString>Windlight Fresnel Scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_FRESNEL_OFFSET" Type="Integer" Value="5" Subsets="os-lsl">
    <DocumentationString>Windlight Fresnel Offset</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_REFRACT_SCALE_ABOVE" Type="Integer" Value="6" Subsets="os-lsl">
    <DocumentationString>Windlight Refract Scale Above</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_REFRACT_SCALE_BELOW" Type="Integer" Value="7" Subsets="os-lsl">
    <DocumentationString>Windlight Refract Scale Below</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_BLUR_MULTIPLIER" Type="Integer" Value="8" Subsets="os-lsl">
    <DocumentationString>Windlight Blur Multiplier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_BIG_WAVE_DIRECTION" Type="Integer" Value="9" Subsets="os-lsl">
    <DocumentationString>Windlight Big Wave Direction</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_LITTLE_WAVE_DIRECTION" Type="Integer" Value="10" Subsets="os-lsl">
    <DocumentationString>Windlight Little Wave Direction</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_NORMAL_MAP_TEXTURE" Type="Integer" Value="11" Subsets="os-lsl">
    <DocumentationString>Windlight Normal HashMap Texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_HORIZON" Type="Integer" Value="12" Subsets="os-lsl">
    <DocumentationString>Windlight Horizon Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_HAZE_HORIZON" Type="Integer" Value="13" Subsets="os-lsl">
    <DocumentationString>Windlight Haze Horizon</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_BLUE_DENSITY" Type="Integer" Value="14" Subsets="os-lsl">
    <DocumentationString>Windlight Blue Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_HAZE_DENSITY" Type="Integer" Value="15" Subsets="os-lsl">
    <DocumentationString>Windlight Haze Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_DENSITY_MULTIPLIER" Type="Integer" Value="16" Subsets="os-lsl">
    <DocumentationString>Windlight Density Multiplier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_DISTANCE_MULTIPLIER" Type="Integer" Value="17" Subsets="os-lsl">
    <DocumentationString>Windlight Distance Multiplier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_MAX_ALTITUDE" Type="Integer" Value="18" Subsets="os-lsl">
    <DocumentationString>Windlight Max Altitude</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_MOON_COLOR" Type="Integer" Value="19" Subsets="os-lsl">
    <DocumentationString>Windlight Sun/Moon Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_AMBIENT" Type="Integer" Value="20" Subsets="os-lsl">
    <DocumentationString>Windlight Ambient Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_EAST_ANGLE" Type="Integer" Value="21" Subsets="os-lsl">
    <DocumentationString>Windlight Sun/Position East</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_GLOW_FOCUS" Type="Integer" Value="22" Subsets="os-lsl">
    <DocumentationString>Windlight Sun Glow Focus</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_GLOW_SIZE" Type="Integer" Value="23" Subsets="os-lsl">
    <DocumentationString>Windlight Sun Glow Size</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SCENE_GAMMA" Type="Integer" Value="24" Subsets="os-lsl">
    <DocumentationString>Windlight Scene Gamma</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_STAR_BRIGHTNESS" Type="Integer" Value="25" Subsets="os-lsl">
    <DocumentationString>Windlight Star Brightness</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_COLOR" Type="Integer" Value="26" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_XY_DENSITY" Type="Integer" Value="27" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud X/Y/Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_COVERAGE" Type="Integer" Value="28" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Coverage</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCALE" Type="Integer" Value="29" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_DETAIL_XY_DENSITY" Type="Integer" Value="30" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Detail X/Y/Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_X" Type="Integer" Value="31" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Scroll X</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_Y" Type="Integer" Value="32" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Scroll Y</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_Y_LOCK" Type="Integer" Value="33" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Scroll Y Lock</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_X_LOCK" Type="Integer" Value="34" Subsets="os-lsl">
    <DocumentationString>Windlight Cloud Scroll X Lock</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_DRAW_CLASSIC_CLOUDS" Type="Integer" Value="35" Subsets="os-lsl">
    <DocumentationString>Windlight Draw Classic Clouds</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_MOON_POSITION" Type="Integer" Value="36" Subsets="os-lsl">
    <DocumentationString>Windlight Sun/Moon Position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="NPC" Type="Integer" Value="32" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC" Type="Integer" Value="16777216" Subsets="os-lsl">
    <DocumentationString>Target is NPC. Use this instead of NPC, Value 0x01000000</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_RANGE_BLOCK" Type="Integer" Value="45" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ROLL_FRAME" Type="Integer" Value="46" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_X" Type="Integer" Value="1024" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_Y" Type="Integer" Value="2048" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_Z" Type="Integer" Value="4096" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LOCK_HOVER_HEIGHT" Type="Integer" Value="8192" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_DEFLECTION" Type="Integer" Value="16392" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LOCK_ROTATION" Type="Integer" Value="32784" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_ALL" Type="Integer" Value="-65535" Subsets="os-lsl">
    <DocumentationString>Send the message to attachments on every point</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_INVERT_POINTS" Type="Integer" Value="1" Subsets="os-lsl">
    <DocumentationString>Invert how the attachment points list should be treated</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_OBJECT_CREATOR" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Send only to those have the same CreatorID with host object CreatorID</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_SCRIPT_CREATOR" Type="Integer" Value="4" Subsets="os-lsl">
    <DocumentationString>Send only to those have the same CreatorID with sender script CreatorID</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_RELEASE" Type="Integer" Value="128" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_REGION_RESTART" Type="Integer" Value="1024" Subsets="os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate the region has been restarted.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_ANIMATION" Type="Integer" Value="16384" Subsets="os-lsl">
    <DocumentationString>The set of animations playing on the avatar to whom this object is attached has been changed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_HARMONIC_MEAN" Type="Integer" Value="100" Subsets="os-lsl">
    <DocumentationString>Returns the harmonic mean of a list of numbers, Value 100.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET_X" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Adjusts the camera focus x position relative to the target. (float)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET_Y" Type="Integer" Value="3" Subsets="os-lsl">
    <DocumentationString>Adjusts the camera focus y position relative to the target. (float)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET_Z" Type="Integer" Value="4" Subsets="os-lsl">
    <DocumentationString>Adjusts the camera focus z position relative to the target. (float)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_X" Type="Integer" Value="14" Subsets="os-lsl">
    <DocumentationString>Sets camera x position in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_Y" Type="Integer" Value="15" Subsets="os-lsl">
    <DocumentationString>Sets camera y position in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_Z" Type="Integer" Value="16" Subsets="os-lsl">
    <DocumentationString>Sets camera z position in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_X" Type="Integer" Value="18" Subsets="os-lsl">
    <DocumentationString>Sets camera x focus (target position) in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_Y" Type="Integer" Value="19" Subsets="os-lsl">
    <DocumentationString>Sets camera y focus (target position) in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_Z" Type="Integer" Value="20" Subsets="os-lsl">
    <DocumentationString>Sets camera z focus (target position) in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_CLAIMDATE" Type="Integer" Value="10" Subsets="os-lsl">
    <DocumentationString>Set parcel claim date</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_MATERIAL" Type="Integer" Value="31" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="STATS_TIME_DILATION" Type="Integer" Value="0" Subsets="os-lsl">
    <DocumentationString>Time Dilation, Value 0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_SIM_FPS" Type="Integer" Value="1" Subsets="os-lsl">
    <DocumentationString>Sim FPS, Value 1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PHYSICS_FPS" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Physics FPS, Value 2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_AGENT_UPDATES" Type="Integer" Value="3" Subsets="os-lsl">
    <DocumentationString>Agent Updates/Sec, Value 3</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_ROOT_AGENTS" Type="Integer" Value="4" Subsets="os-lsl">
    <DocumentationString>Main Agents, Value 4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_CHILD_AGENTS" Type="Integer" Value="5" Subsets="os-lsl">
    <DocumentationString>Child Agents, Value 5</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_TOTAL_PRIMS" Type="Integer" Value="6" Subsets="os-lsl">
    <DocumentationString>Objects, Value 6</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_ACTIVE_PRIMS" Type="Integer" Value="7" Subsets="os-lsl">
    <DocumentationString>Active Objects, Value 7</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_FRAME_MS" Type="Integer" Value="8" Subsets="os-lsl">
    <DocumentationString>Total Frame Time, Value 8</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_NET_MS" Type="Integer" Value="9" Subsets="os-lsl">
    <DocumentationString>Net Time, Value 9</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PHYSICS_MS" Type="Integer" Value="10" Subsets="os-lsl">
    <DocumentationString>Physics Time, Value 10</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_IMAGE_MS" Type="Integer" Value="11" Subsets="os-lsl">
    <DocumentationString>Images Time, Value 11</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_OTHER_MS" Type="Integer" Value="12" Subsets="os-lsl">
    <DocumentationString>(Other Time), Value 12</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_IN_PACKETS_PER_SECOND" Type="Integer" Value="13" Subsets="os-lsl">
    <DocumentationString>Packets in, Value 13</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_OUT_PACKETS_PER_SECOND" Type="Integer" Value="14" Subsets="os-lsl">
    <DocumentationString>Packets out, Value 14</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_UNACKED_BYTES" Type="Integer" Value="15" Subsets="os-lsl">
    <DocumentationString>Total Unacked Bytes, Value 15</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_AGENT_MS" Type="Integer" Value="16" Subsets="os-lsl">
    <DocumentationString>Agent Time, Value 16</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PENDING_DOWNLOADS" Type="Integer" Value="17" Subsets="os-lsl">
    <DocumentationString>Pending Downloads, Value 17</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PENDING_UPLOADS" Type="Integer" Value="18" Subsets="os-lsl">
    <DocumentationString>Pending Downloads, Value 18</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_ACTIVE_SCRIPTS" Type="Integer" Value="19" Subsets="os-lsl">
    <DocumentationString>Active Scripts, Value 19</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_SCRIPT_LPS" Type="Integer" Value="20" Subsets="os-lsl">
    <DocumentationString>Script Line Per Second, Value 20</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_FLY" Type="Integer" Value="0" Subsets="os-lsl">
    <DocumentationString>Value 0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_NO_FLY" Type="Integer" Value="1" Subsets="os-lsl">
    <DocumentationString>Value 1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_LAND_AT_TARGET" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Value 2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_RUNNING" Type="Integer" Value="4" Subsets="os-lsl">
    <DocumentationString>Value 4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_SIT_NOW" Type="Integer" Value="0" Subsets="os-lsl">
    <DocumentationString>Value 0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_CREATOR_OWNED" Type="Integer" Value="1" Subsets="os-lsl">
    <DocumentationString>Value 0x1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_NOT_OWNED" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Value 0x2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_SENSE_AS_AGENT" Type="Integer" Value="4" Subsets="os-lsl">
    <DocumentationString>Value 0x4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_LISTEN_REGEX_NAME" Type="Integer" Value="1" Subsets="os-lsl">
    <DocumentationString>Process name parameter as regex, Value = 0x1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_LISTEN_REGEX_MESSAGE" Type="Integer" Value="2" Subsets="os-lsl">
    <DocumentationString>Process name parameter as regex, Value = 0x2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_CENTER_OF_MASS" Type="Integer" Value="1" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR" Type="Integer" Value="14700" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR_X" Type="Integer" Value="14701" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_LINEAR_X" Type="Integer" Value="14702" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR_Y" Type="Integer" Value="14703" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_LINEAR_Y" Type="Integer" Value="14704" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR_Z" Type="Integer" Value="14705" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_LINEAR_Z" Type="Integer" Value="14706" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR" Type="Integer" Value="14707" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR_X" Type="Integer" Value="14708" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_ANGULAR_X" Type="Integer" Value="14709" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR_Y" Type="Integer" Value="14710" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_ANGULAR_Y" Type="Integer" Value="14711" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR_Z" Type="Integer" Value="14712" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_ANGULAR_Z" Type="Integer" Value="14713" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR" Type="Integer" Value="14714" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR_X" Type="Integer" Value="14715" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR_Y" Type="Integer" Value="14716" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR_Z" Type="Integer" Value="14717" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR" Type="Integer" Value="14718" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR_X" Type="Integer" Value="14719" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR_Y" Type="Integer" Value="14720" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR_Z" Type="Integer" Value="14721" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK" Type="Integer" Value="14722" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINKSET_TYPE_CONSTRAINT" Type="Integer" Value="0" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Links are created with physics constraint objects. Used for flexible objects. Not a good default as it uses more CPU</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINKSET_TYPE_COMPOUND" Type="Integer" Value="1" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Linkset is constructed as a compound object made up of the shapes of all the children. The most efficient linkset implementation and the default</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINKSET_TYPE_MANUAL" Type="Integer" Value="2" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;NOT IMPLEMENTED. Linkset is implemented by CPU code that moves each of the object in the linkset independently</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_FIXED" Type="Integer" Value="1234" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Link is fixed and unmovable. Default. Implemented as a 6 degree-of-freedom constraint with no motion in either the linear or angular directions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_HINGE" Type="Integer" Value="4" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_SPRING" Type="Integer" Value="9" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_6DOF" Type="Integer" Value="6" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_SLIDER" Type="Integer" Value="7" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINA_LOC" Type="Integer" Value="14401" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINA_ROT" Type="Integer" Value="14402" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINB_LOC" Type="Integer" Value="14403" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINB_ROT" Type="Integer" Value="14404" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_LINEAR_LIMIT_LOW" Type="Integer" Value="14405" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_LINEAR_LIMIT_HIGH" Type="Integer" Value="14406" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ANGULAR_LIMIT_LOW" Type="Integer" Value="14407" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ANGULAR_LIMIT_HIGH" Type="Integer" Value="14408" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_USE_FRAME_OFFSET" Type="Integer" Value="14409" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ENABLE_TRANSMOTOR" Type="Integer" Value="14410" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_TRANSMOTOR_MAXVEL" Type="Integer" Value="14411" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_TRANSMOTOR_MAXFORCE" Type="Integer" Value="14412" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_CFM" Type="Integer" Value="14413" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ERP" Type="Integer" Value="14414" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SOLVER_ITERATIONS" Type="Integer" Value="14415" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_AXIS_ENABLE" Type="Integer" Value="14416" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;[PHYS_PARAM_SPRING_AXIS_ENABLE, int axisCode, bool flag]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_DAMPING" Type="Integer" Value="14417" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;[PHYS_PARAM_SPRING_DAMPING, int axisCode, float damping]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_STIFFNESS" Type="Integer" Value="14418" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;[PHYS_PARAM_SPRING_STIFFNESS, int axisCode, float stiffness]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_LINK_TYPE" Type="Integer" Value="14419" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_USE_LINEAR_FRAMEA" Type="Integer" Value="14420" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_EQUILIBRIUM_POINT" Type="Integer" Value="14421" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ALL" Type="Integer" Value="-1" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;(-1) make changes to all axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_ALL" Type="Integer" Value="-2" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;all linear axis (X, Y, Z)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_ALL" Type="Integer" Value="-3" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;all angular axis (X, Y, Z)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_X" Type="Integer" Value="0" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;X linear axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_Y" Type="Integer" Value="1" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Y linear axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_Z" Type="Integer" Value="2" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Z linear axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_X" Type="Integer" Value="3" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;X angular axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_Y" Type="Integer" Value="4" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Y angular axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_Z" Type="Integer" Value="5" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Z angular axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_NODETYPE_UNDEF" Type="Integer" Value="0" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_NODETYPE_OBJECT" Type="Integer" Value="1" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_NODETYPE_ARRAY" Type="Integer" Value="2" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_NODETYPE_VALUE" Type="Integer" Value="3" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_VALUETYPE_UNDEF" Type="Integer" Value="0" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_VALUETYPE_BOOLEAN" Type="Integer" Value="1" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_VALUETYPE_INTEGER" Type="Integer" Value="2" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_VALUETYPE_FLOAT" Type="Integer" Value="3" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="JSON_VALUETYPE_STRING" Type="Integer" Value="4" Subsets="os-json-store">
    <DocumentationString />
  </LibraryConstant>
</LSLLibraryData>
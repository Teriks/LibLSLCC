<?xml version="1.0"?>
<LSLLibraryData>
  <LibraryFunction Name="llAbs" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Integer" />
    <DocumentationString>Returns the positive version of val</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAcos" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns the arccosine in radians of val</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAddToLandBanList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="hours" Type="Float" />
    <DocumentationString>Add avatar to the land ban list for hours, or indefinitely if hours is zero</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAddToLandPassList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="hours" Type="Float" />
    <DocumentationString>Adds avatar to the land pass list for hours, or indefinitely if hours is 0</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAdjustSoundVolume" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Adjusts volume of attached sound (0.0 - 1.0)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAgentInExperience" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="agent" Type="Key" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llAllowInventoryDrop" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="add" Type="Integer" />
    <DocumentationString>If add == TRUE, users without modify permissions can still drop inventory items onto a prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAngleBetween" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="a" Type="Rotation" />
    <Parameter Name="b" Type="Rotation" />
    <DocumentationString>Returns angle between rotation a and b</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llApplyImpulse" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="momentum" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Applies impulse to object (if the script is physical), in local coords if local == TRUE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llApplyRotationalImpulse" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="force" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Applies rotational impulse to object (if the script is physical), in local coords if local == TRUE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAsin" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns the arcsine in radians of val</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAtan2" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="y" Type="Float" />
    <Parameter Name="x" Type="Float" />
    <DocumentationString>Returns the arctangent2 of y, x</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAttachToAvatar" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="attach_point" Type="Integer" />
    <DocumentationString>Attaches the object to the avatar who has granted permission to the script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAttachToAvatarTemp" ReturnType="Void" Subsets="lsl">
    <Parameter Name="attach_point" Type="Integer" />
    <DocumentationString>Attaches the object to the avatar who has granted permission to the script, with the exception that the object will not create new inventory for the user, and will disappear on detach or disconnect</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAvatarOnLinkSitTarget" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <DocumentationString>If an avatar is sitting on the sit target, return the avatar's key, NULL_KEY otherwise</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAvatarOnSitTarget" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>If an avatar is seated on the sit target, returns the avatar's key, otherwise NULL_KEY</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAxes2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="fwd" Type="Vector" />
    <Parameter Name="left" Type="Vector" />
    <Parameter Name="up" Type="Vector" />
    <DocumentationString>Returns the rotation defined by the coordinate axes</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llAxisAngle2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="axis" Type="Vector" />
    <Parameter Name="angle" Type="Float" />
    <DocumentationString>Returns the rotation that is a generated angle about axis</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBase64ToInteger" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="str" Type="String" />
    <DocumentationString>Returns an integer that is the str Base64 decoded as a big endian integer</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBase64ToString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="str" Type="String" />
    <DocumentationString>Converts a Base64 string to a conventional string.;If the conversion creates any unprintable characters, they are converted to spaces</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBreakAllLinks" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Delinks all prims in the link set (requires that PERMISSION_CHANGE_LINKS be granted)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llBreakLink" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <DocumentationString>Delinks the prim with the given link number in a linked object set (requires that PERMISSION_CHANGE_LINKS be granted)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCastRay" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="start" Type="Vector" />
    <Parameter Name="end" Type="Vector" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>Casts a ray into the physics world from 'start' to 'end' and returns data according to details in params</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCeil" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns smallest integer value &gt;= val</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llClearCameraParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Resets all camera parameters to default values and turns off scripted camera control</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llClearLinkMedia" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Clears (deletes) the media and all params from the given face on linked prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llClearPrimMedia" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Clears (deletes) the media and all params from the given face</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCloseRemoteDataChannel" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Key" />
    <DocumentationString>Closes XML-RPC channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCloud" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the cloud density at the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCollisionFilter" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="id" Type="Key" />
    <Parameter Name="accept" Type="Integer" />
    <DocumentationString>Sets the collision filter, exclusively or inclusively. If accept == TRUE, only accept collisions with objects name and id (either is optional), otherwise with objects not name or id</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCollisionSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="impact_sound" Type="String" />
    <Parameter Name="impact_volume" Type="Float" />
    <DocumentationString>Suppresses default collision sounds, replaces default impact sounds with impact_sound at the volume impact_volume</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCollisionSprite" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="impact_sprite" Type="String" />
    <DocumentationString>Suppresses default collision sprites, replaces default impact sprite with impact_sprite (use an empty string to just suppress)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCos" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="theta" Type="Float" />
    <DocumentationString>Returns the cosine of theta (theta in radians)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCreateCharacter" ReturnType="Void" Subsets="lsl">
    <Parameter Name="options" Type="List" />
    <DocumentationString>Convert linkset to AI Character which can navigate the world</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCreateKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <Parameter Name="v" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llCreateLink" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="parent" Type="Integer" />
    <DocumentationString>Attempts to link the script's object with the target (requires that PERMISSION_CHANGE_LINKS be granted). If parent == TRUE, then the script's object becomes the root</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llCSV2List" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <DocumentationString>Creates a list from a string of comma separated values</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDataSizeKeyValue" ReturnType="Key" Subsets="lsl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llDeleteCharacter" ReturnType="Void" Subsets="lsl">
    <DocumentationString>Convert linkset from AI Character to Physics object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDeleteKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llDeleteSubList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="start" Type="Integer" />
    <Parameter Name="end" Type="Integer" />
    <DocumentationString>Removes the slice from start to end and returns the remainder of the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDeleteSubString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="start" Type="Integer" />
    <Parameter Name="end" Type="Integer" />
    <DocumentationString>Removes the indicated substring and returns the result</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetachFromAvatar" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Detaches object from avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedGrab" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the grab offset of the user touching object (returns &lt;0,0,0&gt; if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedGroup" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns TRUE if detected object is part of same group as owner</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the key of detected object number (returns empty key if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedLinkNumber" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the integer link number of the triggered event. If not supported, returns zero</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="item" Type="Integer" />
    <DocumentationString>Returns the name of detected object number (returns empty string if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedOwner" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the key of detected object's owner (returns empty key if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the position of detected object number (returns &lt;0,0,0&gt; if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the rotation of detected object number (returns &lt;0,0,0,1&gt; if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchBinormal" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the surface binormal for a triggered touch event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchFace" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the index of the face where the avatar clicked in a triggered touch event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchNormal" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the surface normal for a triggered touch event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the position where the object was touched in a triggered touch event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchST" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the s and t coordinates in the first two components of a vector, for the surface coordinates where the prim was touched in a triggered touch event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedTouchUV" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the u and v coordinates in the first two components of a vector, for the texture coordinates where the prim was touched in a triggered touch event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedType" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) of detected object (returns 0 if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDetectedVel" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the velocity of detected object number (returns &lt;0,0,0&gt; if number is not a valid sensed object)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDialog" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="message" Type="String" />
    <Parameter Name="buttons" Type="List" />
    <Parameter Name="channel" Type="Integer" />
    <DocumentationString>Shows a dialog box on the avatar's screen with a message and up to 12 buttons.;If a button is pressed, the avatar says the text of the button label on chat_channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDie" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Deletes the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llDumpList2String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="separator" Type="String" />
    <DocumentationString>Returns the list in a single string, using separator between the entries</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEdgeOfWorld" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="dir" Type="Vector" />
    <DocumentationString>Checks to see whether the border hit by dir from pos is the edge of the world (has no neighboring region)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEjectFromLand" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Ejects avatar from the parcel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEmail" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="address" Type="String" />
    <Parameter Name="subject" Type="String" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Sends an email to address with the subject and message</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEscapeURL" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>Returns an escaped/encoded version of url, replacing spaces with %20 etc</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEuler2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="v" Type="Vector" />
    <DocumentationString>Returns the rotation representation of Euler Angles v</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llEvade" ReturnType="Void" Subsets="lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Evade a specified target</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llExecCharacterCmd" ReturnType="Void" Subsets="lsl">
    <Parameter Name="command" Type="Integer" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Execute a character command</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFabs" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns the positive version of val</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFleeFrom" ReturnType="Void" Subsets="lsl">
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="distance" Type="Float" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Flee from a point</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFloor" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns largest integer value &lt;= val</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llForceMouselook" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="mouselook" Type="Integer" />
    <DocumentationString>If mouselook is TRUE, any avatar that sits upon the prim will be forced into mouselook mode</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llFrand" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="mag" Type="Float" />
    <DocumentationString>Returns a pseudo random number in the range [0,mag) or (mag,0]</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGenerateKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Return a unique generated key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAccel" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the acceleration of the object relative to the region's axes</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentInfo" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns an integer bitfield containing the agent information about id.;Returns AGENT_FLYING, AGENT_ATTACHMENTS, AGENT_SCRIPTED, AGENT_SITTING, AGENT_ON_OBJECT, AGENT_MOUSELOOK, AGENT_AWAY, AGENT_BUSY, AGENT_TYPING, AGENT_CROUCHING, AGENT_ALWAYS_RUN, AGENT_WALKING and/or AGENT_IN_AIR</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentLanguage" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Returns the language code of the preferred interface language of the avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="scope" Type="Integer" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>Requests a list of agents currently in the region, limited by the scope parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAgentSize" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>If the avatar is in the same region, returns the size of the bounding box of the requested avatar by id, otherwise returns ZERO_VECTOR</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAlpha" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns the alpha of face</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAndResetTime" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the script time in seconds and then resets the script timer to zero</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAnimation" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the name of the currently playing locomotion animation for avatar id</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAnimationList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>ist Returns a list of keys of playing animations for avatar described by id</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAnimationOverride" ReturnType="String" Subsets="lsl">
    <Parameter Name="anim_state" Type="String" />
    <DocumentationString>Returns a string that is the name of the animation that is being used for the specified animation state (anim_state)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetAttached" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the object's attachment point, or 0 if not attached</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetBoundingBox" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="object" Type="Key" />
    <DocumentationString>Returns the bounding box around the object (including any linked prims) relative to its root prim, in a list in the format [ (vector) min_corner, (vector) max_corner ]</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCameraPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current camera position for the agent the task has permissions for</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCameraRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current camera orientation for the agent the task has permissions for</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCenterOfMass" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the prim's center of mass (unless called from the root prim, where it returns the object's center of mass)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetClosestNavPoint" ReturnType="List" Subsets="lsl">
    <Parameter Name="point" Type="Vector" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Get the closest navigable point to the point provided</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetColor" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns the color on face</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetCreator" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a key for the creator of the prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetDate" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current date in the UTC time zone in the format YYYY-MM-DD</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetDisplayName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the name of an avatar, iff the avatar is in the current simulator, and the name has been cached, otherwise the same as llGetUsername.  Use llRequestDisplayName if you absolutely must have the display name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetEnergy" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns how much energy is in the object as a percentage of maximum</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetEnv" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns a string with the requested data about the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetExperienceDetails" ReturnType="List" Subsets="lsl">
    <Parameter Name="experience_id" Type="Key" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llGetExperienceErrorMessage" ReturnType="String" Subsets="lsl">
    <Parameter Name="error" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llGetForce" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the force (if the script is physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetFreeMemory" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of free bytes of memory the script can use</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetFreeURLs" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of available URLs for the current script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetGeometricCenter" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the geometric center of the linked set the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetGMTclock" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since midnight GMT</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetHTTPHeader" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="request_id" Type="Key" />
    <Parameter Name="header" Type="String" />
    <DocumentationString>Returns the value for header for request_id</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryCreator" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="item" Type="String" />
    <DocumentationString>Returns a key for the creator of the inventory item</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the key that is the UUID of the inventory name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="type" Type="Integer" />
    <Parameter Name="number" Type="Integer" />
    <DocumentationString>Returns the name of the inventory item number of a given type</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryNumber" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="type" Type="Integer" />
    <DocumentationString>Returns the number of items of a given type (INVENTORY_* flag) in the prim's inventory</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryPermMask" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="item" Type="String" />
    <Parameter Name="category" Type="Integer" />
    <DocumentationString>Returns the requested permission mask for the inventory item</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetInventoryType" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the type of the inventory item name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the key of the prim the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLandOwnerAt" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Returns the key of the land owner, returns NULL_KEY if public</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <DocumentationString>Returns the key of the linked prim linknumber</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkMedia" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Get the media params for a particular face on linked prim, given the desired list of names. Returns a list of values in the order requested.  Returns an empty list if no media exists on the face</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkName" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <DocumentationString>Returns the name of linknumber in a link set</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkNumber" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the link number of the prim containing the script (0 means not linked, 1 the prim is the root, 2 the prim is the first child, etc)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkNumberOfSides" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <DocumentationString>Returns the number of sides of the specified linked prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLinkPrimitiveParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Get primitive parameters for linknumber based on rules</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetListEntryType" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Returns the type of the index entry in the list;(TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR, TYPE_ROTATION, or TYPE_INVALID if index is off list)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetListLength" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <DocumentationString>Returns the number of elements in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLocalPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the position relative to the root</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetLocalRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation local to the root</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMass" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the mass of object that the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMassMKS" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the mass of the linkset in kilograms</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMaxScaleFactor" ReturnType="Float" Subsets="lsl">
    <DocumentationString>Returns the maximum multiplicative scale factor which can be used by </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMemoryLimit" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Get the maximum memory a script can use.;Returns the integer amount of memory the script can use in bytes</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetMinScaleFactor" ReturnType="Float" Subsets="lsl">
    <DocumentationString>Returns the minimum multiplicative scale factor which can be used by </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNextEmail" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="address" Type="String" />
    <Parameter Name="subject" Type="String" />
    <DocumentationString>Gets the next waiting email that comes from address, with specified subject</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNotecardLine" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="line" Type="Integer" />
    <DocumentationString>Returns line line of notecard name via the dataserver event</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNumberOfNotecardLines" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns number of lines in notecard name via the dataserver event (cast return value to integer)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNumberOfPrims" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of prims in a link set the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetNumberOfSides" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of faces (or sides) of the prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectDesc" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the description of the prim the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectDetails" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Returns the object details specified in params for the object with key id.;Params are OBJECT_NAME, _DESC, _POS, _ROT, _VELOCITY, _OWNER, _GROUP, _CREATOR</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectMass" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the mass of the avatar or object in the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectName" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the name of the prim which the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectPermMask" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="category" Type="Integer" />
    <DocumentationString>Returns the requested permission mask for the root object the task is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetObjectPrimCount" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="prim" Type="Key" />
    <DocumentationString>Returns the total number of prims for an object in the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetOmega" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation velocity in radians per second</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetOwner" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the object owner's UUID</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetOwnerKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the owner of object id</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelDetails" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Returns the parcel details specified in params for the parcel at pos.;Params is one or more of; PARCEL_DETAILS_NAME, _DESC, _OWNER, _GROUP, _AREA, _ID, _SEE_AVATARS</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelFlags" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Returns a mask of the parcel flags (PARCEL_FLAG_*) for the parcel that includes the point pos</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelMaxPrims" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="sim_wide" Type="Integer" />
    <DocumentationString>Returns the maximum number of prims allowed on the parcel at pos</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelMusicURL" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returnss the streaming audio URL for the parcel of land on which the object is located</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelPrimCount" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="category" Type="Integer" />
    <Parameter Name="sim_wide" Type="Integer" />
    <DocumentationString>Returns the number of prims on the parcel at pos of the given category.;Categories; PARCEL_COUNT_TOTAL, _OWNER, _GROUP, _OTHER, _SELECTED, _TEMP</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetParcelPrimOwners" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Returns a list of all Residents who own objects on the parcel at pos and with individual prim counts.;Requires owner-like permissions for the parcel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPermissions" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns an integer bitfield with the permissions that have been granted</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPermissionsKey" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the key of the avatar that last granted permissions to the script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPhysicsMaterial" ReturnType="List" Subsets="lsl">
    <DocumentationString>Returns the gravity multiplier, restitution, friction, and density of the linkset as a list in that order</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPos" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the position of the task in region coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPrimitiveParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="params" Type="List" />
    <DocumentationString>Returns the primitive parameters specified in the params list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetPrimMediaParams" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Returns the media params for a particular face on an object, given the desired list of names, in the order requested.;(Returns an empty list if no media exists on the face.)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionAgentCount" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of avatars in the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionCorner" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a vector in meters that is the global location of the south-west corner of the region which the object is in</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionFlags" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the region flags (REGION_FLAG_*) for the region the object is in</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionFPS" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the mean region frames per second</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionName" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current region name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRegionTimeDilation" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current time dilation as a float between 0.0 (full dilation) and 1.0 (no dilation)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRootPosition" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the position (in region coordinates) of the root prim of the object which the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRootRotation" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation (relative to the region) of the root prim of the object which the script is attached to</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetRot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the rotation relative to the region's axes</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetScale" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the scale of the prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetScriptName" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the name of the script that this function is used in</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetScriptState" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="script" Type="String" />
    <DocumentationString>Returns TRUE if the script name is running</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSimStats" ReturnType="Float" Subsets="lsl">
    <Parameter Name="stat_type" Type="Integer" />
    <DocumentationString>Returns the value of a particular simulator statistic</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSimulatorHostname" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the hostname of the machine which the script is running on (same as string in viewer Help dialog)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSPMaxMemory" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the maximum used memory for the current script. Only valid after using PROFILE_SCRIPT_MEMORY. Non-mono scripts always use 16k</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetStartParameter" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns an integer that is the script start/rez parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetStaticPath" ReturnType="List" Subsets="lsl">
    <Parameter Name="start" Type="Vector" />
    <Parameter Name="end" Type="Vector" />
    <Parameter Name="radius" Type="Float" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Returns a list of position vectors indicating pathfinding waypoints between positions at start and end, for a character of a given radius</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetStatus" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="status" Type="Integer" />
    <DocumentationString>Returns value of status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSubString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="start" Type="Integer" />
    <Parameter Name="end" Type="Integer" />
    <DocumentationString>Returns the indicated substring</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetSunDirection" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns a normalized vector of the direction of the sun in the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTexture" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns a string that is the texture on face (the inventory name if it is a texture in the prim's inventory, otherwise the key)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTextureOffset" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns the texture offset of face in the x and y components of a vector</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTextureRot" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns the texture rotation of side</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTextureScale" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns the texture scale of side in the x and y components of a vector</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTime" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since the last region reset, script reset, or call to either llResetTime or llGetAndResetTime</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTimeOfDay" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since grid server midnight or since region up-time, whichever is smaller</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTimestamp" ReturnType="String" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the timestamp in the UTC time zone in the format; YYYY-MM-DDThh;mm;ss.ff..fZ</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetTorque" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the torque (if the script is physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetUnixTime" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the number of seconds elapsed since 00;00 hours, Jan 1, 1970 UTC from the system clock</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetUsedMemory" ReturnType="Integer" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the current used memory for the current script. Non-mono scripts always use 16k</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetUsername" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the single-word username of an avatar, iff the avatar is in the current region, otherwise the empty string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetVel" ReturnType="Vector" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the velocity of the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGetWallclock" ReturnType="Float" Subsets="lsl,os-lsl">
    <DocumentationString>Returns the time in seconds since midnight California Pacific time (PST/PDT)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGiveInventory" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="destination" Type="Key" />
    <Parameter Name="inventory" Type="String" />
    <DocumentationString>Gives inventory to destination</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGiveInventoryList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="folder" Type="String" />
    <Parameter Name="inventory" Type="List" />
    <DocumentationString>Gives inventory items to target, creating a new folder to put them in</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGiveMoney" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="destination" Type="Key" />
    <Parameter Name="amount" Type="Integer" />
    <DocumentationString>Transfers amount of L$ from script owner to destination</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGodLikeRezObject" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="inventory" Type="Key" />
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Rezzes directly off of UUID if owner is in God Mode</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGround" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the ground height below the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundContour" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the ground contour direction below the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundNormal" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the ground normal below the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundRepel" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="height" Type="Float" />
    <Parameter Name="water" Type="Integer" />
    <Parameter Name="tau" Type="Float" />
    <DocumentationString>Critically damps to height if within height*0.5 of level (either above ground level, or above the higher of land and water if water == TRUE)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llGroundSlope" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the ground slope below the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llHTTPRequest" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="url" Type="String" />
    <Parameter Name="parameters" Type="List" />
    <Parameter Name="body" Type="String" />
    <DocumentationString>Sends an HTTP request to the specified url with the body of the request and parameters</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llHTTPResponse" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="request_id" Type="Key" />
    <Parameter Name="status" Type="Integer" />
    <Parameter Name="body" Type="String" />
    <DocumentationString>Responds to request_id with status and body</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llInsertString" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="dst" Type="String" />
    <Parameter Name="pos" Type="Integer" />
    <Parameter Name="src" Type="String" />
    <DocumentationString>Returns a destination string dst with the string src inserted starting at position pos</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llInstantMessage" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="user" Type="Key" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Sends the specified string as an Instant Message to the user</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llIntegerToBase64" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="number" Type="Integer" />
    <DocumentationString> Returns a string that is a Base64 big endian encode of number</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJson2List" ReturnType="List" Subsets="lsl">
    <Parameter Name="src" Type="String" />
    <DocumentationString>Converts the top level of the json string to a list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJsonGetValue" ReturnType="String" Subsets="lsl">
    <Parameter Name="json" Type="String" />
    <Parameter Name="specifiers" Type="List" />
    <DocumentationString>Returns the value indicated by specifiers from the json string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJsonSetValue" ReturnType="String" Subsets="lsl">
    <Parameter Name="json" Type="String" />
    <Parameter Name="specifiers" Type="List" />
    <Parameter Name="value" Type="String" />
    <DocumentationString>Returns a new json string that is the json given with the value indicated by specifiers set to value</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llJsonValueType" ReturnType="String" Subsets="lsl">
    <Parameter Name="json" Type="String" />
    <Parameter Name="specifiers" Type="List" />
    <DocumentationString>Returns the type constant for the value in json indicated by specifiers</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llKey2Name" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the name of the prim or avatar specified by id.;(The id must be a valid rezzed prim or avatar key in the current simulator, otherwise an empty string is returned.)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llKeyCountKeyValue" ReturnType="Key" Subsets="lsl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llKeysKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="first" Type="Integer" />
    <Parameter Name="count" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llLinkParticleSystem" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Creates a particle system based on rules.  Empty list removes particle system from object.;List format is [ rule1, data1, rule2, data2 . . . rulen, datan ]</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLinkSitTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="offset" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Set the sit location for this object (if offset == &lt;0,0,0&gt; clear it)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2CSV" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <DocumentationString>Creates a string of comma separated values from list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Float" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Copies the float at index in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Integer" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Copies the integer at index in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Json" ReturnType="String" Subsets="lsl">
    <Parameter Name="type" Type="String" />
    <Parameter Name="values" Type="List" />
    <DocumentationString>Converts either a strided list of key;value pairs to a JSON_OBJECT or a list of values to a JSON_ARRAY</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Key" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Copies the key at index in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2List" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="start" Type="Integer" />
    <Parameter Name="end" Type="Integer" />
    <DocumentationString>Copies the slice of the list from start to end</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2ListStrided" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="start" Type="Integer" />
    <Parameter Name="end" Type="Integer" />
    <Parameter Name="stride" Type="Integer" />
    <DocumentationString>Copies the strided slice of the list from start to end</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Rot" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Copies the rotation at index in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Copies the string at index in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llList2Vector" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>Copies the vector at index in the list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListen" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="id" Type="Key" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Sets a callback for message on channel from name and id (name, id, and/or message can be empty) and returns an identifier that can be used to deactivate or remove the listen</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListenControl" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="handle" Type="Integer" />
    <Parameter Name="active" Type="Integer" />
    <DocumentationString>Makes a listen event callback active or inactive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListenRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="handle" Type="Integer" />
    <DocumentationString>Removes listen event callback number</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListFindList" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="test" Type="List" />
    <DocumentationString>Returns the index of the first instance of test in src</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListInsertList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="dest" Type="List" />
    <Parameter Name="src" Type="List" />
    <Parameter Name="start" Type="Integer" />
    <DocumentationString>Returns a list that contains all the elements from dest but with the elements from src inserted at position start</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListRandomize" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="stride" Type="Integer" />
    <DocumentationString>Returns a randomized list of blocks of size stride</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListReplaceList" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="dest" Type="List" />
    <Parameter Name="src" Type="List" />
    <Parameter Name="start" Type="Integer" />
    <Parameter Name="end" Type="Integer" />
    <DocumentationString>Returns a list that is dest with start through end removed and src inserted at start</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListSort" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="stride" Type="Integer" />
    <Parameter Name="ascending" Type="Integer" />
    <DocumentationString>Sorts the list into blocks of stride, in ascending order if ascending == TRUE.;The sort order is affected by type</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llListStatistics" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="operation" Type="Integer" />
    <Parameter Name="src" Type="List" />
    <DocumentationString>Performs statistical aggregate functions on list src using LIST_STAT_* operations</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoadURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="message" Type="String" />
    <Parameter Name="url" Type="String" />
    <DocumentationString>Shows a dialog to avatar offering to load the web page at url with a message.;If user clicks yes, launches the page in their web browser</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLog" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns the natural logarithm of val.  Returns zero if val &lt;= 0</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLog10" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns the base 10 logarithm of val.  Returns zero if val &lt;= 0</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLookAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Vector" />
    <Parameter Name="strength" Type="Float" />
    <Parameter Name="damping" Type="Float" />
    <DocumentationString>Causes object to point its up axis (positive z) towards target, while keeping its forward axis (positive x) below the horizon</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoopSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Plays attached sound looping indefinitely at volume (0.0 - 1.0)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoopSoundMaster" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Plays attached sound looping at volume (0.0 - 1.0), declares it a sync master</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llLoopSoundSlave" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Plays attached sound looping at volume (0.0 - 1.0), synced to most audible sync master</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeExplosion" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="particles" Type="Integer" />
    <Parameter Name="scale" Type="Float" />
    <Parameter Name="vel" Type="Float" />
    <Parameter Name="lifetime" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Makes a round explosion of particles</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeFire" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="particles" Type="Integer" />
    <Parameter Name="scale" Type="Float" />
    <Parameter Name="vel" Type="Float" />
    <Parameter Name="lifetime" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Makes fire like particles</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeFountain" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="particles" Type="Integer" />
    <Parameter Name="scale" Type="Float" />
    <Parameter Name="vel" Type="Float" />
    <Parameter Name="lifetime" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="bounce" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="offset" Type="Vector" />
    <Parameter Name="bounce_offset" Type="Float" />
    <DocumentationString>Makes a fountain of particles</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMakeSmoke" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="particles" Type="Integer" />
    <Parameter Name="scale" Type="Float" />
    <Parameter Name="vel" Type="Float" />
    <Parameter Name="lifetime" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Makes smoke like particles</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llManageEstateAccess" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="action" Type="Integer" />
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>To add or remove agents from the estate's agent access or ban lists or groups from the estate's group access list.;Only works for objects owned by the Estate Owner or an Estate Manager.;Returns TRUE if successful and FALSE if throttled, on invalid action, on invalid or null id, or if object owner is not allowed to manage the estate.;action can be any of; ESTATE_ACCESS_ALLOWED_[AGENT/GROUP]_[ADD/REMOVE] or ESTATE_ACCESS_BANNED_AGENT_[ADD/REMOVE]</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMapDestination" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="simname" Type="String" />
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="look_at" Type="Vector" />
    <DocumentationString>Opens the World Map centered on the region simname with pos highlighted. (NOTE; look_at currently does nothing.);Only works for scripts attached to avatar, or during touch events</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMatchGroup" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="group_keys" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llMD5String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="nonce" Type="Integer" />
    <DocumentationString>Returns a string of 32 hex characters that is a RSA Data Security, Inc. MD5 Message-Digest Algorithm of src with nonce</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMessageLinked" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="num" Type="Integer" />
    <Parameter Name="str" Type="String" />
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Allows scripts in the same object to communicate. Triggers a link_message event with the same parameters num, str, and id in all scripts in the prim(s) described by linknum.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMinEventDelay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="delay" Type="Float" />
    <DocumentationString>Sets the minimum time between events being handled</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llModifyLand" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="action" Type="Integer" />
    <Parameter Name="brush" Type="Integer" />
    <DocumentationString>Modifies land using the specified action on the specified brush size of land</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llModPow" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="a" Type="Integer" />
    <Parameter Name="b" Type="Integer" />
    <Parameter Name="c" Type="Integer" />
    <DocumentationString>Returns a raised to the b power, mod c. ( (a**b)%c );b is capped at 0xFFFF (16 bits).</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llMoveToTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Vector" />
    <Parameter Name="tau" Type="Float" />
    <DocumentationString>Critically damps to target in tau seconds (if the script is physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llNavigateTo" ReturnType="Void" Subsets="lsl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Navigate to destination</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOffsetTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="u" Type="Float" />
    <Parameter Name="v" Type="Float" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the texture u  &amp; v offsets for the chosen face or ALL_SIDES</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOpenRemoteDataChannel" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Creates a channel to listen for XML-RPC calls, and will trigger a remote_data event with channel id once it is available</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOverMyLand" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns TRUE if id is over land owned by the script owner, otherwise FALSE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llOwnerSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Says message to owner only.  (Owner must be in the same region.)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParcelMediaCommandList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="commandList" Type="List" />
    <DocumentationString>Sends a list of commands, some with arguments, to a parcel to control the playback of movies and other media</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParcelMediaQuery" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="query" Type="List" />
    <DocumentationString>Returns a list containing results of the sent query</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParseString2List" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="separators" Type="List" />
    <Parameter Name="spacers" Type="List" />
    <DocumentationString>Breaks src into a list, discarding separators, keeping spacers;(separators and spacers must be lists of strings, maximum of 8 each)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParseStringKeepNulls" ReturnType="List" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="separators" Type="List" />
    <Parameter Name="spacers" Type="List" />
    <DocumentationString>Breaks src into a list, discarding separators, keeping spacers, keeping any null values generated.;(separators and spacers must be lists of strings, maximum of 8 each)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llParticleSystem" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Creates a particle system based on rules.  An empty list removes the particle system.;List format is [ rule1, data1, rule2, data2 . . . rulen, datan ]</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPassCollisions" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="pass" Type="Integer" />
    <DocumentationString>If pass == TRUE, collisions are passed from children on to parents (default is FALSE)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPassTouches" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="pass" Type="Integer" />
    <DocumentationString>If pass == TRUE, touches are passed from children on to parents</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPatrolPoints" ReturnType="Void" Subsets="lsl">
    <Parameter Name="patrolPoints" Type="List" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Patrol a list of points</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPlaySound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Plays attached sound once at volume (0.0 - 1.0)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPlaySoundSlave" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Plays attached sound once at volume (0.0 - 1.0), synced to next loop of most audible sync master</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPointAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Makes agent that owns object point at pos</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPow" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="base" Type="Float" />
    <Parameter Name="exponent" Type="Float" />
    <DocumentationString>Returns the base raised to the power exponent, or returns 0 and triggers Math Error for imaginary results</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPreloadSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <DocumentationString>Preloads a sound on viewers within range</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPursue" ReturnType="Void" Subsets="lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Chase after a target</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llPushObject" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="impulse" Type="Vector" />
    <Parameter Name="ang_impulse" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Applies impulse and ang_impulse to object id</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReadKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llRefreshPrimURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Reloads the web page shown on the sides of the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRegionSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Broadcasts message on channel (not 0) that can be heard anywhere in the region by a script listening on channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRegionSayTo" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Sends message on channel (not DEBUG_CHANNEL) directly to prim or avatar target anywhere within the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReleaseCamera" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Returns camera to agent avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReleaseControls" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops taking inputs that were taken with llTakeControls</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReleaseURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>Releases the specified URL, it will no longer be usable</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoteDataReply" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Key" />
    <Parameter Name="message_id" Type="Key" />
    <Parameter Name="sdata" Type="String" />
    <Parameter Name="idata" Type="Integer" />
    <DocumentationString>Sends an XML-RPC reply to message_id on channel with payload of string sdata and integer idata</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoteDataSetRegion" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>DEPRECATED!  Please use llOpenRemoteDataChannel instead.;If an object using remote data channels changes regions, you must call this function to reregister the remote data channels. This call is not needed if the prim does not change regions</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoteLoadScript" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="running" Type="Integer" />
    <Parameter Name="start_param" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llRemoteLoadScriptPin" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="pin" Type="Integer" />
    <Parameter Name="running" Type="Integer" />
    <Parameter Name="start_param" Type="Integer" />
    <DocumentationString>Copies script name onto target, if the owner of this scripted object can modify target and is in the same region, and the matching pin is used.;If running == TRUE, starts the script with start_param</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveFromLandBanList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Removes avatar from the land ban list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveFromLandPassList" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Removes avatar from the land pass list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveInventory" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="item" Type="String" />
    <DocumentationString>Removes the named inventory item</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRemoveVehicleFlags" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="flags" Type="Integer" />
    <DocumentationString>Removes the enabled bits in 'flags'</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestAgentData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <Parameter Name="data" Type="Integer" />
    <DocumentationString>Requests data about agent id. When data is available the dataserver event will be raised</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestDisplayName" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Requests name of an avatar.  When data is available the dataserver event will be raised</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestExperiencePermissions" ReturnType="Void" Subsets="lsl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="name" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llRequestInventoryData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Requests data from object's inventory object. When data is available the dataserver event will be raised</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestPermissions" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="permissions" Type="Integer" />
    <DocumentationString>Asks the agent for permission to run certain classes of functions</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestSecureURL" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Requests one HTTPS;// (SSL) url for use by this object.;An http_request event is triggered with the results</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestSimulatorData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="region" Type="String" />
    <Parameter Name="data" Type="Integer" />
    <DocumentationString>Requests data about simulator.  When data is available the dataserver event will be raised</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestURL" ReturnType="Key" Subsets="lsl,os-lsl">
    <DocumentationString>Requests one HTTP;// url for use by this object.;An http_request event is triggered with the results</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRequestUsername" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Requests single-word username of an avatar.  When data is available the dataserver event will be raised</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetAnimationOverride" ReturnType="Void" Subsets="lsl">
    <Parameter Name="anim_state" Type="String" />
    <DocumentationString>Resets the animation override of the specified animation state (anim_state) to the corresponding default value</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetLandBanList" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Removes all Residents from the land ban list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetLandPassList" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Removes all Residents from the land access/pass list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetOtherScript" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Resets script name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetScript" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Resets the script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llResetTime" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the script timer to zero</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReturnObjectsByID" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="objects" Type="List" />
    <DocumentationString>Returns a list of objects by their IDs</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llReturnObjectsByOwner" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="owner" Type="Key" />
    <Parameter Name="scope" Type="Integer" />
    <DocumentationString>Returns all objects of a particular owner in the given scope</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRezAtRoot" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="inventory" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="velocity" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <Parameter Name="param" Type="Integer" />
    <DocumentationString>Instantiates owner's inventory object rotated to rot with its root at pos, moving at vel, using param as the start parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRezObject" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="inventory" Type="String" />
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="vel" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <Parameter Name="param" Type="Integer" />
    <DocumentationString>Instantiates owner's inventory object at pos with velocity vel and rotation rot with start parameter param</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Angle" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Returns the rotation angle represented by rot</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Axis" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Returns the rotation axis represented by rot</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Euler" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="quat" Type="Rotation" />
    <DocumentationString>Returns the Euler representation (roll, pitch, yaw) of q</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Fwd" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="q" Type="Rotation" />
    <DocumentationString>Returns the forward vector defined by q</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Left" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="q" Type="Rotation" />
    <DocumentationString>Returns the left vector defined by q</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRot2Up" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="q" Type="Rotation" />
    <DocumentationString>Returns the up vector defined by q</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotateTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="angle" Type="Float" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the texture rotation for the chosen face</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotBetween" ReturnType="Rotation" Subsets="lsl,os-lsl">
    <Parameter Name="start" Type="Vector" />
    <Parameter Name="end" Type="Vector" />
    <DocumentationString>Returns the rotation to rotate v1 to v2</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotLookAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="target_direction" Type="Rotation" />
    <Parameter Name="strength" Type="Float" />
    <Parameter Name="damping" Type="Float" />
    <DocumentationString>Causes object to point its forward axis towards target</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotTarget" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="rot" Type="Rotation" />
    <Parameter Name="error" Type="Float" />
    <DocumentationString>Set rotations with error of rot as a rotational target and return an ID for the rotational target</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRotTargetRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="handle" Type="Integer" />
    <DocumentationString>Removes rotational target number registered with llRotTarget</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llRound" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns val rounded to the nearest integer</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSameGroup" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="uuid" Type="Key" />
    <DocumentationString>Returns TRUE if avatar id is in the same region and has the same active group, otherwise FALSE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSay" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Says the text of message on channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScaleByFactor" ReturnType="Integer" Subsets="lsl">
    <Parameter Name="scaling_factor" Type="Float" />
    <DocumentationString>Uniformly resizes the linkset by the given multiplicative scale factor;Returns TRUE if rescaling was successful or FALSE otherwise</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScaleTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="u" Type="Float" />
    <Parameter Name="v" Type="Float" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the texture u &amp; v scales for the chosen face or ALL_SIDES</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScriptDanger" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Returns TRUE if pos is over public land, sandbox land, land that doesn't allow everyone to edit and build, or land that doesn't allow outside scripts</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llScriptProfiler" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="flags" Type="Integer" />
    <DocumentationString>
      Enabled or disables script profiling options. Currently only supports PROFILE_SCRIPT_MEMORY (mono only) and PROFILE_NONE.
      MAY SIGNIFICANTLY REDUCE SCRIPT PERFORMANCE!
    </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSendRemoteData" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Key" />
    <Parameter Name="dest" Type="String" />
    <Parameter Name="idata" Type="Integer" />
    <Parameter Name="sdata" Type="String" />
    <DocumentationString>Sends an XML-RPC request to dest through channel with payload of channel (in a string), integer idata and string sdata.;Returns a key that is the message_id for the resulting remote_data events.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSensor" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="id" Type="Key" />
    <Parameter Name="type" Type="Integer" />
    <Parameter Name="radius" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <DocumentationString>Performs a single scan for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSensorRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Removes the sensor setup by llSensorRepeat</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSensorRepeat" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="id" Type="Key" />
    <Parameter Name="type" Type="Integer" />
    <Parameter Name="range" Type="Float" />
    <Parameter Name="arc" Type="Float" />
    <Parameter Name="rate" Type="Float" />
    <DocumentationString>Sets a callback for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0) and repeats every rate seconds</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetAlpha" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="alpha" Type="Float" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the alpha on face</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetAngularVelocity" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="initial_omega" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Sets an objects angular velocity, in local coords if local == TRUE (if the script is physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetAnimationOverride" ReturnType="Void" Subsets="lsl">
    <Parameter Name="anim_state" Type="String" />
    <Parameter Name="anim" Type="String" />
    <DocumentationString>Set the animation (anim) that will play for the given animation state (anim_state)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetBuoyancy" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="buoyancy" Type="Float" />
    <DocumentationString>Sets the buoyancy of the task or object (0 is disabled, &lt; 1.0 sinks, 1.0 floats, &gt; 1.0 rises)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetCameraAtOffset" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Sets the point the camera is looking at to offset for avatars that sit on the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkCamera" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="eye" Type="Vector" />
    <Parameter Name="at" Type="Vector" />
    <DocumentationString>Sets the camera eye offset, and the offset that camera is looking at, for avatars that sit on the linked prim.;The two vector parameters are offsets relative to the object's center and expressed in local coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetCameraEyeOffset" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Sets the camera eye offset for avatars that sit on the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetCameraParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets multiple camera parameters at once.;List format is [ rule1, data1, rule2, data2 . . . rulen, datan ]</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetClickAction" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="action" Type="Integer" />
    <DocumentationString>Sets the action performed when a prim is clicked upon</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetColor" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="color" Type="Vector" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the color on face of the prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetContentType" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="request_id" Type="Key" />
    <Parameter Name="content_type" Type="Integer" />
    <DocumentationString>Set the Internet media type of an LSL HTTP server response.;content_type may be one of CONTENT_TYPE_TEXT (default) "text/plain", or CONTENT_TYPE_HTML "text/html", only valid for embedded browsers on content owned by the person viewing. Falls back to "text/plain" otherwise</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetDamage" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="damage" Type="Float" />
    <DocumentationString>Sets the amount of damage that will be done when this object hits an avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetForce" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="force" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Applies force to the object (if the script is physical), in local coords if local == TRUE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetForceAndTorque" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="force" Type="Vector" />
    <Parameter Name="torque" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Sets the force and torque of object (if the script is physical), in local coords if local == TRUE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetHoverHeight" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="height" Type="Float" />
    <Parameter Name="water" Type="Integer" />
    <Parameter Name="tau" Type="Float" />
    <DocumentationString>Critically damps to a height above the ground (or water) in tau seconds</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetInventoryPermMask" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="item" Type="String" />
    <Parameter Name="category" Type="Integer" />
    <Parameter Name="value" Type="Integer" />
    <DocumentationString>Sets the given permission mask to the new value on the inventory item (requires God Mode)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetKeyframedMotion" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="keyframes" Type="List" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>Requests that a nonphysical object be keyframed according to keyframe list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkAlpha" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="alpha" Type="Float" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>If a prim exists in the link chain at linknumber, sets face to alpha</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkColor" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="color" Type="Vector" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets face to color if a task exists in the link chain at linknumber</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkMedia" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Set the media params for a particular face on linked prim.  List is a set of name/value pairs (in no particular order). The possible names are below, along with the types of values and what they mean.  If media is not already on this object, add it. Params not specified are unchanged, or if new media is added set to the default specified</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="texture" Type="String" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the texture of face for a task that exists in the link chain at linknumber</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkTextureAnim" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="mode" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="sizex" Type="Integer" />
    <Parameter Name="sizey" Type="Integer" />
    <Parameter Name="start" Type="Float" />
    <Parameter Name="length" Type="Float" />
    <Parameter Name="rate" Type="Float" />
    <DocumentationString>Animate the texture on the specified prim's face/faces</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLocalRot" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Sets the rotation of a child prim relative to the root prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetMemoryLimit" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="limit" Type="Integer" />
    <DocumentationString>Request limit bytes to be reserved for this script.;Returns a success/failure flag (STATUS_OK when successful, another of the STATUS_* flags on failure) for whether the memory limit was set.;Only relevant for Mono-compiled scripts</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetObjectDesc" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="description" Type="String" />
    <DocumentationString>Sets the prim's description</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetObjectName" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Sets the prim's name to the name parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetObjectPermMask" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="mask" Type="Integer" />
    <Parameter Name="value" Type="Integer" />
    <DocumentationString>Sets the given permission mask to the new value on the root object the task is attached to (requires God Mode)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetParcelMusicURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>
      Sets the streaming audio URL for the parcel which the object is on
    </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPayPrice" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="price" Type="Integer" />
    <Parameter Name="quick_pay_buttons" Type="List" />
    <DocumentationString>Sets the default amount on the dialog that appears when someone chooses to pay this prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPhysicsMaterial" ReturnType="Void" Subsets="lsl">
    <Parameter Name="mask" Type="Integer" />
    <Parameter Name="gravity_multiplier" Type="Float" />
    <Parameter Name="restitution" Type="Float" />
    <Parameter Name="friction" Type="Float" />
    <Parameter Name="density" Type="Float" />
    <DocumentationString>Sets the requested attributes of the root object's physics material</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPos" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Moves the object or prim towards pos without using physics (if the script isn't physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkPrimitiveParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets primitive parameters for linknumber based on rules</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetLinkPrimitiveParamsFast" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="link" Type="Integer" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Set primitive parameters for linknumber based on rules</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPrimitiveParams" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets the prim's parameters according to rules</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPrimMediaParams" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Sets the media params for a particular face on an object. If media is not already on this object, add it.;List is a set of name/value pairs in no particular order.  Params not specified are unchanged, or if new media is added then set to the default specified.;The possible names are below, along with the types of values and what they mean</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetPrimURL" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>Updates the URL for the web page shown on the sides of the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetRegionPos" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="position" Type="Vector" />
    <DocumentationString>Sets the position anywhere within the region (if the object isn't physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetRemoteScriptAccessPin" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="pin" Type="Integer" />
    <DocumentationString>If pin is set to a non-zero number, allows a prim to have scripts remotely loaded via llRemoteLoadScriptPin when it passes in the correct pin. Otherwise, llRemoteLoadScriptPin is ignored</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetRot" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Sets the rotation</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetScale" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="size" Type="Vector" />
    <DocumentationString>Sets the scale of the prim</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetScriptState" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="running" Type="Integer" />
    <DocumentationString>Sets the running state of the specified script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetSitText" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="text" Type="String" />
    <DocumentationString>Displays text rather than the default 'Sit Here' in the pie menu</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetSoundQueueing" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="queue" Type="Integer" />
    <DocumentationString>Sets whether attached sounds wait for the current sound to finish (If queue == TRUE then queuing is enabled, if FALSE queuing is disabled [default])</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetSoundRadius" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="radius" Type="Float" />
    <DocumentationString>Establishes a hard cut-off radius for audibility of scripted sounds (both attached and triggered)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetStatus" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="status" Type="Integer" />
    <Parameter Name="value" Type="Integer" />
    <DocumentationString>Sets status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z) to value</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetText" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="text" Type="String" />
    <Parameter Name="color" Type="Vector" />
    <Parameter Name="alpha" Type="Float" />
    <DocumentationString>Displays text that hovers over the prim with specific color and translucency specified with alpha</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTexture" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="texture" Type="String" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Sets the texture of face or ALL_SIDES</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTextureAnim" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="mode" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <Parameter Name="sizex" Type="Integer" />
    <Parameter Name="sizey" Type="Integer" />
    <Parameter Name="start" Type="Float" />
    <Parameter Name="length" Type="Float" />
    <Parameter Name="rate" Type="Float" />
    <DocumentationString>Animates the texture on the specified face/faces</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTimerEvent" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sec" Type="Float" />
    <DocumentationString>Causes the timer event to be triggered a maximum of once every sec seconds</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTorque" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="torque" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Sets the torque of object (if the script is physical), in local coords if local == TRUE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetTouchText" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="text" Type="String" />
    <DocumentationString>Displays text rather than the default 'Touch' in the pie menu</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleFlags" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="flags" Type="Integer" />
    <DocumentationString>Sets the enabled bits in "flags"</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleFloatParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="param" Type="Integer" />
    <Parameter Name="value" Type="Float" />
    <DocumentationString>Sets the specified vehicle float parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleRotationParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="param" Type="Integer" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Sets the specified vehicle rotation parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleType" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="type" Type="Integer" />
    <DocumentationString>Sets the vehicle to one of the default types</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVehicleVectorParam" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="param" Type="Integer" />
    <Parameter Name="vec" Type="Vector" />
    <DocumentationString>Sets the specified vehicle vector parameter</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSetVelocity" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="force" Type="Vector" />
    <Parameter Name="local" Type="Integer" />
    <DocumentationString>Sets an objects velocity, in local coords if local == TRUE (if the script is physical)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSHA1String" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <DocumentationString>Returns a string of 40 hex characters that is the SHA1 security Hash of src</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llShout" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Shouts the text of message on channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSin" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="theta" Type="Float" />
    <DocumentationString>Returns the sine of theta (theta in radians)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSitTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Sets the sit location for the prim.  If offset == &lt;0,0,0&gt; then the sit target is removed.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSleep" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sec" Type="Float" />
    <DocumentationString>Puts the script to sleep for sec seconds</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <Parameter Name="queue" Type="Integer" />
    <Parameter Name="loop" Type="Integer" />
    <DocumentationString>Plays sound at volume and whether it should loop or not</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSoundPreload" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <DocumentationString>Preloads a sound on viewers within range</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSqrt" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Returns the square root of val, or returns 0 and triggers a Math Error for imaginary results</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStartAnimation" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="anim" Type="String" />
    <DocumentationString>Starts animation anim for agent that granted PERMISSION_TRIGGER_ANIMATION if the permission has not been revoked</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopAnimation" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="anim" Type="String" />
    <DocumentationString>Stops animation anim for agent that granted permission</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopHover" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops hovering to a height</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopLookAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops causing object to point at a target</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopMoveToTarget" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops critically damped motion</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopPointAt" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops pointing agent that owns object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStopSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <DocumentationString>Stops currently attached sound</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStringLength" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="str" Type="String" />
    <DocumentationString>Returns the length of string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStringToBase64" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="str" Type="String" />
    <DocumentationString>Converts a string to the Base64 representation of the string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llStringTrim" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="type" Type="Integer" />
    <DocumentationString>Trims the leading and/or trailing white spaces from a string.;trim_type can be STRING_TRIM, STRING_TRIM_HEAD or STRING_TRIM_TAIL</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llSubStringIndex" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="source" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <DocumentationString>Returns an integer that is the index in source where pattern first appears.;(Returns -1 if not found)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTakeCamera" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Moves avatar's viewpoint to task</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTakeControls" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="controls" Type="Integer" />
    <Parameter Name="accept" Type="Integer" />
    <Parameter Name="pass_on" Type="Integer" />
    <DocumentationString>Allows for intercepting keyboard and mouse clicks from the agent the script has permissions for</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTan" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="theta" Type="Float" />
    <DocumentationString>Returns the tangent of theta (theta in radians)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTarget" ReturnType="Integer" Subsets="lsl,os-lsl">
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="range" Type="Float" />
    <DocumentationString>Sets positions within range of position as a target and return an ID for the target</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTargetOmega" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="axis" Type="Vector" />
    <Parameter Name="spinrate" Type="Float" />
    <Parameter Name="gain" Type="Float" />
    <DocumentationString>Rotates the object around axis at spinrate with strength gain</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTargetRemove" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="handle" Type="Integer" />
    <DocumentationString>Removes positional target number registered with llTarget</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTeleportAgent" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="landmark" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="look_at" Type="Vector" />
    <DocumentationString>Requests a teleport of avatar to a landmark stored in the object's inventory. If no landmark is provided (an empty string), the avatar is teleported to the location position in the current region. In either case, the avatar is turned to face the position given by look_at in local coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTeleportAgentGlobalCoords" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="global_coordinates" Type="Vector" />
    <Parameter Name="region_coordinates" Type="Vector" />
    <Parameter Name="look_at" Type="Vector" />
    <DocumentationString>Teleports an agent to set of a region_coordinates within a region at the specified global_coordinates. The agent lands facing the position defined by look_at local coordinates.;A region's global coordinates can be retrieved using llRequestSimulatorData(region_name, DATA_SIM_POS)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTeleportAgentHome" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <DocumentationString>Teleports avatar on the owner's land to their home location without any warning</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTextBox" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="message" Type="String" />
    <Parameter Name="channel" Type="Integer" />
    <DocumentationString>Shows a window on the avatar's screen with the message.;It contains a text box for input, and if entered that text is chatted on chat_channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llToLower" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <DocumentationString>Returns a string that is src with all lower-case characters</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llToUpper" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="src" Type="String" />
    <DocumentationString>Returns a string that is src with all upper-case characters</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTransferLindenDollars" ReturnType="Key" Subsets="lsl,os-lsl">
    <Parameter Name="destination" Type="Key" />
    <Parameter Name="amount" Type="Integer" />
    <DocumentationString>Transfer amount of linden dollars (L$) from script owner to destination. Returns a key to a corresponding transaction_result event for the success of the transfer</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTriggerSound" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <DocumentationString>Plays sound at volume (0.0 - 1.0), centered at but not attached to object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llTriggerSoundLimited" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="sound" Type="String" />
    <Parameter Name="volume" Type="Float" />
    <Parameter Name="top_north_east" Type="Vector" />
    <Parameter Name="bottom_south_west" Type="Vector" />
    <DocumentationString>Plays sound at volume (0.0 - 1.0), centered at but not attached to object, limited to the box defined by vectors top_north_east and bottom_south_west</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUnescapeURL" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>Returns an unescaped/ unencoded version of url, replacing %20 with spaces etc</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUnSit" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>If avatar identified by id is sitting on the object the script is attached to or is over land owned by the object's owner, the avatar is forced to stand up</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUpdateCharacter" ReturnType="Void" Subsets="lsl">
    <Parameter Name="options" Type="List" />
    <DocumentationString>Change the AI Character's settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llUpdateKeyValue" ReturnType="Key" Subsets="lsl">
    <Parameter Name="k" Type="String" />
    <Parameter Name="v" Type="String" />
    <Parameter Name="checked" Type="Integer" />
    <Parameter Name="original_value" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llVecDist" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="vec_a" Type="Vector" />
    <Parameter Name="vec_b" Type="Vector" />
    <DocumentationString>Returns the 3D distance between v1 and v2</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVecMag" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="vec" Type="Vector" />
    <DocumentationString>Returns the magnitude of v</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVecNorm" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="vec" Type="Vector" />
    <DocumentationString>Returns the v normalized</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llVolumeDetect" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="detect" Type="Integer" />
    <DocumentationString>If detect = TRUE, object works much like Phantom, but triggers collision_start and collision_end events when other objects start and stop interpenetrating.;Must be applied to the root prim.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWanderWithin" ReturnType="Void" Subsets="lsl">
    <Parameter Name="origin" Type="Vector" />
    <Parameter Name="dist" Type="Vector" />
    <Parameter Name="options" Type="List" />
    <DocumentationString>For AI Character: Wander within a specified volume</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWater" ReturnType="Float" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the water height below the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWhisper" ReturnType="Void" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Whispers the text of message on channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llWind" ReturnType="Vector" Subsets="lsl,os-lsl">
    <Parameter Name="offset" Type="Vector" />
    <DocumentationString>Returns the wind velocity at the object position + offset</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llXorBase64" ReturnType="String" Subsets="lsl">
    <Parameter Name="str1" Type="String" />
    <Parameter Name="str2" Type="String" />
    <DocumentationString>Correctly performs an exclusive or on two Base64 strings and returns a Base64 string.;If the inputs are not Base64 strings the result will be erratic</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="llXorBase64Strings" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="str1" Type="String" />
    <Parameter Name="str2" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="llXorBase64StringsCorrect" ReturnType="String" Subsets="lsl,os-lsl">
    <Parameter Name="str1" Type="String" />
    <Parameter Name="str2" Type="String" />
    <DocumentationString>Correctly performs an exclusive or on two Base64 strings.;s2 repeats if it is shorter than s1</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAgentSaveAppearance" ReturnType="Key" Subsets="ossl">
    <Parameter Name="agentId" Type="Key" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Creates a notecard with the specified avatar's current appearance inside the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAvatarName2Key" ReturnType="String" Subsets="ossl">
    <Parameter Name="FirstName" Type="String" />
    <Parameter Name="LastName" Type="String" />
    <DocumentationString>Returns the avatar's key from their first and last name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAvatarPlayAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Plays a given animation on a specified avatar.;No PERMISSION_TRIGGER_ANIMATION check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osAvatarStopAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Stops playing an animation on a specified avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osCauseDamage" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="damage" Type="Float" />
    <DocumentationString>Causes health damage to the specified avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osCauseHealing" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="healing" Type="Float" />
    <DocumentationString>Increase health to the specified avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osConsoleCommand" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="command" Type="String" />
    <DocumentationString>Sends a given console command to the region.;NOTE: There are no security checks with this function. DO NOT USE THIS FUNCTION UNLESS YOU ARE ABSOLUTELY SURE YOU KNOW WHAT YOU ARE DOING.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawEllipse" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <DocumentationString>Draws an ellipse on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawFilledPolygon" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="xpoints" Type="List" />
    <Parameter Name="ypoints" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osDrawFilledRectangle" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <DocumentationString>Draws a rectangle on a dynamic texture, and fills it with the current pen color</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawImage" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <Parameter Name="imageUrl" Type="String" />
    <DocumentationString>Retrieves a specified image and draws it at the specified height and width</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawLine" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="startX" Type="Integer" />
    <Parameter Name="startY" Type="Integer" />
    <Parameter Name="endX" Type="Integer" />
    <Parameter Name="endY" Type="Integer" />
    <DocumentationString>Draws a line on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawLine" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="endX" Type="Integer" />
    <Parameter Name="endY" Type="Integer" />
    <DocumentationString>Draws a line on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawPolygon" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="xpoints" Type="List" />
    <Parameter Name="ypoints" Type="List" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osDrawRectangle" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="width" Type="Integer" />
    <Parameter Name="height" Type="Integer" />
    <DocumentationString>Draws a rectangle on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDrawText" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="text" Type="String" />
    <DocumentationString>Renders text on a dynamic texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDropAttachment" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Drops an attachment</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osDropAttachmentAt" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Drops an attachment at a given position and rotation</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osEjectFromGroup" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="user" Type="Key" />
    <DocumentationString>Eject the specified avatar from the object's current group</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceAttachToAvatar" ReturnType="Void" Subsets="ossl">
    <Parameter Name="attachmentPoint" Type="Integer" />
    <DocumentationString>Attaches the object to the avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceAttachToAvatarFromInventory" ReturnType="Void" Subsets="ossl">
    <Parameter Name="itemName" Type="String" />
    <Parameter Name="attachmentPoint" Type="Integer" />
    <DocumentationString>Attaches given inventory item to the avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceAttachToOtherAvatarFromInventory" ReturnType="Void" Subsets="ossl">
    <Parameter Name="rawAvatarId" Type="String" />
    <Parameter Name="itemName" Type="String" />
    <Parameter Name="attachmentPoint" Type="Integer" />
    <DocumentationString>Attaches given inventory item to a specified avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceBreakAllLinks" ReturnType="Void" Subsets="ossl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osForceBreakLink" ReturnType="Void" Subsets="ossl">
    <Parameter Name="link" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osForceCreateLink" ReturnType="Void" Subsets="ossl">
    <Parameter Name="target" Type="Key" />
    <Parameter Name="parent" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osForceDetachFromAvatar" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Detaches the object from the avatar.;No PERMISSION_ATTACH check.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceDropAttachment" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Drops an attachment without a PERMISSION_ATTACH check</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceDropAttachmentAt" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Drops an attachment at a given position and rotation without a PERMISSION_ATTACH check</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osForceOtherSit" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osForceOtherSit" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <Parameter Name="target" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osFormatString" ReturnType="String" Subsets="ossl">
    <Parameter Name="format" Type="String" />
    <Parameter Name="params" Type="List" />
    <DocumentationString>Formats the given string using specified parameters</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetAgentIP" ReturnType="String" Subsets="ossl">
    <Parameter Name="uuid" Type="Key" />
    <DocumentationString>Returns the agent's IP Address</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetAgents" ReturnType="List" Subsets="ossl">
    <DocumentationString>Returns a list of all avatars in the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetAvatarList" ReturnType="List" Subsets="ossl">
    <DocumentationString>Returns a list with the keys, position, and name of each avatar in the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetCurrentSunHour" ReturnType="Float" Subsets="ossl">
    <DocumentationString>Returns the value of the current region's sun hour</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetDrawStringSize" ReturnType="Vector" Subsets="ossl">
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="text" Type="String" />
    <Parameter Name="fontName" Type="String" />
    <Parameter Name="fontSize" Type="Integer" />
    <DocumentationString>Returns a vector containing the horizontal and vertical dimensions in pixels of the specified text</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridCustom" ReturnType="String" Subsets="ossl">
    <Parameter Name="key" Type="String" />
    <DocumentationString>Returns the current grid's GridInfo key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridGatekeeperURI" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's Gatekeeper URI as a string.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridHomeURI" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's HomeURI</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridLoginURI" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's LoginURI</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridName" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's name</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetGridNick" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current grid's nickname</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetHealth" ReturnType="Float" Subsets="ossl">
    <Parameter Name="avatar" Type="String" />
    <DocumentationString>Return the target avatar's health</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetInventoryDesc" ReturnType="String" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the description of inventory item</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetLinkPrimitiveParams" ReturnType="List" Subsets="ossl">
    <Parameter Name="linknumber" Type="Integer" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Returns prim params for the prim specified by link_num</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetMapTexture" ReturnType="Key" Subsets="ossl">
    <DocumentationString>Returns the map texture key for the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNotecard" ReturnType="String" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the full contents of a notecard</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNotecardLine" ReturnType="String" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <Parameter Name="line" Type="Integer" />
    <DocumentationString>Returns a given line in a specified notecard contained in the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNumberOfAttachments" ReturnType="List" Subsets="ossl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="attachmentPoints" Type="List" />
    <DocumentationString>Returns a strided list of the specified attachment points and the number of attachments on those points</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetNumberOfNotecardLines" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="name" Type="String" />
    <DocumentationString>Returns the number of lines in a notecard</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetPhysicsEngineType" ReturnType="String" Subsets="ossl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetPrimitiveParams" ReturnType="List" Subsets="ossl">
    <Parameter Name="prim" Type="Key" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Returns the parameters of a primitive, specified by its key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRegionMapTexture" ReturnType="Key" Subsets="ossl">
    <Parameter Name="regionName" Type="String" />
    <DocumentationString>Returns the map texture key for a specified region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRegionSize" ReturnType="Vector" Subsets="ossl">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osGetRegionStats" ReturnType="List" Subsets="ossl">
    <DocumentationString>Returns the current region' statistics</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetRezzingObject" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the key of the object's parent object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetScriptEngineName" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the name of the script engine running on the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetSimulatorMemory" ReturnType="Integer" Subsets="ossl">
    <DocumentationString>Returns the memory in use by the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetSimulatorVersion" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the current simulator version</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetSunParam" ReturnType="Float" Subsets="ossl">
    <Parameter Name="param" Type="String" />
    <DocumentationString>Returns region's current sun parameters.;Param are: day_length, year_length, day_night_offset, update_interval.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetTerrainHeight" ReturnType="Float" Subsets="ossl">
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <DocumentationString>Returns the current region's terrain height as a float at the given coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGetWindParam" ReturnType="Float" Subsets="ossl">
    <Parameter Name="plugin" Type="String" />
    <Parameter Name="param" Type="String" />
    <DocumentationString>Gets the value of param property for plugin module.;SimpleRandomWind plugin param is: strength.;ConfigurableWind plugin params are: avgStrength, avgDirection, varStrength, varDirection, rateChange.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osGrantScriptPermissions" ReturnType="Void" Subsets="ossl">
    <Parameter Name="allowed_key" Type="Key" />
    <Parameter Name="function" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osInviteToGroup" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="user" Type="Key" />
    <DocumentationString>Invited the specified avatar to the object's current group</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osIsNpc" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Returns 1 if TRUE, 0 if FALSE</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osIsUUID" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="thing" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osKey2Name" ReturnType="String" Subsets="ossl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Returns the avatar's name from their key</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osKickAvatar" ReturnType="Void" Subsets="ossl">
    <Parameter Name="FirstName" Type="String" />
    <Parameter Name="SurName" Type="String" />
    <Parameter Name="alert" Type="String" />
    <DocumentationString>Kicks specified avatar out of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osList2Double" ReturnType="Float" Subsets="ossl">
    <Parameter Name="src" Type="List" />
    <Parameter Name="index" Type="Integer" />
    <DocumentationString>This function converts a value in the specified index of the list src to the double data type. However, OSSL does not have a double data type. C# contains a double type, but the current LSL implementation does not.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osListenRegex" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="channelID" Type="Integer" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="ID" Type="String" />
    <Parameter Name="msg" Type="String" />
    <Parameter Name="regexBitfield" Type="Integer" />
    <DocumentationString>Filter listen events by regex</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osLoadedCreationDate" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the creation date of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osLoadedCreationID" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the original UUID of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osLoadedCreationTime" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns the creation time of the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMakeNotecard" ReturnType="Void" Subsets="ossl">
    <Parameter Name="notecardName" Type="String" />
    <Parameter Name="contents" Type="List" />
    <DocumentationString>Creates a notecard with contents of list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMakeNotecard" ReturnType="Void" Subsets="ossl">
    <Parameter Name="notecardName" Type="String" />
    <Parameter Name="contents" Type="String" />
    <DocumentationString>Creates a notecard with contents of list</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMatchString" ReturnType="List" Subsets="ossl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <Parameter Name="start" Type="Integer" />
    <DocumentationString>Returns a list containing the matches from the specified string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMax" ReturnType="Float" Subsets="ossl">
    <Parameter Name="a" Type="Float" />
    <Parameter Name="b" Type="Float" />
    <DocumentationString>Returns the greater of two numbers</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMessageAttachments" ReturnType="Void" Subsets="ossl">
    <Parameter Name="avatar" Type="Key" />
    <Parameter Name="message" Type="String" />
    <Parameter Name="attachmentPoints" Type="List" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Sends a given message to the specified avatar's attachments on the given attachment points</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMessageObject" ReturnType="Void" Subsets="ossl">
    <Parameter Name="objectUUID" Type="Key" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Sends a specified message to an object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMin" ReturnType="Float" Subsets="ossl">
    <Parameter Name="a" Type="Float" />
    <Parameter Name="b" Type="Float" />
    <DocumentationString>Returns the lesser of two numbers</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osMovePen" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <DocumentationString>Moves the pen's location to the coordinates specified by the x and y parameters, without drawing anything</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcCreate" ReturnType="Key" Subsets="ossl">
    <Parameter Name="firstname" Type="String" />
    <Parameter Name="lastname" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="cloneFrom" Type="String" />
    <DocumentationString>Creates an NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcCreate" ReturnType="Key" Subsets="ossl">
    <Parameter Name="firstname" Type="String" />
    <Parameter Name="lastname" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="cloneFrom" Type="String" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Creates an NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcGetOwner" ReturnType="Key" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Returns the avatar key for the target NPC's owner</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcGetPos" ReturnType="Vector" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Returns current position vector of the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcGetRot" ReturnType="Rotation" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Returns the rotation of the the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcLoadAppearance" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Load the target NPC's appearance from a notecard</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcMoveTo" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="position" Type="Vector" />
    <DocumentationString>Moves the target NPC to a location within the region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcMoveToTarget" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="target" Type="Vector" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Moves the target NPC to a specified location over a period of time</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcPlayAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Plays animation on the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcRemove" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Removes the NPC specified by key npc</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSaveAppearance" ReturnType="Key" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Save the target NPC's current appearance to a notecard in the object's inventory</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSay" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC says message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSay" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC says message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSetRot" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="rot" Type="Rotation" />
    <DocumentationString>Set the rotation of the target NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcShout" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC shouts message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcSit" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="target" Type="Key" />
    <Parameter Name="options" Type="Integer" />
    <DocumentationString>Makes the target NPC sit on an object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcStand" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Makes the target NPC stand up</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcStopAnimation" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="animation" Type="String" />
    <DocumentationString>Stops animation being played by the NPC</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcStopMoveToTarget" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <DocumentationString>Stop the target NPC's movement</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcTouch" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npcKey" Type="Key" />
    <Parameter Name="objectKey" Type="Key" />
    <Parameter Name="linkNum" Type="Integer" />
    <DocumentationString>Makes the target NPC to touch the specified object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osNpcWhisper" ReturnType="Void" Subsets="ossl">
    <Parameter Name="npc" Type="Key" />
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Target NPC whispers message on the nearby chat channel</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osOwnerSaveAppearance" ReturnType="Key" Subsets="ossl">
    <Parameter Name="notecard" Type="String" />
    <DocumentationString>Creates a notecard with the object owner's current appearance inside the object</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParcelJoin" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos1" Type="Vector" />
    <Parameter Name="pos2" Type="Vector" />
    <DocumentationString>Joins two adjacent parcels within the same region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParcelSubdivide" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos1" Type="Vector" />
    <Parameter Name="pos2" Type="Vector" />
    <DocumentationString>Subdivides a parcel into two adjacent parcels within the same region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParseJSON" ReturnType="Void" Subsets="ossl">
    <Parameter Name="JSON" Type="String" />
    <DocumentationString>Returns a hashtable containing the structured JSON contents</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osParseJSONNew" ReturnType="Void" Subsets="ossl">
    <Parameter Name="JSON" Type="String" />
    <DocumentationString>Returns a hashtable containing the structured JSON contents</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRegexIsMatch" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="input" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <DocumentationString>Returns 1 if the input string matches the regular expression pattern, returns 0 if not</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRegionNotice" ReturnType="Void" Subsets="ossl">
    <Parameter Name="msg" Type="String" />
    <DocumentationString>Sends a region notice throughout the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRegionRestart" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="seconds" Type="Float" />
    <DocumentationString>Restarts the current region after a specified amount of time (in seconds)</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osReplaceString" ReturnType="String" Subsets="ossl">
    <Parameter Name="src" Type="String" />
    <Parameter Name="pattern" Type="String" />
    <Parameter Name="replace" Type="String" />
    <Parameter Name="count" Type="Integer" />
    <Parameter Name="start" Type="Integer" />
    <DocumentationString>Replaces a given string</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osRevokeScriptPermissions" ReturnType="Void" Subsets="ossl">
    <Parameter Name="revoked_key" Type="Key" />
    <Parameter Name="function" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetContentType" ReturnType="Void" Subsets="ossl">
    <Parameter Name="id" Type="Key" />
    <Parameter Name="type" Type="String" />
    <DocumentationString>Sets a content return type for a </DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureData" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="data" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <DocumentationString>Renders a dynamically created texture on the prim containing the script and returns the UUID of the newly created texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureDataBlend" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="data" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureDataBlendFace" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="data" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="blend" Type="Integer" />
    <Parameter Name="disp" Type="Integer" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Returns UUID of the generated texture. Intended to be used with subsequent calls to osSetDynamicTexture* functions in order to modify the texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureURL" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="url" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <DocumentationString>Renders a web texture on the prim containing the script and returns the UUID of the newly created texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureURLBlend" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="url" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <DocumentationString>Allows for two dynamic textures to blend on the prim containing this script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetDynamicTextureURLBlendFace" ReturnType="String" Subsets="ossl">
    <Parameter Name="dynamicID" Type="String" />
    <Parameter Name="contentType" Type="String" />
    <Parameter Name="url" Type="String" />
    <Parameter Name="extraParams" Type="String" />
    <Parameter Name="blend" Type="Integer" />
    <Parameter Name="disp" Type="Integer" />
    <Parameter Name="timer" Type="Integer" />
    <Parameter Name="alpha" Type="Integer" />
    <Parameter Name="face" Type="Integer" />
    <DocumentationString>Allows for two dynamic textures to blend on the specified face of the prim containing this script</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetEstateSunSettings" ReturnType="Void" Subsets="ossl">
    <Parameter Name="sunFixed" Type="Integer" />
    <Parameter Name="sunHour" Type="Float" />
    <DocumentationString>Set current estate's sun settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetFontName" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="fontName" Type="String" />
    <DocumentationString>Sets the font to be used by osDrawText</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetFontSize" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="fontSize" Type="Integer" />
    <DocumentationString>Sets the font size to be used in osDrawText</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetParcelDetails" ReturnType="Void" Subsets="ossl">
    <Parameter Name="pos" Type="Vector" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets parcel details;PARCEL_DETAILS_NAME, PARCEL_DETAILS_DESC, PARCEL_DETAILS_OWNER, PARCEL_DETAILS_GROUP, PARCEL_DETAILS_CLAIMDATE are implemented</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetParcelMediaURL" ReturnType="Void" Subsets="ossl">
    <Parameter Name="url" Type="String" />
    <DocumentationString>Set parcel media to a given url</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetParcelSIPAddress" ReturnType="Void" Subsets="ossl">
    <Parameter Name="SIPAddress" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetPenCap" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="direction" Type="String" />
    <Parameter Name="type" Type="String" />
    <DocumentationString>Apply a shape on the end of a line</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPenColor" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="color" Type="String" />
    <DocumentationString>Sets the pen color to be used when drawing dynamic textures</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPenSize" ReturnType="String" Subsets="ossl">
    <Parameter Name="drawList" Type="String" />
    <Parameter Name="penSize" Type="Integer" />
    <DocumentationString>Sets the line thickness to be used when drawing dynamic textures</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPrimFloatOnWater" ReturnType="Void" Subsets="ossl">
    <Parameter Name="float" Type="Integer" />
    <DocumentationString>Set physical object to float at the given water level</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetPrimitiveParams" ReturnType="Void" Subsets="ossl">
    <Parameter Name="prim" Type="Key" />
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets the primitive parameters for the given primitive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetProjectionParams" ReturnType="Void" Subsets="ossl">
    <Parameter Name="projection" Type="Integer" />
    <Parameter Name="texture" Type="Key" />
    <Parameter Name="fov" Type="Float" />
    <Parameter Name="focus" Type="Float" />
    <Parameter Name="amb" Type="Float" />
    <DocumentationString>Sets the project parameters for the given primitive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetProjectionParams" ReturnType="Void" Subsets="ossl">
    <Parameter Name="prim" Type="Key" />
    <Parameter Name="projection" Type="Integer" />
    <Parameter Name="texture" Type="Key" />
    <Parameter Name="fov" Type="Float" />
    <Parameter Name="focus" Type="Float" />
    <Parameter Name="amb" Type="Float" />
    <DocumentationString>Sets the project parameters for the given primitive</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetRegionSunSettings" ReturnType="Void" Subsets="ossl">
    <Parameter Name="useEstateSun" Type="Integer" />
    <Parameter Name="sunFixed" Type="Integer" />
    <Parameter Name="sunHour" Type="Float" />
    <DocumentationString>Set the current region's sun settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetRegionWaterHeight" ReturnType="Void" Subsets="ossl">
    <Parameter Name="height" Type="Float" />
    <DocumentationString>Adjusts water height in current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetSpeed" ReturnType="Void" Subsets="ossl">
    <Parameter Name="UUID" Type="String" />
    <Parameter Name="SpeedModifier" Type="Float" />
    <DocumentationString>Modify the speed of movement for the given avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetStateEvents" ReturnType="Void" Subsets="ossl">
    <Parameter Name="events" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="osSetSunParam" ReturnType="Void" Subsets="ossl">
    <Parameter Name="param" Type="String" />
    <Parameter Name="value" Type="Float" />
    <DocumentationString>Sets the current region's sun parameters.;Param are: day_length, year_length, day_night_offset, update_interval.</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetTerrainHeight" ReturnType="Integer" Subsets="ossl">
    <Parameter Name="x" Type="Integer" />
    <Parameter Name="y" Type="Integer" />
    <Parameter Name="val" Type="Float" />
    <DocumentationString>Sets the current region's terrain height at the given coordinates</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetTerrainTexture" ReturnType="Void" Subsets="ossl">
    <Parameter Name="level" Type="Integer" />
    <Parameter Name="texture" Type="Key" />
    <DocumentationString>Set the terrain texture for the current region to a given texture</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetTerrainTextureHeight" ReturnType="Void" Subsets="ossl">
    <Parameter Name="corner" Type="Integer" />
    <Parameter Name="low" Type="Float" />
    <Parameter Name="high" Type="Float" />
    <DocumentationString>Set the terrain texture height for the current region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osSetWindParam" ReturnType="Void" Subsets="ossl">
    <Parameter Name="plugin" Type="String" />
    <Parameter Name="param" Type="String" />
    <Parameter Name="value" Type="Float" />
    <DocumentationString>Sets value of param property for plugin module.;SimpleRandomWind plugin param is: strength.;ConfigurableWind plugin params are: avgStrength, avgDirection, varStrength, varDirection, rateChange</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportAgent" ReturnType="Void" Subsets="ossl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="regionX" Type="Integer" />
    <Parameter Name="regionY" Type="Integer" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports an agent to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportAgent" ReturnType="Void" Subsets="ossl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="regionName" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports an agent to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportAgent" ReturnType="Void" Subsets="ossl">
    <Parameter Name="agent" Type="Key" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports an agent to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportOwner" ReturnType="Void" Subsets="ossl">
    <Parameter Name="regionX" Type="Integer" />
    <Parameter Name="regionY" Type="Integer" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports the owner of the object containing the script to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportOwner" ReturnType="Void" Subsets="ossl">
    <Parameter Name="regionName" Type="String" />
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports the owner of the object containing the script to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTeleportOwner" ReturnType="Void" Subsets="ossl">
    <Parameter Name="position" Type="Vector" />
    <Parameter Name="lookat" Type="Vector" />
    <DocumentationString>Teleports the owner of the object containing the script to the specified location</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osTerrainFlush" ReturnType="Void" Subsets="ossl">
    <DocumentationString>Updates terrain changes in the grid's database</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osUnixTimeToTimestamp" ReturnType="String" Subsets="ossl">
    <Parameter Name="epoch" Type="Integer" />
    <DocumentationString>Returns unix time as a formatted timestamp</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="osWindActiveModelPluginName" ReturnType="String" Subsets="ossl">
    <DocumentationString>Returns active wind plugin name, specified by "wind_plugin" in OpenSim.ini</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsGetWindlightScene" ReturnType="List" Subsets="os-lightshare">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Return the current Lightshare settings</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsSetWindlightScene" ReturnType="Integer" Subsets="os-lightshare">
    <Parameter Name="rules" Type="List" />
    <DocumentationString>Sets the Lightshare scene</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsSetWindlightSceneTargeted" ReturnType="Integer" Subsets="os-lightshare">
    <Parameter Name="rules" Type="List" />
    <Parameter Name="target" Type="String" />
    <DocumentationString>Sets the Lightshare scene for a given avatar</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="lsClearWindlightScene" ReturnType="Void" Subsets="os-lightshare">
    <DocumentationString>Remove Windlight settings from a region</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="physGetEngineType" ReturnType="String" Subsets="os-bullet-physics">
    <DocumentationString>Get physics engine type</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="modInvokeN" ReturnType="Void" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeS" ReturnType="String" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeI" ReturnType="Integer" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeF" ReturnType="Float" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeK" ReturnType="String" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeV" ReturnType="Vector" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeR" ReturnType="Rotation" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modInvokeL" ReturnType="List" Subsets="os-mod-api">
    <Parameter Name="fname" Type="String" />
    <Parameter Name="parms" Type="Void" Variadic="true" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="modSendCommand" ReturnType="String" Subsets="os-mod-api">
    <Parameter Name="modules" Type="String" />
    <Parameter Name="command" Type="String" />
    <Parameter Name="k" Type="String" />
    <DocumentationString />
  </LibraryFunction>
  <EventHandler Name="attach" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Triggered when task attaches or detaches from agent</DocumentationString>
  </EventHandler>
  <EventHandler Name="at_rot_target" Subsets="lsl,os-lsl">
    <Parameter Name="handle" Type="Integer" />
    <Parameter Name="targetrot" Type="Rotation" />
    <Parameter Name="ourrot" Type="Rotation" />
    <DocumentationString>Result of LLRotTarget library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="at_target" Subsets="lsl,os-lsl">
    <Parameter Name="tnum" Type="Integer" />
    <Parameter Name="targetpos" Type="Vector" />
    <Parameter Name="ourpos" Type="Vector" />
    <DocumentationString>Result of llTarget library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="changed" Subsets="lsl,os-lsl">
    <Parameter Name="change" Type="Integer" />
    <DocumentationString>Triggered various event change the task;(test change with CHANGED_INVENTORY, CHANGED_COLOR, CHANGED_SHAPE, CHANGED_SCALE, CHANGED_TEXTURE, CHANGED_LINK, CHANGED_ALLOWED_DROP, CHANGED_OWNER, CHANGED_REGION, CHANGED_TELEPORT, CHANGED_REGION_START, CHANGED_MEDIA)</DocumentationString>
  </EventHandler>
  <EventHandler Name="collision" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Triggered while task is colliding with another task</DocumentationString>
  </EventHandler>
  <EventHandler Name="collision_end" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Triggered when task stops colliding with another task</DocumentationString>
  </EventHandler>
  <EventHandler Name="collision_start" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Triggered when task starts colliding with another task</DocumentationString>
  </EventHandler>
  <EventHandler Name="control" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <Parameter Name="level" Type="Integer" />
    <Parameter Name="edge" Type="Integer" />
    <DocumentationString>Result of llTakeControls library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="dataserver" Subsets="lsl,os-lsl">
    <Parameter Name="queryid" Type="Key" />
    <Parameter Name="data" Type="String" />
    <DocumentationString>Triggered when task receives asynchronous data</DocumentationString>
  </EventHandler>
  <EventHandler Name="email" Subsets="lsl,os-lsl">
    <Parameter Name="time" Type="String" />
    <Parameter Name="address" Type="String" />
    <Parameter Name="subject" Type="String" />
    <Parameter Name="message" Type="String" />
    <Parameter Name="num_left" Type="Integer" />
    <DocumentationString>Triggered when task receives email</DocumentationString>
  </EventHandler>
  <EventHandler Name="experience_permissions" Subsets="lsl,os-lsl">
    <Parameter Name="agent_id" Type="Key" />
    <DocumentationString >The agent has approved an experience permissions request. This may be through interaction with the experience permission dialog or the experience profile, or automatically if the agent has previously approved the experience.</DocumentationString>
  </EventHandler>
  <EventHandler Name="experience_permissions_denied" Subsets="lsl,os-lsl">
    <Parameter Name="agent_id" Type="Key" />
    <Parameter Name="reason" Type="Integer" />
    <DocumentationString >The agent has denied experience permission.</DocumentationString>
  </EventHandler>
  <EventHandler Name="http_request" Subsets="lsl,os-lsl">
    <Parameter Name="request_id" Type="Key" />
    <Parameter Name="method" Type="String" />
    <Parameter Name="body" Type="String" />
    <DocumentationString>Triggered when task receives an http request against a public URL</DocumentationString>
  </EventHandler>
  <EventHandler Name="http_response" Subsets="lsl,os-lsl">
    <Parameter Name="request_id" Type="Key" />
    <Parameter Name="status" Type="Integer" />
    <Parameter Name="metadata" Type="List" />
    <Parameter Name="body" Type="String" />
    <DocumentationString>Triggered when task receives a response to one of its llHTTPRequests</DocumentationString>
  </EventHandler>
  <EventHandler Name="land_collision" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Triggered when task is colliding with land</DocumentationString>
  </EventHandler>
  <EventHandler Name="land_collision_end" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Triggered when task stops colliding with land</DocumentationString>
  </EventHandler>
  <EventHandler Name="land_collision_start" Subsets="lsl,os-lsl">
    <Parameter Name="pos" Type="Vector" />
    <DocumentationString>Triggered when task starts colliding with land</DocumentationString>
  </EventHandler>
  <EventHandler Name="link_message" Subsets="lsl,os-lsl">
    <Parameter Name="sender_num" Type="Integer" />
    <Parameter Name="num" Type="Integer" />
    <Parameter Name="str" Type="String" />
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Triggered when task receives a link message via LLMessageLinked library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="listen" Subsets="lsl,os-lsl">
    <Parameter Name="channel" Type="Integer" />
    <Parameter Name="name" Type="String" />
    <Parameter Name="id" Type="Key" />
    <Parameter Name="message" Type="String" />
    <DocumentationString>Result of the llListen library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="money" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <Parameter Name="amount" Type="Integer" />
    <DocumentationString>Triggered when L$ is given to task</DocumentationString>
  </EventHandler>
  <EventHandler Name="moving_end" Subsets="lsl,os-lsl">
    <DocumentationString>Triggered when task stops moving</DocumentationString>
  </EventHandler>
  <EventHandler Name="moving_start" Subsets="lsl,os-lsl">
    <DocumentationString>Triggered when task begins moving</DocumentationString>
  </EventHandler>
  <EventHandler Name="not_at_rot_target" Subsets="lsl,os-lsl">
    <DocumentationString>Result of LLRotTarget library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="not_at_target" Subsets="lsl,os-lsl">
    <DocumentationString>Result of llTarget library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="no_sensor" Subsets="lsl,os-lsl">
    <DocumentationString>Result of the llSensor library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="object_rez" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <DocumentationString>Triggered when task rezzes in another task</DocumentationString>
  </EventHandler>
  <EventHandler Name="on_rez" Subsets="lsl,os-lsl">
    <Parameter Name="start_param" Type="Integer" />
    <DocumentationString>Triggered when task is rezzed in from inventory or another task</DocumentationString>
  </EventHandler>
  <EventHandler Name="path_update" Subsets="lsl,os-lsl">
    <Parameter Name="type" Type="Integer" />
    <Parameter Name="reserved" Type="List" />
    <DocumentationString>Informs the script of events that happen within the pathfinding system</DocumentationString>
  </EventHandler>
  <EventHandler Name="remote_data" Subsets="lsl,os-lsl">
    <Parameter Name="event_type" Type="Integer" />
    <Parameter Name="channel" Type="Key" />
    <Parameter Name="message_id" Type="Key" />
    <Parameter Name="sender" Type="String" />
    <Parameter Name="idata" Type="Integer" />
    <Parameter Name="sdata" Type="String" />
    <DocumentationString>Triggered by various XML-RPC calls (event_type will be one of REMOTE_DATA_CHANNEL, REMOTE_DATA_REQUEST, REMOTE_DATA_REPLY)</DocumentationString>
  </EventHandler>
  <EventHandler Name="run_time_permissions" Subsets="lsl,os-lsl">
    <Parameter Name="perm" Type="Integer" />
    <DocumentationString>Triggered when an agent grants run time permissions to task</DocumentationString>
  </EventHandler>
  <EventHandler Name="sensor" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Result of the llSensor library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="state_entry" Subsets="lsl,os-lsl">
    <DocumentationString>Triggered on any state transition and startup</DocumentationString>
  </EventHandler>
  <EventHandler Name="state_exit" Subsets="lsl,os-lsl">
    <DocumentationString>Triggered on any state transition</DocumentationString>
  </EventHandler>
  <EventHandler Name="timer" Subsets="lsl,os-lsl">
    <DocumentationString>Result of the llSetTimerEvent library function call</DocumentationString>
  </EventHandler>
  <EventHandler Name="touch" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Triggered while agent is clicking on task</DocumentationString>
  </EventHandler>
  <EventHandler Name="touch_end" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Triggered when agent stops clicking on task</DocumentationString>
  </EventHandler>
  <EventHandler Name="touch_start" Subsets="lsl,os-lsl">
    <Parameter Name="num_detected" Type="Integer" />
    <DocumentationString>Triggered by the start of agent clicking on task</DocumentationString>
  </EventHandler>
  <EventHandler Name="transaction_result" Subsets="lsl,os-lsl">
    <Parameter Name="id" Type="Key" />
    <Parameter Name="success" Type="Integer" />
    <Parameter Name="data" Type="String" />
    <DocumentationString> Triggered when L$ is given to task</DocumentationString>
  </EventHandler>
  <LibraryConstant Name="ACTIVE" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in llSensor library function to look for moving objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in llSensor library function to look for other Agents</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_ALWAYS_RUN" Type="Integer" Value="4096" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent has 'Always Run' enabled</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_ATTACHMENTS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent has attachments</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_AUTOPILOT" Type="Integer" Value="8192" Subsets="lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is under autopilot control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_AWAY" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is in away mode</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_BUSY" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is busy</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_BY_LEGACY_NAME" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>This is used to find agents by legacy name</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_BY_USERNAME" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>This is used to find agents by username</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_CROUCHING" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is crouching</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_FLYING" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is flying</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_IN_AIR" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is in the air</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_LIST_PARCEL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llGetAgentList to return only agents on the same parcel where the script is running</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_LIST_PARCEL_OWNER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llGetAgentList to return only agents on any parcel in the region where the parcel owner is the same as the owner of the parcel under the scripted object</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_LIST_REGION" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llGetAgentList to return any/all agents in the region</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_MOUSELOOK" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is in mouselook</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_ON_OBJECT" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is sitting on an object</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_SCRIPTED" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent has scripted attachments</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_SITTING" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is sitting</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_TYPING" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is typing</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AGENT_WALKING" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetAgentInfo if the Agent is walking</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ALL_SIDES" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to various texture and color library functions to modify all sides</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ANIM_ON" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Enable texture animation</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_AVATAR_CENTER" Type="Integer" Value="40" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to avatar center</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_BACK" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to back</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_BELLY" Type="Integer" Value="28" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to belly</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_CHEST" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to chest</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_CHIN" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to chin</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HEAD" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to head</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_BOTTOM" Type="Integer" Value="37" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to bottom hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_BOTTOM_LEFT" Type="Integer" Value="36" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to bottom left hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_BOTTOM_RIGHT" Type="Integer" Value="38" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to bottom right hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_CENTER_1" Type="Integer" Value="35" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to center 1 hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_CENTER_2" Type="Integer" Value="31" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to center 2 hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_TOP_CENTER" Type="Integer" Value="33" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to top center hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_TOP_LEFT" Type="Integer" Value="34" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to top left hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_HUD_TOP_RIGHT" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to top right hud area</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LEAR" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left ear</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LEFT_PEC" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left pectoral</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LEYE" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left eye</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LFOOT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left foot</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LHAND" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left hand</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LHIP" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left hip</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LLARM" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left lower arm</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LLLEG" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left lower leg</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LSHOULDER" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left shoulder</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LUARM" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left upper arm</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_LULEG" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to left upper leg</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_MOUTH" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to mouth</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_NECK" Type="Integer" Value="39" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to neck</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_NOSE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to nose</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_PELVIS" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to pelvis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_REAR" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right ear</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_REYE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right eye</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RFOOT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right foot</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RHAND" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right hand</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RHIP" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right hip</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RIGHT_PEC" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right pectoral</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RLARM" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right lower arm</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RLLEG" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right lower leg</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RSHOULDER" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right shoulder</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RUARM" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right upper arm</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RULEG" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llAttachToAvatar to attach task to right upper leg</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_ACTIVE" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>(0 or 1) Turns on or off scripted control of the camera</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_BEHINDNESS_ANGLE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>(0 to 180) Sets the angle in degrees within which the camera is not constrained by changes in subject rotation</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_BEHINDNESS_LAG" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>(0.0 to 3.0) Sets how strongly the camera is forced to stay behind the target if outside of behindness angle</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_DISTANCE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>(0.5 to 10) Sets how far away the camera wants to be from its subject</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the focus (target position) of the camera</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_LAG" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>(0.0 to 3.0) How much the camera lags as it tries to aim towards the subject</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_LOCKED" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>(0 or 1) Locks the camera focus so it will not move</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>(-10 to 10) A vector that adjusts the position of the camera focus position relative to the subject</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_THRESHOLD" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>(0.0 to 4.0) Sets the radius of a sphere around the camera's subject position within which its focus is not affected by subject motion</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_PITCH" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>(-45 to 80) (Adjusts the angular amount that the camera aims straight ahead vs. straight down, maintaining the same distance. Analogous to 'incidence'.)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the position of the camera</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_LAG" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>(0.0 to 3.0)  How much the camera lags as it tries to move towards its 'ideal' position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_LOCKED" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>(0 or 1) Locks the camera position so it will not move</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_THRESHOLD" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>(0.0 to 4.0) Sets the radius of a sphere around the camera's ideal position within which it is not affected by subject motion</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_ALLOWED_DROP" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate a user dropped an inventory item;onto task that was allowed only by llAllowInventoryDrop function call</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_COLOR" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's color</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_INVENTORY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's inventory</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_LINK" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's link status</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_MEDIA" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate that media has changed on a face of the task</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_OWNER" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's owner ONLY when an object is sold as original or deeded to group</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_REGION" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate the region has changed</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_REGION_START" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate the region has been restarted</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_SCALE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_SHAPE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's shape parameters</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_TELEPORT" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate teleport has completed</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_TEXTURE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Parameter of changed event handler used to indicate change to task's texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES" Type="Integer" Value="14" Subsets="lsl">
    <DocumentationString>Defines if a character will attempt to catch up lost time if pathfinding performance is low.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_AVOIDANCE_MODE" Type="Integer" Value="5" Subsets="lsl">
    <DocumentationString>Allows you to specify that a character should not try to avoid other characters, should not try to avoid dynamic obstacles (relatively fast moving objects and avatars), or both.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_DESIRED_SPEED" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Speed of pursuit in meters per second.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_DESIRED_TURN_SPEED" Type="Integer" Value="12" Subsets="lsl">
    <DocumentationString>The character's maximum speed while turning--note that this is only loosely enforced (i.e., a character may turn at higher speeds under certain conditions)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_LENGTH" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Set collision capsule length.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_ACCEL" Type="Integer" Value="8" Subsets="lsl">
    <DocumentationString>The character's maximum acceleration rate.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_DECEL" Type="Integer" Value="9" Subsets="lsl">
    <DocumentationString>The character's maximum deceleration rate.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_SPEED" Type="Integer" Value="13" Subsets="lsl">
    <DocumentationString>The character's maximum speed. Affects speed when avoiding dynamic obstacles and when traversing low-walkability objects in TRAVERSAL_TYPE_FAST mode.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_MAX_TURN_RADIUS" Type="Integer" Value="10" Subsets="lsl">
    <DocumentationString>The character's turn radius when traveling at CHARACTER_DESIRED_TURN_SPEED.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_ORIENTATION" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Set the character orientation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_RADIUS" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Set collision capsule radius.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_STAY_WITHIN_PARCEL" Type="Integer" Value="15" Subsets="lsl">
    <DocumentationString>Characters which have CHARACTER_STAY_WITHIN_PARCEL set to TRUE treat the parcel boundaries as one-way obstacles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE" Type="Integer" Value="6" Subsets="lsl">
    <DocumentationString>Specifies which walkability coefficient will be used by this character.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_A" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Used for character types that you prefer move in a way consistent with humanoids.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_B" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Used for character types that you prefer move in a way consistent with wild animals or off road vehicles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_C" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Used for mechanical character types or road going vehicles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_D" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Used for character types that are not consistent with the A, B, or C type.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_TYPE_NONE" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Used to set no specific character type.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_BUY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set buy as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to disable the click action</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_OPEN" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set open as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_OPEN_MEDIA" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set open-media as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_PAY" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set pay as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_PLAY" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set play as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_SIT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set sit as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_TOUCH" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set touch as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_ATOM" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/atom+xml".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_FORM" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/x-www-form-urlencoded".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_HTML" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "text/html".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_JSON" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/json".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_LLSD" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/llsd+xml".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_RSS" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/rss+xml".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_TEXT" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "text/plain".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_XHTML" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/xhtml+xml".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTENT_TYPE_XML" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >Sets the Internet media type "Content-Type" header of any subsequent LSL HTTP server response via llHTTPResponse to "application/xml".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_BACK" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent back control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_DOWN" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent down control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_FWD" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent forward control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_LBUTTON" Type="Integer" Value="268435456" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent left button control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_LEFT" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent left control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_ML_LBUTTON" Type="Integer" Value="1073741824" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent left button control with the agent in mouse look</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_RIGHT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent right control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_ROT_LEFT" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent rotate left control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_ROT_RIGHT" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent rotate right control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CONTROL_UP" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llTakeControls library function and used control event handler to test for agent up control</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_BORN" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestAgentData to get born on date as a string</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_NAME" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestAgentData to get full agent name</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_ONLINE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestAgentData to determine if agent is online</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_PAYINFO" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestAgentData to get payment status of an agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_RATING" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestAgentData to get a comma separated sting of integer ratings</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_POS" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestSimulatorData to get a string (cast to vector) of a simulator's global position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_RATING" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestSimulatorData to get the rating of a simulator</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_STATUS" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestSimulatorData to get the status of a simulator</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DEBUG_CHANNEL" Type="Integer" Value="2147483647" Subsets="lsl,os-lsl">
    <DocumentationString>Chat channel reserved for debug and error messages from scripts</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DEG_TO_RAD" Type="Float" Value="0.017453292519943295769236907684886f" Subsets="lsl,os-lsl">
    <DocumentationString>To convert from degrees to radians</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="EOF" Type="String" Value="\n\n\n" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates the last line of a notecard was read</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ERR_GENERIC" Type="Integer" Value="-1" Subsets="lsl">
    <DocumentationString>Returned by llReturnObjectsByID and llReturnObjectsByOwner in case of a general error.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ERR_MALFORMED_PARAMS" Type="Integer" Value="-3" Subsets="lsl">
    <DocumentationString>Returned by llReturnObjectsByID and llReturnObjectsByOwner in case of malformed parameters.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ERR_PARCEL_PERMISSIONS" Type="Integer" Value="-2" Subsets="lsl">
    <DocumentationString>Returned by llReturnObjectsByID and llReturnObjectsByOwner in case of a parcel owner permission error.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ERR_RUNTIME_PERMISSIONS" Type="Integer" Value="-4" Subsets="lsl">
    <DocumentationString>Returned by llReturnObjectsByID and llReturnObjectsByOwner in case of a runtime permission error.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ERR_THROTTLED" Type="Integer" Value="-5" Subsets="lsl">
    <DocumentationString>Returned by llReturnObjectsByID and llReturnObjectsByOwner in case of being throttled.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_AGENT_ADD" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llManageEstateAccess to add an agent to this estate's allowed residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_AGENT_REMOVE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llManageEstateAccess to remove an agent from this estate's allowed residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_GROUP_ADD" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llManageEstateAccess to add a group to this estate's allowed groups list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_ALLOWED_GROUP_REMOVE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llManageEstateAccess to remove a group from this estate's allowed groups list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_BANNED_AGENT_ADD" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llManageEstateAccess to add an agent to this estate's banned residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ESTATE_ACCESS_BANNED_AGENT_REMOVE" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llManageEstateAccess to remove an agent from this estate's banned residents list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="FALSE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>integer_constant for Boolean operations</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="FORCE_DIRECT_PATH" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString >Used with llNavigateTo( vector pos, list options );  Makes character navigate in a straight line toward pos. May be set to TRUE or FALSE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HORIZONTAL" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Constant to indicate that the orientation of the capsule for a Pathfinding character is horizontal.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_BODY_MAXLENGTH" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llHTTPRequest to specify the maximum body size for the date returned from the request. Mono scripts can request from 1byte to 16k, non-mono scripts can request from 1byte to 4k. The default is 2k.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_BODY_TRUNCATED" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Used with http_response to indicate truncation point in bytes</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_CUSTOM_HEADER" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>The integer constant HTTP_CUSTOM_HEADER has the value 5</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_METHOD" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llHTTPRequest to specify the method, such as 'GET' or 'POST'</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_MIMETYPE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llHTTPRequest to specify the MIME type, defaults to 'text/plain'</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_PRAGMA_NO_CACHE" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>The integer constant HTTP_PRAGMA_NO_CACHE has the value 6</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_VERBOSE_THROTTLE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>The integer constant HTTP_VERBOSE_THROTTLE has the value 4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="HTTP_VERIFY_CERT" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llHTTPRequest to specify SSL certificate verification</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_ALL" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference all inventory items</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_ANIMATION" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference animations</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_BODYPART" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference body parts</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_CLOTHING" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference clothing</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_GESTURE" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference gestures</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_LANDMARK" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference landmarks</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_NONE" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetInventoryType when no item is found</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_NOTECARD" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference notecards</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_OBJECT" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_SCRIPT" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference scripts</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_SOUND" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference sounds</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="INVENTORY_TEXTURE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to task inventory library functions to reference textures</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_APPEND" Type="Integer" Value="-1" Subsets="lsl">
    <DocumentationString>Used with llJsonSetValue as a specifier to indicate appending the value to the end of the array at that level.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_ARRAY" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD2&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD2;&amp;#13;llUnescapeUrl(%EF%B7%92);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï·’&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents a json datatype mappable to the LSL datatype "list"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_DELETE" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD8&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD8;&amp;#13;llUnescapeUrl(%EF%B7%98);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï¿½&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Used to delete a value within a JSON text string.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_FALSE" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD7&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD7;&amp;#13;llUnescapeUrl(%EF%B7%97);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï¿½&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents the constant "false" of a json value.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_INVALID" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDDO&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD0;&amp;#13;llUnescapeUrl(%EF%B7%90);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï·&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>A return value that indicates an invalid type was specified to an llJson* function</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_NULL" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD5&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD5;&amp;#13;llUnescapeUrl(%EF%B7%95);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï¿½&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents the constant "null" of a json value.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_NUMBER" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD3&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD3;&amp;#13;llUnescapeUrl(%EF%B7%93);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï¿½&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents a json datatype mappable to the LSL datatypes "integer" and "float"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_OBJECT" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD1&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD1;&amp;#13;llUnescapeUrl(%EF%B7%91);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï·‘&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents a json datatype represented in LSL as a strided list of name/value pairs</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_STRING" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD4&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD4;&amp;#13;llUnescapeUrl(%EF%B7%94);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï¿½&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents a json datatype mappable to the LSL datatype "string"</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="JSON_TRUE" Type="String" Value="&lt;span title=&quot;Special Unicode Character&amp;#13;Unicode:&amp;#9;U+FDD6&amp;#13;HTML:&amp;#9;&amp;amp;#xFDD6;&amp;#13;llUnescapeUrl(%EF%B7%96);&quot; style=&quot;border-bottom:1px dotted; cursor:help;&quot;&gt;&quot;ï¿½&quot;&lt;/span&gt;" Subsets="lsl">
    <DocumentationString>Represents the constant "true" of a json value.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_PAUSE" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_COMMAND to pause the motion.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_PLAY" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_COMMAND to play the motion.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_STOP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_COMMAND to stop the motion.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_COMMAND" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), followed by one of KFM_CMD_STOP, KFM_CMD_PLAY, KFM_CMD_PAUSE. Note that KFM_COMMAND must be the only option in the list, and cannot be specified in the same function call that sets the keyframes list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_DATA" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), followed by a bitwise combination of KFM_TRANSLATION and KFM_ROTATION. If you specify one or the other, you should only include translations or rotations in your keyframe list.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_FORWARD" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_MODE to specify the forward playback mode.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_LOOP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_MODE to specify the loop playback mode.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_MODE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used to specify the playback mode, followed by one of KFM_FORWARD, KFM_LOOP, KFM_PING_PONG or KFM_REVERSE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_PING_PONG" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_MODE to specify the ping pong playback mode.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_REVERSE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_MODE to specify the reverse playback mode.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_ROTATION" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_DATA, possibly as a bitwise combination with KFM_TRANSLATION.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_TRANSLATION" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llSetKeyframedMotion(), used after KFM_DATA, possibly as a bitwise combination with KFM_ROTATION.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_LEVEL" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to level terrain</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_LOWER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to lower terrain</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_NOISE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to randomize terrain</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_RAISE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to raise terrain</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_REVERT" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to revert terrain toward original state</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_SMOOTH" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to smooth terrain</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_ALL_CHILDREN" Type="Integer" Value="-3" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to various link functions to modify all child blocks in the object</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_ALL_OTHERS" Type="Integer" Value="-2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to various link functions to modify all other blocks in the object</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_ROOT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to various link functions to modify only the root block (no effect on single block objects)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_SET" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to various link functions to modify all blocks in the object</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LINK_THIS" Type="Integer" Value="-4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to various link functions to modify only the calling block</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_GEOMETRIC_MEAN" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the geometric mean of the numbers in a list (all numbers must be &gt; 0)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MAX" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the largest number in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MEAN" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the mean of the numbers in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MEDIAN" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the median of the numbers in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_MIN" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the smallest number in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_NUM_COUNT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find how many numbers are in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_RANGE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the range of the numbers in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_STD_DEV" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the standard deviation of the numbers in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_SUM" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the sum of the numbers in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_SUM_SQUARES" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llListStatistics to find the sum of the squares of the numbers in a list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LOOP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Loop when animating textures</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="MASK_BASE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Base permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="MASK_EVERYONE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Everyone permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="MASK_GROUP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Group permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="MASK_NEXT" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Next owner permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="MASK_OWNER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Owner permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="NULL_KEY" Type="String" Value="&quot;00000000-0000-0000-0000-000000000000&quot;" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates an empty key</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_ATTACHED_POINT" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's attachment point.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_BODY_SHAPE_TYPE" Type="Integer" Value="26" Subsets="lsl">
    <DocumentationString >This is a flag used with llGetObjectDetails to get the "gender" setting of an avatar's currently worn shape.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_CHARACTER_TIME" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's average CPU time (in seconds) used by the object for navigation, if the object is a pathfinding character. Returns 0 for non-characters.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_CREATOR" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's creator's key</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_DESC" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's description</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_GROUP" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's group's key</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_HOVER_HEIGHT" Type="Float" Value="25" Subsets="lsl">
    <DocumentationString >This is a flag used with llGetObjectDetails to get the hover height of the avatar.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_LAST_OWNER_ID" Type="Integer" Value="27" Subsets="lsl">
    <DocumentationString >This is a flag used with llGetObjectDetails to get the last object owner key (if known).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_NAME" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's name</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_OWNER" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's owner's key.  Will be NULL_KEY if group owned</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PATHFINDING_TYPE" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's pathfinding settings.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PHANTOM" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's phantom flag</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PHYSICS" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's physics flag</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PHYSICS_COST" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get the physics cost.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_POS" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_PRIM_EQUIVALENCE" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the prim equivalence of the object.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RENDER_WEIGHT" Type="Integer" Value="24" Subsets="lsl">
    <DocumentationString>Used with llGetObjectDetails to return an avatar's rendering weight</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RETURN_PARCEL" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Used with llReturnObjectsByOwner to return all objects on the same parcel as the script which are owned by 'owner'.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RETURN_PARCEL_OWNER" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Used with llReturnObjectsByOwner to return all objects owned by 'owner' which are over parcels owned by the owner of the script.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RETURN_REGION" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Used with llReturnObjectsByOwner to return all objects in the region owned by 'owner' - only works when the script is owned by the estate owner or an estate manager.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_ROOT" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's root prim ID.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_ROT" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's rotation</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_RUNNING_SCRIPT_COUNT" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the number of running scripts attached to the object or agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_SCRIPT_MEMORY" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the total amount of script memory allocated to the object or agent, in bytes.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_SCRIPT_TIME" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the total amount of average script CPU time used by the object or agent, in seconds.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_SERVER_COST" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get the server cost.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_STREAMING_COST" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get the streaming (download) cost.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_TEMP_ON_REZ" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's temporary flag</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_TOTAL_SCRIPT_COUNT" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Gets the number of scripts, both running and stopped, attached to the object or agent.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_UNKNOWN_DETAIL" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llGetObjectDetails when passed an invalid object parameter type</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OBJECT_VELOCITY" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetObjectDetails to get an object's velocity</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_AVATAR" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned object pathfinding type by llGetObjectDetails for avatars.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_EXCLUSION_VOLUME" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Returned object pathfinding type by llGetObjectDetails for exclusion volumes.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_LEGACY_LINKSET" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Returned object pathfinding type by llGetObjectDetails for movable obstacles, movable phantoms, physical, and volumedetect objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_MATERIAL_VOLUME" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Returned object pathfinding type by llGetObjectDetails for material volumes.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_OTHER" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned for attachments, Linden trees and grass, was OPT_UNKOWN</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_STATIC_OBSTACLE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Returned object pathfinding type by llGetObjectDetails for static obstacles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_WALKABLE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Returned object pathfinding type by llGetObjectDetails for walkable objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_GROUP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelPrimCount to get the number of prims on the parcel owned by the group</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_OTHER" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelPrimCount to get the number of prims on the parcel owned by others</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_OWNER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelPrimCount to get the number of prims on the parcel owned by the owner</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_SELECTED" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelPrimCount to get the number of prims on the parcel currently selected or sat upon</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_TEMP" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelPrimCount to get the number of prims on the parcel that are temp on rez</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_COUNT_TOTAL" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelPrimCount to get the total number of prims on the parcel</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_AREA" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the parcel area in square meters</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_DESC" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the parcel description</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_GROUP" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the parcel group id</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_ID" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the parcel id</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_NAME" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the parcel name</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_OWNER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the parcel owner id</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_SEE_AVATARS" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelDetails to get the avatars visibility setting</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY" Type="Integer" Value="134217728" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows all objects to enter</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS" Type="Integer" Value="67108864" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows group members or objects to create objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_CREATE_OBJECTS" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows anyone to create objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_DAMAGE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows damage</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_FLY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows flying</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY" Type="Integer" Value="268435456" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel only allows group (and owner) objects to enter</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_GROUP_SCRIPTS" Type="Integer" Value="33554432" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows group scripts</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_LANDMARK" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows landmarks to be created</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_SCRIPTS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows outside scripts</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_ALLOW_TERRAFORM" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows anyone to terraform the land</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_LOCAL_SOUND_ONLY" Type="Integer" Value="32768" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel restricts spacialized sound to the parcel</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_RESTRICT_PUSHOBJECT" Type="Integer" Value="2097152" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel restricts llPushObject() calls</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_ACCESS_GROUP" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel limits access to a group</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_ACCESS_LIST" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel limits access to a list of residents</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_BAN_LIST" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel uses a ban list</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_FLAG_USE_LAND_PASS_LIST" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetParcelFlags to find if a parcel allows passes to be purchased</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_AGENT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Allows media stream commands to apply to only one agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_AUTO_ALIGN" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Auto aligns the media stream to the texture size.  May cause a performance hit and loss of some visual quality</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_DESC" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Get or set the parcel's media description</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_LOOP" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Loop media stream</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_LOOP_SET" Type="Integer" Value="13" Subsets="lsl">
    <DocumentationString>Used to get or set the parcel's media loop duration.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_PAUSE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Pause media stream</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_PLAY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Play media stream</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_SIZE" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Get or set the parcel's media pixel resolution</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_STOP" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Stop media stream</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_TEXTURE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Get or set the parcel's media texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_TIME" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Set media stream to specific time</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_TYPE" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Get or set the parcel's media mimetype</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_UNLOAD" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Unloads the media stream</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_MEDIA_COMMAND_URL" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Get or set the parcel's media url</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PASSIVE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in llSensor library function to look for objects that aren't moving</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PATROL_PAUSE_AT_WAYPOINTS" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Used with llPatrolPoints(). Defines if characters slow down and momentarily pause at each waypoint.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PAYMENT_INFO_ON_FILE" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Used with llRequestAgentData to tell if Agent is of "Payment Info On File" status</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PAYMENT_INFO_USED" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Used with llRequestAgentData to tell if Agent is of "Payment Info Used" status</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PAY_DEFAULT" Type="Integer" Value="-2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetPayPrice to use the default price for a button</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PAY_HIDE" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetPayPrice to hide a button</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_ATTACH" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to attach/detach from agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CHANGE_LINKS" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to change an objects links</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CONTROL_CAMERA" Type="Integer" Value="2048" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to change agent's camera</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_DEBIT" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to take L$ from agent's account</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_OVERRIDE_ANIMATIONS" Type="Integer" Value="32768" Subsets="lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to override animations on agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_RETURN_OBJECTS" Type="Integer" Value="65536" Subsets="lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to return objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_SILENT_ESTATE_MANAGEMENT" Type="Integer" Value="16384" Subsets="lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to silently modify estate access lists</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TAKE_CONTROLS" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to take agent's controls</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TELEPORT" Type="Integer" Value="4096" Subsets="lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to teleport an agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TRACK_CAMERA" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to track agent's camera</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_TRIGGER_ANIMATION" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llRequestPermissions library function to request permission to trigger animation on agent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERM_ALL" Type="Integer" Value="2147483647" Subsets="lsl,os-lsl">
    <DocumentationString>Move/Modify/Copy/Transfer permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERM_COPY" Type="Integer" Value="32768" Subsets="lsl,os-lsl">
    <DocumentationString>Copy permission</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERM_MODIFY" Type="Integer" Value="16384" Subsets="lsl,os-lsl">
    <DocumentationString>Modify permission</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERM_MOVE" Type="Integer" Value="524288" Subsets="lsl,os-lsl">
    <DocumentationString>Move permission</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERM_TRANSFER" Type="Integer" Value="8192" Subsets="lsl,os-lsl">
    <DocumentationString>Transfer permission</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PI" Type="Float" Value="3.1415926535897932384626433832795f" Subsets="lsl,os-lsl">
    <DocumentationString>3.1415926535897932384626433832795</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PING_PONG" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Animate forward, then reverse</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PI_BY_TWO" Type="Float" Value="1.5707963267948966192313216916398f" Subsets="lsl,os-lsl">
    <DocumentationString>1.5707963267948966192313216916398</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE" Type="Integer" Value="38" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's diffuse texture alpha rendering mode attributes. Followed by integer face, integer alpha_mode (PRIM_ALPHA_MODE_* flag) and integer mask_cutoff.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_BLEND" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Used with PRIM_ALPHA_MODE. Prims faces set to this type use alpha blending for diffuse texture rendering (assuming the alpha channel exists).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_EMISSIVE" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Used with PRIM_ALPHA_MODE. Prims faces set to this type render with an emissivity corresponding to the opacity of each pixel of the diffuse texture. The more opaque a pixel is, the brighter it renders under all lighting conditions. A fully-opaque pixel will effectively render as 'full bright'.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_MASK" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Used with PRIM_ALPHA_MODE. Prims faces set to this type render as either completely opaque or completely transparent on a per-pixel basis. Pixels which are less opaque than the specified mask_cutoff are rendered as completely transparent, and the rest are rendered as fully opaque.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ALPHA_MODE_NONE" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Used with PRIM_ALPHA_MODE. Prims faces set to this type ignore the alpha channel of the diffuse texture, and render as completely opaque.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BARK" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Bark bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BLOBS" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Blob bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BRICKS" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Brick bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_BRIGHT" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Generate bump map from highlights</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_CHECKER" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Checker bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_CONCRETE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Concrete bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_DARK" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Generate bump map from lowlights</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_DISKS" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Disk bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_GRAVEL" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Gravel bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_LARGETILE" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString>Large tile bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>No bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_SHINY" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by an integer face, one of PRIM_SHINY_NONE, PRIM_SHINY_LOW,;PRIM_SHINY_MEDIUM, or PRIM_SHINY_HIGH,;and one of PRIM_BUMP_NONE, PRIM_BUMP_BRIGHT, PRIM_BUMP_DARK, etc</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_SIDING" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Siding bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_STONE" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Stone bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_STUCCO" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString>Stucco bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_SUCTION" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Suction cup bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_TILE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Tile bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_WEAVE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Weave bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_BUMP_WOOD" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Wood bump map</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_COLOR" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by an integer face, vector color, and float alpha</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_DESC" Type="Integer" Value="28" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's description.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_FLEXIBLE" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by TRUE or FALSE, integer softness, float gravity, float friction, float wind, float tension, and vector force</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_FULLBRIGHT" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by an integer face, and TRUE or FALSE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_GLOW" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by an integer face, and a float from 0.0 to 1.0 specifying glow amount</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_CIRCLE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Sets hole type to circle</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_DEFAULT" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Sets hole type to match the prim type</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_SQUARE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Sets hole type to square</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_HOLE_TRIANGLE" Type="Integer" Value="48" Subsets="lsl,os-lsl">
    <DocumentationString>Sets hole type to triangle</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_LINK_TARGET" Type="Integer" Value="34" Subsets="lsl,os-lsl">
    <DocumentationString>Used to get or set multiple links with a single PrimParameters call.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by PRIM_MATERIAL_STONE, PRIM_MATERIAL_METAL, PRIM_MATERIAL_GLASS, PRIM_MATERIAL_WOOD, PRIM_MATERIAL_FLESH, PRIM_MATERIAL_PLASTIC, or PRIM_MATERIAL_RUBBER</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_FLESH" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to flesh</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_GLASS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to glass</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_LIGHT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to light</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_METAL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to metal</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_PLASTIC" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to plastic</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_RUBBER" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to rubber</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_STONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to stone</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MATERIAL_WOOD" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Sets material to wood</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_ALT_IMAGE_ENABLE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to enable the default alt image for media</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_LOOP" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine if media should auto-loop (if applicable)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_PLAY" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine if media should start playing as soon as it is created</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_SCALE" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine if media should scale to fit the face it is on</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_AUTO_ZOOM" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine if the user would zoom in when viewing media</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CURRENT_URL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to navigate/access the current URL</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_FIRST_CLICK_INTERACT" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine whether the user interacts with media or not when she first clicks it (versus selection)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_HEIGHT_PIXELS" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to access the media's height in pixels</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_HOME_URL" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to access the home URL</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERMS_CONTROL" Type="Integer" Value="14" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine the permissions for who has controls</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERMS_INTERACT" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine the permissions for who can interact with the media</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_ANYONE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, anyone has permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_GROUP" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, group permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, no permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PERM_OWNER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, owner permissions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_WHITELIST" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to access the media's list of allowable URL prefixes to navigate to</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_WHITELIST_ENABLE" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine if the domain whitelist is enabled</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_WIDTH_PIXELS" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to access the media's width in pixels</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_NAME" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's name.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_NORMAL" Type="Integer" Value="37" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's normal map attributes. Followed by integer face, string texture, vector repeats, vector offsets and float rotation_in_radians.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_OMEGA" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Makes the object spin at the specified axis and rate.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHANTOM" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Sets phantom to TRUE or FALSE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Sets physics to TRUE or FALSE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_CONVEX" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Ignore this prim in the physics shape. This cannot be applied to the root prim.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_NONE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Use the convex hull of the prim shape for physics (this is the default for mesh objects)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_PRIM" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Use the normal prim shape for physics (this is the default for all non-mesh objects)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_PHYSICS_SHAPE_TYPE" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString>For primitive physics shape type. Followed with either PRIM_PHYSICS_SHAPE_PRIM, PRIM_PHYSICS_SHAPE_NONE or PRIM_PHYSICS_SHAPE_CONVEX.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_POINT_LIGHT" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by TRUE or FALSE, vector color, float intensity, float radius, float falloff</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_POSITION" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Sets primitive position to a vector position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_POS_LOCAL" Type="Integer" Value="33" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's local position.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ROTATION" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Sets primitive rotation</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_ROT_LOCAL" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's local rotation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_FLAG_INVERT" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Flag to specify that the surface normals should be inverted</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_FLAG_MIRROR" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Flag to specify that the prim should be reflected along X axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_CYLINDER" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Stitch edges in a cylinder-like way</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_MASK" Type="Integer" Value="7" Subsets="lsl">
    <DocumentationString>Mask used to determine stitching type</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_PLANE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Do not stitch edges</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_SPHERE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Stitch edges in a sphere-like way</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SCULPT_TYPE_TORUS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Stitch edges in a torus-like way</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_HIGH" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>High shininess</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_LOW" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Low shininess</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_MEDIUM" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Medium shininess</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SHINY_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>No shininess</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SIZE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Sets primitive size to a vector size</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SLICE" Type="Integer" Value="35" Subsets="lsl,os-lsl">
    <DocumentationString>Get and set the "slice" parameter of all shapes. Takes a vector parameter of the form &lt;start_slice, end_slice, 0&gt;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_SPECULAR" Type="Integer" Value="36" Subsets="lsl,os-lsl">
    <DocumentationString>Sets the prim's specular map attributes. Followed by integer face, string texture, vector repeats, vector offsets, float rotation_in_radians, vector color, integer glossiness and integer environment.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEMP_ON_REZ" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Sets temporary on rez to TRUE or FALSE</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXGEN" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by an integer face, and one of PRIM_TEXGEN_DEFAULT or PRIM_TEXGEN_PLANAR</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXGEN_DEFAULT" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Default texture mapping</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXGEN_PLANAR" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Planar texture mapping</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXT" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString>Used to get or set the object's floating text.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TEXTURE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by an integer face, key id, vector repeats, vector offsets,;and float rotation in radians</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by PRIM_TYPE_BOX, PRIM_TYPE_CYLINDER, PRIM_TYPE_PRISM, PRIM_TYPE_SPHERE, PRIM_TYPE_TORUS, PRIM_TYPE_TUBE, or PRIM_TYPE_SCULPT and their arguments</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_BOX" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;vector top size, and vector top shear</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_CYLINDER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;vector top size, and vector top shear</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_PRISM" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;vector top size, and vector top shear</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_RING" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;vector hole size, vector top shear, vector advanced cut, vector taper,;float revolutions, float radius offset, and float skew</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_SCULPT" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by a key/string texture uuid, and one of PRIM_SCULPT_TYPE_SPHERE, PRIM_SCULPT_TYPE_TORUS, PRIM_SCULPT_TYPE_PLANE, or PRIM_SCULPT_TYPE_CYLINDER</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_SPHERE" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;and vector dimple</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_TORUS" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;vector hole size, vector top shear, vector advanced cut, vector taper,;float revolutions, float radius offset, and float skew</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_TYPE_TUBE" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Followed by integer hole shape, vector cut, float hollow, vector twist,;vector hole size, vector top shear, vector advanced cut, vector taper,;float revolutions, float radius offset, and float skew</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PROFILE_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Disables profiling</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PROFILE_SCRIPT_MEMORY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Enables memory profiling when passed to llScriptProfiler()</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PUBLIC_CHANNEL" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Chat channel that broadcasts to all nearby users</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RAD_TO_DEG" Type="Float" Value="57.295779513082320876798154814105f" Subsets="lsl,os-lsl">
    <DocumentationString>To convert from radians to degrees</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RCERR_CAST_TIME_EXCEEDED" Type="Integer" Value="-3" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llCastRay() when the raycast failed because the parcel or agent has exceeded the maximum time allowed for raycasting.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RCERR_SIM_PERF_LOW" Type="Integer" Value="-2" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llCastRay() when the raycast failed because simulator performance is low.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RCERR_UNKNOWN" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Returned by llCastRay() when the raycast failed for an unspecified reason.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_DATA_FLAGS" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llCastRay() followed with a bitwise combination of RC_GET_NORMAL, RC_GET_ROOT_KEY and RC_GET_LINK_NUM.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_DETECT_PHANTOM" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llCastRay() followed with TRUE to detect phantom AND volume detect objects, FASLE otherwise.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_GET_LINK_NUM" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Flag used in the RC_DATA_FLAGS mask to get link numbers in llCastRay() results.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_GET_NORMAL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Flag used in the RC_DATA_FLAGS mask to get hit normals in llCastRay() results.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_GET_ROOT_KEY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Flag used in the RC_DATA_FLAGS mask to get root keys in llCastRay() results.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_MAX_HITS" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Option for llCastRay() followed with an integer specifying the maximum number of hits to return (must be &lt;= 256).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_AGENTS" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Bit mask for RC_REJECT_TYPES, rejects hits against avatars.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_LAND" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Bit mask for RC_REJECT_TYPES, rejects hits against the terrian.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_NONPHYSICAL" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Bit mask for RC_REJECT_TYPES, rejects hits against non-moving objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_PHYSICAL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Bit mask for RC_REJECT_TYPES, rejects hits against moving objects.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RC_REJECT_TYPES" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Optional parameter set in llCastRay() to reject hit against certain object types.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_ALLOW_DAMAGE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region is entirely damage enabled</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_ALLOW_DIRECT_TELEPORT" Type="Integer" Value="1048576" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region allows direct teleports</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_BLOCK_FLY" Type="Integer" Value="524288" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region blocks flying</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_BLOCK_TERRAFORM" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region terraforming disabled</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_DISABLE_COLLISIONS" Type="Integer" Value="4096" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region has disabled collisions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_DISABLE_PHYSICS" Type="Integer" Value="16384" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region has disabled physics</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_FIXED_SUN" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region has a fixed sun position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_RESTRICT_PUSHOBJECT" Type="Integer" Value="4194304" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region restricts llPushObject() calls</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REGION_FLAG_SANDBOX" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llGetRegionFlags to find if a region is a sandbox</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REMOTE_DATA_CHANNEL" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Value of event_type in remote_event after successful llOpenRemoteDataChannel</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REMOTE_DATA_REPLY" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Value of event_type in remote_event if XML-RPC reply is received</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REMOTE_DATA_REQUEST" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Value of event_type in remote_event if XML-RPC request is received</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REVERSE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Animate in the reverse direction</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ROTATE" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Rotates the texture, instead of using frames</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SCALE" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Scales the texture, instead of using frames</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SCRIPTED" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in llSensor library function to look for scripted objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SIM_STAT_PCT_CHARS_STEPPED" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Option for llGetSimStats() to return the % of pathfinding characters skipped each frame, averaged over the last minute.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SMOOTH" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Textures slides, instead of stepping</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="SQRT2" Type="Float" Value="1.4142135623730950488016887242097f" Subsets="lsl,os-lsl">
    <DocumentationString>1.4142135623730950488016887242097</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_BLOCK_GRAB" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If TRUE, root prim of linkset (or unlinked prim) can't be grabbed and physically dragged</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_BLOCK_GRAB_OBJECT" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString>This status flag keeps the object from being moved by grabs. This flag applies to the entire linkset.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_BOUNDS_ERROR" Type="Integer" Value="1002" Subsets="lsl">
    <DocumentationString>Argument(s) passed to function had a bounds error</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_CAST_SHADOWS" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If TRUE, object casts shadows on other objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_DIE_AT_EDGE" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If TRUE, objects that reach the edge of the world just die;rather than teleporting back to the owner</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_INTERNAL_ERROR" Type="Integer" Value="1999" Subsets="lsl">
    <DocumentationString>An internal error occurred</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_MALFORMED_PARAMS" Type="Integer" Value="1000" Subsets="lsl">
    <DocumentationString>Function was called with malformed params</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_NOT_FOUND" Type="Integer" Value="1003" Subsets="lsl">
    <DocumentationString>Object or other item was not found</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_NOT_SUPPORTED" Type="Integer" Value="1004" Subsets="lsl">
    <DocumentationString>Feature not supported</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_OK" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Result of function call was success</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_PHANTOM" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If TRUE, object doesn't collide with other objects</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_PHYSICS" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If TRUE, object moves physically</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_RETURN_AT_EDGE" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString> Passed in the llSetStatus library function.  If TRUE, script rezzed objects that reach the edge of the world;are returned rather than killed;STATUS_RETURN_AT_EDGE trumps STATUS_DIE_AT_EDGE if both are set</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_ROTATE_X" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If FALSE, object doesn't rotate around local X axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_ROTATE_Y" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If FALSE, object doesn't rotate around local Y axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_ROTATE_Z" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If FALSE, object doesn't rotate around local Z axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_SANDBOX" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Passed in the llSetStatus library function.  If TRUE, object can't cross region boundaries or move more than 10 meters from its start location</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_TYPE_MISMATCH" Type="Integer" Value="1001" Subsets="lsl">
    <DocumentationString>Argument(s) passed to function had a type mismatch</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATUS_WHITELIST_FAILED" Type="Integer" Value="2001" Subsets="lsl">
    <DocumentationString>URL failed to pass whitelist</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STRING_TRIM" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llStringTrim to trim both leading and trailing spaces from a string</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STRING_TRIM_HEAD" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llStringTrim to trim leading spaces from a string</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STRING_TRIM_TAIL" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llStringTrim to trim trailing spaces from a string</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_BLANK" Type="String" Value="&quot;5748decc-f629-461c-9a36-a35a221fe21f&quot;" Subsets="lsl,os-lsl">
    <DocumentationString>UUID for the "Blank" texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_MEDIA" Type="String" Value="&quot;8b5fec65-8d8d-9dc5-cda8-8fdf2716e361&quot;" Subsets="lsl,os-lsl">
    <DocumentationString>UUID for the "Default Media" texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_PLYWOOD" Type="String" Value="&quot;89556747-24cb-43ed-920b-47caed15465f&quot;" Subsets="lsl,os-lsl">
    <DocumentationString>UUID for the default "Plywood" texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_TRANSPARENT" Type="String" Value="&quot;8dcd4a48-2d37-4909-9f78-f7a9eb4ef903&quot;" Subsets="lsl,os-lsl">
    <DocumentationString>UUID for the "White - Transparent" texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TOUCH_INVALID_FACE" Type="Integer" Value="-1" Subsets="lsl,os-lsl">
    <DocumentationString>Value returned by llDetectedTouchFace() when the touch position is not valid</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TOUCH_INVALID_TEXCOORD" Type="Vector" Value="-1.0, -1.0, 0.0" Subsets="lsl,os-lsl">
    <DocumentationString>Value returned by llDetectedTouchUV() and llDetectedTouchST() when the touch position is not valid</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TOUCH_INVALID_VECTOR" Type="Vector" Value="0.0, 0.0, 0.0" Subsets="lsl,os-lsl">
    <DocumentationString>Value returned by llDetectedTouchPos(), llDetectedTouchNormal(), and llDetectedTouchBinormal() when the touch position is not valid</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE" Type="Integer" Value="7" Subsets="lsl">
    <DocumentationString>Controls the speed at which characters moves on terrain that is less than 100% walkable will move faster (e.g., a cat crossing a street) or slower (e.g., a car driving in a swamp).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TRUE" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>integer_constant for Boolean operations</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TWO_PI" Type="Float" Value="6.283185307179586476925286766559f" Subsets="lsl,os-lsl">
    <DocumentationString>6.283185307179586476925286766559</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_FLOAT" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that the list entry is holding an float</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_INTEGER" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that the list entry is holding an integer</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_INVALID" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that this wasn't a valid list entry</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_KEY" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that the list entry is holding an key</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_ROTATION" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that the list entry is holding an rotation</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_STRING" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that the list entry is holding an string</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TYPE_VECTOR" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString>Indicates that the list entry is holding an vector</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="URL_REQUEST_DENIED" Type="String" Value="URL_REQUEST_DENIED" Subsets="lsl,os-lsl">
    <DocumentationString>Used with http_request when a public URL is not available</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="URL_REQUEST_GRANTED" Type="String" Value="URL_REQUEST_GRANTED" Subsets="lsl,os-lsl">
    <DocumentationString>Used with http_request when a public URL is successfully granted</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between 0 (no deflection) and 1 (maximum strength)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_DEFLECTION_TIMESCALE" Type="Integer" Value="33" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the vehicle to achieve full angular deflection</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_FRICTION_TIMESCALE" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString>A vector of timescales for exponential decay of angular velocity about the three vehicle axes</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE" Type="Integer" Value="35" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the angular motor's effectiveness to decay toward zero</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_MOTOR_DIRECTION" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString>The angular velocity that the vehicle will try to achieve</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ANGULAR_MOTOR_TIMESCALE" Type="Integer" Value="34" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the vehicle to achive its full angular motor velocity</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BANKING_EFFICIENCY" Type="Integer" Value="38" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between -1 (leans out of turns), 0 (no banking), and +1 (leans into turns)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BANKING_MIX" Type="Integer" Value="39" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between 0 (static banking) and 1 (dynamic banking)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BANKING_TIMESCALE" Type="Integer" Value="40" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the banking behavior to take full effect</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_BUOYANCY" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between 0 (no anti-gravity) and 1 (full anti-gravity)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_CAMERA_DECOUPLED" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Causes the camera look-at axis to NOT move when the vehicle rotates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>Hover only pays attention to global height</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_TERRAIN_ONLY" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>Hover only pays attention to terrain height</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_UP_ONLY" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString>Hover only pushes up</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_HOVER_WATER_ONLY" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>Hover only pays attention to water level</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LIMIT_MOTOR_UP" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString>Prevents ground vehicles from motoring into the sky</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LIMIT_ROLL_ONLY" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Removes vertical attraction for changes in vehicle pitch</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_MOUSELOOK_BANK" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString>Makes vehicle try to turn toward mouselook direction assuming banking is enabled</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_MOUSELOOK_STEER" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString>Makes vehicle try to turn toward mouselook direction</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_DEFLECTION_UP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Prevents linear deflection along world-z axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_HOVER_EFFICIENCY" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between 0 (bouncy) and 1 (critically damped) hover behavior</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_HOVER_HEIGHT" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString>The height the vehicle will try to hover</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_HOVER_TIMESCALE" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString>The period of time for the vehicle to achieve its hover height</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_DEFLECTION_EFFICIENCY" Type="Integer" Value="28" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between 0 (no deflection) and 1 (maximum strength)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_DEFLECTION_TIMESCALE" Type="Integer" Value="31" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the vehicle to redirect its velocity to be along its x-axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_FRICTION_TIMESCALE" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString>A vector of timescales for exponential decay of linear velocity along the three vehicle axes</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE" Type="Integer" Value="31" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the linear motor's effectiveness to decay toward zero</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_DIRECTION" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString>The linear velocity that the vehicle will try to achieve</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_OFFSET" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString>An offset from the center of mass of the vehicle where the linear motor is applied</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_LINEAR_MOTOR_TIMESCALE" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the vehicle to achive its full linear motor velocity</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_REFERENCE_FRAME" Type="Integer" Value="44" Subsets="lsl,os-lsl">
    <DocumentationString>Rotation of vehicle axes relative to local frame</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_AIRPLANE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString >Uses linear deflection for lift, no hover, and banking to turn.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_BALLOON" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString >Hover, and friction, but no deflection.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_BOAT" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString >Hovers over water with lots of friction and some anglar deflection.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_CAR" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >Another vehicle that bounces along the ground but needs the motors to be driven from external controls or timer events.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_NONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString >Turns off vehicle support</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_TYPE_SLED" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString >Simple vehicle that bumps along the ground, and likes to move along it’s local x-axis.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY" Type="Integer" Value="36" Subsets="lsl,os-lsl">
    <DocumentationString>A slider between 0 (bouncy) and 1 (critically damped) attraction of vehicle z-axis to world z-axis (vertical)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_VERTICAL_ATTRACTION_TIMESCALE" Type="Integer" Value="37" Subsets="lsl,os-lsl">
    <DocumentationString>The exponential timescale for the vehicle to align its z-axis to the world z-axis (vertical)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VERTICAL" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Constant to indicate that the orientation of the capsule for a Pathfinding character is vertical.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ZERO_VECTOR" Type="Vector" Value="0.0, 0.0, 0.0" Subsets="lsl,os-lsl">
    <DocumentationString>&lt;0.0, 0.0, 0.0&gt;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_FLAGS" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString >Various flags controlling the behavior of the particle system</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BOUNCE_MASK" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString >When set, specifies particles will bounce off a plane at the region Z height of the emitter. On "bounce", each particle reverses velocity and angle. This only works for particles above the plane falling down on it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_EMISSIVE_MASK" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString >When set, particles are full-bright and are unaffected by global lighting (sunlight). Otherwise, particles will be lit depending on the current global lighting conditions. Note that point lights do illuminate non-emissive particles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_FOLLOW_SRC_MASK" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString >When set, particles move relative to the position of the emitter. Otherwise, particle position and movement are unaffected by the position/movement of the emitter. This flag disables the PSYS_SRC_BURST_RADIUS rule.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_FOLLOW_VELOCITY_MASK" Type="Integer" Value="32" Subsets="lsl,os-lsl">
    <DocumentationString >When set, particles rotate to orient their "top" towards the direction of movement or emission. Otherwise, particles are oriented vertically as their textures would appear (top of texture at top, left at left).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_INTERP_COLOR_MASK" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString >When set, particle color and alpha transition from their START settings to their END settings during the particle's lifetime. The transition is a smooth interpolation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_INTERP_SCALE_MASK" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >When set, particle size/scale transitions from its START setting to its END setting during the particle's lifetime.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_RIBBON_MASK" Type="Integer" Value="1024" Subsets="lsl,os-lsl">
    <DocumentationString >Joins a stream of particles together into a continuous strip. Particle textures are stretched (or squeezed) to join their right edges to their predecessor's left. Ribbon 'width' is controlled by the 'x' values of start and end scale. (The 'y' values are ignored. The distance between particles controls the 'length' of each ribbon segment). Unlike other particle effects, ribbon segments are not rendered facing the viewer's camera. The Z axis of each new particle mimics the Z axis of the emitter prim. Ribbon segments will not render if they have no 'length' - this happens when particles move only 'up' or 'down' the local Z-axis of their emitter prim. PSYS_PART_FOLLOW_VELOCITY_MASK has no effect on ribbons. For a simple ribbon effect, try using the DROP pattern, TEXTURE_BLANK, ACCEL and/or WIND.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_TARGET_LINEAR_MASK" Type="Integer" Value="128" Subsets="lsl,os-lsl">
    <DocumentationString >When set, emitted particles move in a straight evenly-spaced line towards the target specified by the PSYS_SRC_TARGET_KEY rule. This option ignores all Non-DROP patterns and their dependent attributes (radius, burst speeds, angles, and omega). PSYS_SRC_ACCEL and PSYS_PART_WIND_MASK are ignored as well. Using PSYS_PART_BOUNCE_MASK while the target is 'below' the emitter will cause the linear particle stream to deflect upwards, terminating above the target.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_TARGET_POS_MASK" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString >When set, emitted particles change course during their lifetime, attempting to move towards the target specified by the PSYS_SRC_TARGET_KEY rule by the time they expire. Note that if no target is specified, the target moves out of range, or an invalid target is specified, the particles target the prim itself.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_WIND_MASK" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString >When set, particle movement is affected by the wind. It is applied as a secondary force on the particles.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BEAM_MASK" Type="Integer" Value="512" Subsets="lsl">
    <DocumentationString >(unimplemented) mask but in the enum</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LL_PART_HUD" Type="Integer" Value="1073741824" Subsets="lsl">
    <DocumentationString >Used by the viewer to keep HUD and World particle sources separate.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LL_PART_DEAD_MASK" Type="Integer" Value="-2147483648" Subsets="lsl">
    <DocumentationString >Removes particles, not compatible with any other PSYS_PART_*_MASK</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the general emission pattern.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_EXPLODE" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >Sprays particles outwards in a spherical area. The Initial velocity of each particle is determined by PSYS_SRC_BURST_SPEED_MIN and PSYS_SRC_BURST_SPEED_MAX. The EXPLODE pattern ignores the ANGLE parameters.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_ANGLE_CONE" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString >Sprays particles outwards in a spherical, sub-spherical, conical or ring shaped area, as defined by the ANGLE parameters PSYS_SRC_ANGLE_BEGIN and PSYS_SRC_ANGLE_END. The ANGLE_CONE pattern can be used to imitate the EXPLODE pattern by explicitly setting PSYS_SRC_ANGLE_BEGIN to 0.00000 and PSYS_SRC_ANGLE_END to 3.14159 (or PI) (or vice versa).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_ANGLE" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString >Sprays particles outward in a flat circular, semi-circular, arc or ray shaped areas, as defined by PSYS_SRC_ANGLE_BEGIN and PSYS_SRC_ANGLE_END. The circular pattern radiates outwards around the prim's local X axis line.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_DROP" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString >Creates particles with no initial velocity. The DROP pattern will override any values given for PSYS_SRC_BURST_RADIUS, PSYS_SRC_BURST_SPEED_MIN, and PSYS_SRC_BURST_SPEED_MAX, setting each to 0.00000. (All patterns will behave like the DROP pattern, if RADIUS, SPEED_MIN and SPEED_MAX are explicitly set to 0.0000.)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString >(incomplete implementation) acts the same as the PSYS_SRC_PATTERN_DROP pattern, it is believed that the original intention for this pattern was to invert the effect of the ANGLE parameters, making them delineate an area where particles were NOT to be sprayed. (effectively the inverse or opposite of the behavior of the ANGLE_CONE pattern).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_RADIUS" Type="Integer" Value="16" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the distance from the emitter where particles will be created. This rule is ignored when the PSYS_PART_FOLLOW_SRC_MASK flag is set.  Maximum value is 50.00</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_ANGLE_BEGIN" Type="Integer" Value="22" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies a half angle, in radians, of a circular or spherical "dimple" or conic section (starting from the emitter facing) within which particles will NOT be emitted. Valid values are the same as for PSYS_SRC_ANGLE_END, though the effects are reversed accordingly. If the pattern is PSYS_SRC_PATTERN_ANGLE, the presentation is a 2D flat circular section. If PSYS_SRC_PATTERN_ANGLE_CONE or PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY is used, the presentation is a 3D spherical section. Note that the value of this parameter and PSYS_SRC_ANGLE_END are internally re-ordered such that this parameter gets the smaller of the two values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_ANGLE_END" Type="Integer" Value="23" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies a half angle, in radians, of a circular or spherical "dimple" or conic section (starting from the emitter facing) within which particles WILL be emitted. Valid values are 0.0, which will result in particles being emitted in a straight line in the direction of the emitter facing, to PI, which will result in particles being emitted in a full circular or spherical arc around the emitter, not including the "dimple" or conic section defined by PSYS_SRC_ANGLE_BEGIN. If the pattern is PSYS_SRC_PATTERN_ANGLE, the presentation is a 2D flat circular section. If PSYS_SRC_PATTERN_ANGLE_CONE or PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY is used, the presentation is a 3D spherical section. Note that the value of this parameter and PSYS_SRC_ANGLE_BEGIN are internally re-ordered such that this parameter gets the larger of the two values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_INNERANGLE" Type="Integer" Value="10" Subsets="lsl,os-lsl">
    <DocumentationString >DEPRECATED: Use PSYS_SRC_ANGLE_BEGIN instead. Works similar to its replacement rule, except the edge of the section is aligned with the emitter facing, rather than its center.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_OUTERANGLE" Type="Integer" Value="11" Subsets="lsl,os-lsl">
    <DocumentationString >DEPRECATED: Use PSYS_SRC_ANGLE_END instead. Works similar to its replacement rule, except the edge of the section is aligned with the emitter facing, rather than the section's center.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_TARGET_KEY" Type="Integer" Value="20" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the key of a target object, prim, or agent towards which the particles will change course and move (if PSYS_PART_TARGET_POS_MASK is specified) or will move in a straight line (if PSYS_PART_TARGET_LINEAR_MASK is specified). They will attempt to end up at the geometric center of the target at the end of their lifetime. Requires the PSYS_PART_TARGET_POS_MASK or PSYS_PART_TARGET_LINEAR_MASK flag be set.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_COLOR" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString >A vector specifying the color of the particles upon emission.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_COLOR" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString >A vector specifying the color the particles transition to during their lifetime. Only used if the PSYS_PART_INTERP_COLOR_MASK flag is set.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_ALPHA" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the alpha of the particles upon emission. Valid values are in the range 0.0 to 1.0. Lower values are more transparent; higher ones are more opaque.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_ALPHA" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the alpha the particles transition to during their lifetime. Only used if the PSYS_PART_INTERP_COLOR_MASK flag is set. Valid values are the same as PSYS_PART_START_ALPHA.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_SCALE" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the scale or size of the particles upon emission. Valid values for each direction are 0.03125 to 4.0, in meters. The actual particle size is always a multiple of 0.03125. Smaller changes don't have any effect. Since particles are essentially 2D sprites, the Z component of the vector is ignored and can be set to 0.0.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_SCALE" Type="Integer" Value="6" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the scale or size the particles transition to during their lifetime. Only used if the PSYS_PART_INTERP_SCALE_MASK flag is set. Valid values are the same as PSYS_PART_START_SCALE.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_TEXTURE" Type="Integer" Value="12" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the name of a texture in the emitter prim's inventory to use for each particle. Alternatively, you may specify an asset key UUID for a texture. If using llLinkParticleSystem and texture is not a UUID, texture must be in the emitter prim (not necessarily with the script).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_START_GLOW" Type="Integer" Value="26" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the glow of the particles upon emission. Valid values are in the range of 0.0 (no glow) to 1.0 (full glow).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_END_GLOW" Type="Integer" Value="27" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the glow that the particles transition to during their lifetime. Valid values are the same as PSYS_PART_START_GLOW.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BLEND_FUNC_SOURCE" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies how blending function uses the incoming particle's color and alpha information to produce the rendered result. Defaults to PSYS_PART_BF_SOURCE_ALPHA.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BLEND_FUNC_DEST" Type="Integer" Value="25" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies how blending function uses the current framebuffer's color and alpha information to produce the rendered result. Defaults to PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA. To make particles blend with the background in a less opaque and more luminescent way use PSYS_PART_BF_ONE for dest and the default for source. Most other blending combinations will render the invisible/alpha portion of your particle texture, unless the invisible area of your texture is all black (or, in some cases, unless it is all white).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString >Do not scale the source or destination RGBA values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ZERO" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString >Zero out the source or destination RGBA values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_DEST_COLOR" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >Scale the RGBA values by the RGBA values of the destination.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_SOURCE_COLOR" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString >Scale the RGBA values by the RGBA values of the particle source.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE_MINUS_DEST_COLOR" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString >Scale the RGBA values by the inverted RGBA values of the destination.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR" Type="Integer" Value="5" Subsets="lsl,os-lsl">
    <DocumentationString >Scale the RGBA values by the inverted RGBA values of the particle source.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_SOURCE_ALPHA" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString >Scale the RGBA values by the alpha values of the particle source.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA" Type="Integer" Value="9" Subsets="lsl,os-lsl">
    <DocumentationString >Scale the RGBA values by the inverted alpha values of the particle source.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_MAX_AGE" Type="Integer" Value="19" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the length of time, in seconds, that the emitter will operate upon coming into view range (if the particle system is already set) or upon execution of this function (if already in view range). Upon expiration, no more particles will be emitted, except as specified above. Zero will give the particle system an infinite duration.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_PART_MAX_AGE" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the lifetime of each particle emitted, in seconds. Maximum is 30.0 seconds. During this time, the particle will appear, change appearance and move according to the parameters specified in the other sections, and then disappear.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_RATE" Type="Integer" Value="13" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the time interval, in seconds, between "bursts" of particles being emitted. Specifying a value of 0.0 will cause the emission of particles as fast as the viewer can do so.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_PART_COUNT" Type="Integer" Value="15" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the number of particles emitted in each "burst".</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_ACCEL" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies a directional acceleration vector applied to each particle as it is emitted, in meters per second squared. Valid values are 0.0 to 100.0 for each direction both positive and negative, as region coordinates.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_OMEGA" Type="Integer" Value="21" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the rotational spin of the emitter in radians per second along each axis. This "unsticks" the emitter facing from the prim's positive Z axis and is noticeable in directional presentations. Prim spin (via llTargetOmega) has no effect on emitter spin.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_SPEED_MIN" Type="Integer" Value="17" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the minimum value of a random range of values which is selected for each particle in a burst as its initial speed upon emission, in meters per second. Note that the value of this parameter and PSYS_SRC_BURST_SPEED_MAX are internally re-ordered such that this parameter gets the smaller of the two values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_BURST_SPEED_MAX" Type="Integer" Value="18" Subsets="lsl,os-lsl">
    <DocumentationString >Specifies the maximum value of a random range of values which is selected for each particle in a burst as its initial speed upon emission, in meters per second. Note that the value of this parameter and PSYS_SRC_BURST_SPEED_MIN are internally re-ordered such that this parameter gets the larger of the two values.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CLICK_ACTION_ZOOM" Type="Integer" Value="7" Subsets="lsl,os-lsl">
    <DocumentationString>Used with llSetClickAction to set zoom in as the default action when object is clicked</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHANGED_ANIMATION" Type="Integer" Value="16384" Subsets="ossl">
    <DocumentationString>The set of animations playing on the avatar to whom this object is attached has been changed.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DATA_SIM_RELEASE" Type="Integer" Value="128" Subsets="ossl">
    <DocumentationString >returns the version of the simulator the script is running in; the string parameter of llRequestSimulatorData is ignored.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC" Type="Integer" Value="16777216" Subsets="ossl">
    <DocumentationString>Target is NPC. Use this instead of NPC, Value 0x01000000</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_RANGE_BLOCK" Type="Integer" Value="45" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_ROLL_FRAME" Type="Integer" Value="46" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_X" Type="Integer" Value="1024" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_Y" Type="Integer" Value="2048" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_Z" Type="Integer" Value="4096" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LOCK_HOVER_HEIGHT" Type="Integer" Value="8192" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_DEFLECTION" Type="Integer" Value="16392" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_LOCK_ROTATION" Type="Integer" Value="32784" Subsets="ossl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LIST_STAT_HARMONIC_MEAN" Type="Integer" Value="100" Subsets="ossl">
    <DocumentationString>Returns the harmonic mean of a list of numbers, Value 100.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET_X" Type="Integer" Value="2" Subsets="ossl">
    <DocumentationString>Adjusts the camera focus x position relative to the target. (float)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET_Y" Type="Integer" Value="3" Subsets="ossl">
    <DocumentationString>Adjusts the camera focus y position relative to the target. (float)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_OFFSET_Z" Type="Integer" Value="4" Subsets="ossl">
    <DocumentationString>Adjusts the camera focus z position relative to the target. (float)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_X" Type="Integer" Value="14" Subsets="ossl">
    <DocumentationString>Sets camera x position in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_Y" Type="Integer" Value="15" Subsets="ossl">
    <DocumentationString>Sets camera y position in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_POSITION_Z" Type="Integer" Value="16" Subsets="ossl">
    <DocumentationString>Sets camera z position in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_X" Type="Integer" Value="18" Subsets="ossl">
    <DocumentationString>Sets camera x focus (target position) in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_Y" Type="Integer" Value="19" Subsets="ossl">
    <DocumentationString>Sets camera y focus (target position) in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CAMERA_FOCUS_Z" Type="Integer" Value="20" Subsets="ossl">
    <DocumentationString>Sets camera z focus (target position) in region coordinates</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_OK" Type="Integer" Value="0" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Result of function call was success</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_MALFORMED_PARAMS" Type="Integer" Value="1000" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Function was called with malformed parameters</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_TYPE_MISMATCH" Type="Integer" Value="1001" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Argument(s) passed to function had a type mismatch</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_BOUNDS_ERROR" Type="Integer" Value="1002" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Argument(s) passed to function had a bounds error</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_NOT_FOUND" Type="Integer" Value="1003" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Object or other item was not found</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_NOT_SUPPORTED" Type="Integer" Value="1004" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Feature not supported</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_INTERNAL_ERROR" Type="Integer" Value="1999" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  An internal error occurred</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LSL_STATUS_WHITELIST_FAILED" Type="Integer" Value="2001" Subsets="lsl,ossl">
    <DocumentationString >llClearPrimMedia success/failure flag.  Whitelist Failed</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_TIME_DILATION" Type="Integer" Value="0" Subsets="ossl">
    <DocumentationString>Time Dilation, Value 0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_SIM_FPS" Type="Integer" Value="1" Subsets="ossl">
    <DocumentationString>Sim FPS, Value 1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PHYSICS_FPS" Type="Integer" Value="2" Subsets="ossl">
    <DocumentationString>Physics FPS, Value 2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_AGENT_UPDATES" Type="Integer" Value="3" Subsets="ossl">
    <DocumentationString>Agent Updates/Sec, Value 3</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_ROOT_AGENTS" Type="Integer" Value="4" Subsets="ossl">
    <DocumentationString>Main Agents, Value 4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_CHILD_AGENTS" Type="Integer" Value="5" Subsets="ossl">
    <DocumentationString>Child Agents, Value 5</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_TOTAL_PRIMS" Type="Integer" Value="6" Subsets="ossl">
    <DocumentationString>Objects, Value 6</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_ACTIVE_PRIMS" Type="Integer" Value="7" Subsets="ossl">
    <DocumentationString>Active Objects, Value 7</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_FRAME_MS" Type="Integer" Value="8" Subsets="ossl">
    <DocumentationString>Total Frame Time, Value 8</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_NET_MS" Type="Integer" Value="9" Subsets="ossl">
    <DocumentationString>Net Time, Value 9</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PHYSICS_MS" Type="Integer" Value="10" Subsets="ossl">
    <DocumentationString>Physics Time, Value 10</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_IMAGE_MS" Type="Integer" Value="11" Subsets="ossl">
    <DocumentationString>Images Time, Value 11</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_OTHER_MS" Type="Integer" Value="12" Subsets="ossl">
    <DocumentationString>(Other Time), Value 12</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_IN_PACKETS_PER_SECOND" Type="Integer" Value="13" Subsets="ossl">
    <DocumentationString>Packets in, Value 13</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_OUT_PACKETS_PER_SECOND" Type="Integer" Value="14" Subsets="ossl">
    <DocumentationString>Packets out, Value 14</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_UNACKED_BYTES" Type="Integer" Value="15" Subsets="ossl">
    <DocumentationString>Total Unacked Bytes, Value 15</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_AGENT_MS" Type="Integer" Value="16" Subsets="ossl">
    <DocumentationString>Agent Time, Value 16</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PENDING_DOWNLOADS" Type="Integer" Value="17" Subsets="ossl">
    <DocumentationString>Pending Downloads, Value 17</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_PENDING_UPLOADS" Type="Integer" Value="18" Subsets="ossl">
    <DocumentationString>Pending Downloads, Value 18</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_ACTIVE_SCRIPTS" Type="Integer" Value="19" Subsets="ossl">
    <DocumentationString>Active Scripts, Value 19</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="STATS_SCRIPT_LPS" Type="Integer" Value="20" Subsets="ossl">
    <DocumentationString>Script Line Per Second, Value 20</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_FLY" Type="Integer" Value="0" Subsets="ossl">
    <DocumentationString>Value 0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_NO_FLY" Type="Integer" Value="1" Subsets="ossl">
    <DocumentationString>Value 1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_LAND_AT_TARGET" Type="Integer" Value="2" Subsets="ossl">
    <DocumentationString>Value 2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_RUNNING" Type="Integer" Value="4" Subsets="ossl">
    <DocumentationString>Value 4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_SIT_NOW" Type="Integer" Value="0" Subsets="ossl">
    <DocumentationString>Value 0</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_CREATOR_OWNED" Type="Integer" Value="1" Subsets="ossl">
    <DocumentationString>Value 0x1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_NOT_OWNED" Type="Integer" Value="2" Subsets="ossl">
    <DocumentationString>Value 0x2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_NPC_SENSE_AS_AGENT" Type="Integer" Value="4" Subsets="ossl">
    <DocumentationString>Value 0x4</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_LISTEN_REGEX_NAME" Type="Integer" Value="1" Subsets="ossl">
    <DocumentationString>Process name parameter as regex, Value = 0x1</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_LISTEN_REGEX_MESSAGE" Type="Integer" Value="2" Subsets="ossl">
    <DocumentationString>Process name parameter as regex, Value = 0x2</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_ALL" Type="Integer" Value="-65535" Subsets="ossl">
    <DocumentationString>Send the message to attachments on every point</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_INVERT_POINTS" Type="Integer" Value="1" Subsets="ossl">
    <DocumentationString>Invert how the attachment points list should be treated</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_OBJECT_CREATOR" Type="Integer" Value="2" Subsets="ossl">
    <DocumentationString>Send only to those have the same CreatorID with host object CreatorID</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OS_ATTACH_MSG_SCRIPT_CREATOR" Type="Integer" Value="4" Subsets="ossl">
    <DocumentationString>Send only to those have the same CreatorID with sender script CreatorID</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_WATER_COLOR" Type="Integer" Value="0" Subsets="os-lightshare">
    <DocumentationString>Windlight Water Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_WATER_FOG_DENSITY_EXPONENT" Type="Integer" Value="1" Subsets="os-lightshare">
    <DocumentationString>Windlight Water Fog Density Exponent</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_UNDERWATER_FOG_MODIFIER" Type="Integer" Value="2" Subsets="os-lightshare">
    <DocumentationString>Windlight Underwater Fog Modifier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_REFLECTION_WAVELET_SCALE" Type="Integer" Value="3" Subsets="os-lightshare">
    <DocumentationString>Windlight Reflection Wavelet Scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_FRESNEL_SCALE" Type="Integer" Value="4" Subsets="os-lightshare">
    <DocumentationString>Windlight Fresnel Scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_FRESNEL_OFFSET" Type="Integer" Value="5" Subsets="os-lightshare">
    <DocumentationString>Windlight Fresnel Offset</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_REFRACT_SCALE_ABOVE" Type="Integer" Value="6" Subsets="os-lightshare">
    <DocumentationString>Windlight Refract Scale Above</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_REFRACT_SCALE_BELOW" Type="Integer" Value="7" Subsets="os-lightshare">
    <DocumentationString>Windlight Refract Scale Below</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_BLUR_MULTIPLIER" Type="Integer" Value="8" Subsets="os-lightshare">
    <DocumentationString>Windlight Blur Multiplier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_BIG_WAVE_DIRECTION" Type="Integer" Value="9" Subsets="os-lightshare">
    <DocumentationString>Windlight Big Wave Direction</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_LITTLE_WAVE_DIRECTION" Type="Integer" Value="10" Subsets="os-lightshare">
    <DocumentationString>Windlight Little Wave Direction</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_NORMAL_MAP_TEXTURE" Type="Integer" Value="11" Subsets="os-lightshare">
    <DocumentationString>Windlight Normal Map Texture</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_HORIZON" Type="Integer" Value="12" Subsets="os-lightshare">
    <DocumentationString>Windlight Horizon Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_HAZE_HORIZON" Type="Integer" Value="13" Subsets="os-lightshare">
    <DocumentationString>Windlight Haze Horizon</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_BLUE_DENSITY" Type="Integer" Value="14" Subsets="os-lightshare">
    <DocumentationString>Windlight Blue Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_HAZE_DENSITY" Type="Integer" Value="15" Subsets="os-lightshare">
    <DocumentationString>Windlight Haze Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_DENSITY_MULTIPLIER" Type="Integer" Value="16" Subsets="os-lightshare">
    <DocumentationString>Windlight Density Multiplier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_DISTANCE_MULTIPLIER" Type="Integer" Value="17" Subsets="os-lightshare">
    <DocumentationString>Windlight Distance Multiplier</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_MAX_ALTITUDE" Type="Integer" Value="18" Subsets="os-lightshare">
    <DocumentationString>Windlight Max Altitude</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_MOON_COLOR" Type="Integer" Value="19" Subsets="os-lightshare">
    <DocumentationString>Windlight Sun/Moon Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_AMBIENT" Type="Integer" Value="20" Subsets="os-lightshare">
    <DocumentationString>Windlight Ambient Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_EAST_ANGLE" Type="Integer" Value="21" Subsets="os-lightshare">
    <DocumentationString>Windlight Sun/Position East</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_GLOW_FOCUS" Type="Integer" Value="22" Subsets="os-lightshare">
    <DocumentationString>Windlight Sun Glow Focus</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_GLOW_SIZE" Type="Integer" Value="23" Subsets="os-lightshare">
    <DocumentationString>Windlight Sun Glow Size</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SCENE_GAMMA" Type="Integer" Value="24" Subsets="os-lightshare">
    <DocumentationString>Windlight Scene Gamma</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_STAR_BRIGHTNESS" Type="Integer" Value="25" Subsets="os-lightshare">
    <DocumentationString>Windlight Star Brightness</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_COLOR" Type="Integer" Value="26" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Colour</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_XY_DENSITY" Type="Integer" Value="27" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud X/Y/Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_COVERAGE" Type="Integer" Value="28" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Coverage</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCALE" Type="Integer" Value="29" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Scale</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_DETAIL_XY_DENSITY" Type="Integer" Value="30" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Detail X/Y/Density</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_X" Type="Integer" Value="31" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Scroll X</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_Y" Type="Integer" Value="32" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Scroll Y</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_Y_LOCK" Type="Integer" Value="33" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Scroll Y Lock</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_CLOUD_SCROLL_X_LOCK" Type="Integer" Value="34" Subsets="os-lightshare">
    <DocumentationString>Windlight Cloud Scroll X Lock</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_DRAW_CLASSIC_CLOUDS" Type="Integer" Value="35" Subsets="os-lightshare">
    <DocumentationString>Windlight Draw Classic Clouds</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WL_SUN_MOON_POSITION" Type="Integer" Value="36" Subsets="os-lightshare">
    <DocumentationString>Windlight Sun/Moon Position</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PARCEL_DETAILS_CLAIMDATE" Type="Integer" Value="10" Subsets="ossl">
    <DocumentationString>Set parcel claim date</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_CENTER_OF_MASS" Type="Integer" Value="1" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR" Type="Integer" Value="14700" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR_X" Type="Integer" Value="14701" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_LINEAR_X" Type="Integer" Value="14702" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR_Y" Type="Integer" Value="14703" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_LINEAR_Y" Type="Integer" Value="14704" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_LINEAR_Z" Type="Integer" Value="14705" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_LINEAR_Z" Type="Integer" Value="14706" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR" Type="Integer" Value="14707" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR_X" Type="Integer" Value="14708" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_ANGULAR_X" Type="Integer" Value="14709" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR_Y" Type="Integer" Value="14710" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_ANGULAR_Y" Type="Integer" Value="14711" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LOCK_ANGULAR_Z" Type="Integer" Value="14712" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LIMIT_ANGULAR_Z" Type="Integer" Value="14713" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR" Type="Integer" Value="14714" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR_X" Type="Integer" Value="14715" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR_Y" Type="Integer" Value="14716" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_LINEAR_Z" Type="Integer" Value="14717" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR" Type="Integer" Value="14718" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR_X" Type="Integer" Value="14719" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR_Y" Type="Integer" Value="14720" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK_ANGULAR_Z" Type="Integer" Value="14721" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_UNLOCK" Type="Integer" Value="14722" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINKSET_TYPE_CONSTRAINT" Type="Integer" Value="0" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Links are created with physics constraint objects. Used for flexible objects. Not a good default as it uses more CPU</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINKSET_TYPE_COMPOUND" Type="Integer" Value="1" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Linkset is constructed as a compound object made up of the shapes of all the children. The most efficient linkset implementation and the default</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINKSET_TYPE_MANUAL" Type="Integer" Value="2" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;NOT IMPLEMENTED. Linkset is implemented by CPU code that moves each of the object in the linkset independently</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_FIXED" Type="Integer" Value="1234" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Link is fixed and unmovable. Default. Implemented as a 6 degree-of-freedom constraint with no motion in either the linear or angular directions</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_HINGE" Type="Integer" Value="4" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_SPRING" Type="Integer" Value="9" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_6DOF" Type="Integer" Value="6" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_LINK_TYPE_SLIDER" Type="Integer" Value="7" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINA_LOC" Type="Integer" Value="14401" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINA_ROT" Type="Integer" Value="14402" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINB_LOC" Type="Integer" Value="14403" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_FRAMEINB_ROT" Type="Integer" Value="14404" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_LINEAR_LIMIT_LOW" Type="Integer" Value="14405" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_LINEAR_LIMIT_HIGH" Type="Integer" Value="14406" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ANGULAR_LIMIT_LOW" Type="Integer" Value="14407" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ANGULAR_LIMIT_HIGH" Type="Integer" Value="14408" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_USE_FRAME_OFFSET" Type="Integer" Value="14409" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ENABLE_TRANSMOTOR" Type="Integer" Value="14410" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_TRANSMOTOR_MAXVEL" Type="Integer" Value="14411" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_TRANSMOTOR_MAXFORCE" Type="Integer" Value="14412" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_CFM" Type="Integer" Value="14413" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_ERP" Type="Integer" Value="14414" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SOLVER_ITERATIONS" Type="Integer" Value="14415" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_AXIS_ENABLE" Type="Integer" Value="14416" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;[PHYS_PARAM_SPRING_AXIS_ENABLE, int axisCode, bool flag]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_DAMPING" Type="Integer" Value="14417" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;[PHYS_PARAM_SPRING_DAMPING, int axisCode, float damping]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_STIFFNESS" Type="Integer" Value="14418" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;[PHYS_PARAM_SPRING_STIFFNESS, int axisCode, float stiffness]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_LINK_TYPE" Type="Integer" Value="14419" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_USE_LINEAR_FRAMEA" Type="Integer" Value="14420" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_PARAM_SPRING_EQUILIBRIUM_POINT" Type="Integer" Value="14421" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ALL" Type="Integer" Value="-1" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;(-1) make changes to all axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_ALL" Type="Integer" Value="-2" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;all linear axis (X, Y, Z)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_ALL" Type="Integer" Value="-3" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;all angular axis (X, Y, Z)</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_X" Type="Integer" Value="0" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;X linear axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_Y" Type="Integer" Value="1" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Y linear axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_LINEAR_Z" Type="Integer" Value="2" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Z linear axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_X" Type="Integer" Value="3" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;X angular axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_Y" Type="Integer" Value="4" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Y angular axis</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PHYS_AXIS_ANGULAR_Z" Type="Integer" Value="5" Subsets="os-bullet-physics">
    <DocumentationString>Bulletsim;Z angular axis</DocumentationString>
  </LibraryConstant>


  <LibraryFunction Name="physSetLinksetType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linksetType" Type="Integer" />
    <DocumentationString>:Bulletsim: Set linkset type</DocumentationString>
  </LibraryFunction>
  <LibraryFunction Name="physGetLinksetType" ReturnType="Integer" Subsets="os-bullet-physics">
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physChangeLinkType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <Parameter Name="typeCode" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physGetLinkType" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physChangeLinkFixed" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <DocumentationString />
  </LibraryFunction>
  <LibraryFunction Name="physChangeLinkParams" ReturnType="Integer" Subsets="os-bullet-physics">
    <Parameter Name="linkNum" Type="Integer" />
    <Parameter Name="parms" Type="List" />
    <DocumentationString>Bulletsim: Change link params</DocumentationString>
  </LibraryFunction>
  
  
  <LibraryConstant Name="ATTACH_LPEC" Type="Integer" Value="30" Subsets="lsl,os-lsl">
    <DocumentationString >Integer constant equal to 30, this is not equivalent to ATTACH_LEFT_PEC (29) and does not seem to be used anywhere in linden secondlife.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ATTACH_RPEC" Type="Integer" Value="29" Subsets="lsl,os-lsl">
    <DocumentationString >Integer constant equal to 29, this is not equivalent to ATTACH_RIGHT_PEC (30) and does not seem to be used anywhere in linden secondlife.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AVOID_CHARACTERS" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString >Bit flag used with CHARACTER_AVOIDANCE_MODE in llCreateCharacter and llUpdateCharacter</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AVOID_DYNAMIC_OBSTACLES" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString >Bit flag used with CHARACTER_AVOIDANCE_MODE in llCreateCharacter and llUpdateCharacter</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="AVOID_NONE" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString >Bit flag used with CHARACTER_AVOIDANCE_MODE in llCreateCharacter and llUpdateCharacter</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_CMD_JUMP" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Used with  llExecCharacterCmd(). Stops any current pathfinding operation.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_CMD_SMOOTH_STOP" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Used with  llExecCharacterCmd(). Stops any current pathfinding operation in a smooth like fashion.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="CHARACTER_CMD_STOP" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Used with  llExecCharacterCmd(). Makes the character jump.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="DENSITY" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>For use with llSetPhysicsMaterial() as a bitwise value in its material_bits parameter, to set the density.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="FRICTION" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>For use with llSetPhysicsMaterial() as a bitwise value in its material_bits parameter, to set the friction.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="GCNP_RADIUS" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString >Used with LLGetClosestNavPoint(vector point, list options); Limits how far out to search for a navigation point.  Parameters are [ float distance ]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="GCNP_STATIC" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString >Used with LLGetClosestNavPoint(vector point, list options); Specifies whether the test should use the static or dynamic nav mesh. In the static case, all dynamic obstacles are ignored.  Parameters are [ integer use_static_mesh ]</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="GRAVITY_MULTIPLIER" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString>For use with llSetPhysicsMaterial() as a bitwise value in its material_bits parameter, to set the gravity multiplier.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="KFM_CMD_SET_MODE" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="LAND_LARGE_BRUSH" Type="Integer" Value="3" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to modify large land areas</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_MEDIUM_BRUSH" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to modify medium land areas</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="LAND_SMALL_BRUSH" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Passed to llModifyLand to modify small land areas</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="OPT_CHARACTER" Type="Integer" Value="2" Subsets="lsl,os-lsl">
    <DocumentationString >Possible return value of llGetObjectDetails when OBJECT_PATHFINDING_TYPE is requested.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CHANGE_JOINTS" Type="Integer" Value="256" Subsets="lsl,os-lsl">
    <DocumentationString >Permission to change joints.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_CHANGE_PERMISSIONS" Type="Integer" Value="512" Subsets="lsl,os-lsl">
    <DocumentationString >Permission to change asset permissions.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_RELEASE_OWNERSHIP" Type="Integer" Value="64" Subsets="lsl,os-lsl">
    <DocumentationString >Permission to release ownership.  The concept of public objects has been removed from SL</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PERMISSION_REMAP_CONTROLS" Type="Integer" Value="8" Subsets="lsl,os-lsl">
    <DocumentationString >permission to remap agent's controls.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_CAST_SHADOWS" Type="Integer" Value="24" Subsets="lsl,os-lsl">
    <DocumentationString>DEPRECATED. Takes 1 parameter, an integer, but has no effect when set and always returns 0 if used in llGetPrimitiveParams</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CONTROLS" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams to determine the controls shown for media</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CONTROLS_MINI" Type="Integer" Value="1" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_CONTROLS value meaning 'mini controls'</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_CONTROLS_STANDARD" Type="Integer" Value="0" Subsets="lsl,os-lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_CONTROLS value meaning 'standard controls'</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_HEIGHT_PIXELS" Type="Integer" Value="2048" Subsets="lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, the maximum width allowed in PRIM_MEDIA_HEIGHT_PIXELS</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_URL_LENGTH" Type="Integer" Value="1024" Subsets="lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, the maximum length of PRIM_MEDIA_CURRENT_URL or PRIM_MEDIA_HOME_URL</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_WHITELIST_COUNT" Type="Integer" Value="64" Subsets="lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, the maximum number of items allowed in PRIM_MEDIA_WHITELIST</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_WHITELIST_SIZE" Type="Integer" Value="1024" Subsets="lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, the maximum length, in bytes, of PRIM_MEDIA_WHITELIST</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_MAX_WIDTH_PIXELS" Type="Integer" Value="2048" Subsets="lsl">
    <DocumentationString>Used with ll{Get,Set}PrimMediaParams, the maximum width allowed in PRIM_MEDIA_WIDTH_PIXELS</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PRIM_MEDIA_PARAM_MAX" Type="Integer" Value="14" Subsets="lsl">
    <DocumentationString>The value of the largest media param</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PSYS_SRC_OBJ_REL_MASK" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString />
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_FUZZ_FACTOR" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Used with llPursue(). Selects a random destination near the PURSUIT_OFFSET. The valid fuzz factor range is from 0 to 1, where 1 is most random. This option requires a nonzero PURSUIT_OFFSET.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_GOAL_TOLERANCE" Type="Integer" Value="5" Subsets="lsl">
    <DocumentationString>Used with llPursue(). Defines approximately how close the character must be to the current goal to consider itself to be at the desired position. The valid range is from 0.25 to 10m.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_INTERCEPT" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Used with llPursue(). Define whether the character attempts to predict the target's future location.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PURSUIT_OFFSET" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Used with llPursue(). Go to a position offset from the target.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_EVADE_HIDDEN" Type="Integer" Value="7" Subsets="lsl">
    <DocumentationString>Triggered when an llEvade character thinks it has hidden from its pursuer.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_EVADE_SPOTTED" Type="Integer" Value="8" Subsets="lsl">
    <DocumentationString>Triggered when an llEvade character switches from hiding to running</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED" Type="Integer" Value="10" Subsets="lsl">
    <DocumentationString>Triggered when a character enters a region with dynamic pathfinding disabled.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_INVALID_GOAL" Type="Integer" Value="3" Subsets="lsl">
    <DocumentationString>Goal is not on the navigation-mesh and cannot be reached.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_INVALID_START" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Character cannot navigate from the current location - e.g., the character is off the navmesh or too high above it.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_NO_NAVMESH" Type="Integer" Value="9" Subsets="lsl">
    <DocumentationString>Triggered if no navmesh is available for the region.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_NO_VALID_DESTINATION" Type="Integer" Value="6" Subsets="lsl">
    <DocumentationString>There's no good place for the character to go - e.g., it is patrolling and all the patrol points are now unreachable.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_OTHER" Type="Integer" Value="1000000" Subsets="lsl">
    <DocumentationString>Unknown failure</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_PARCEL_UNREACHABLE" Type="Integer" Value="11" Subsets="lsl">
    <DocumentationString>Triggered when a character failed to enter a parcel because it is not allowed to enter, e.g. because the parcel is already full or because object entry was disabled after the navmesh was baked.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_TARGET_GONE" Type="Integer" Value="5" Subsets="lsl">
    <DocumentationString>Target (for llPursue or llEvade) can no longer be tracked - e.g., it left the region or is an avatar that is now more than about 30m outside the region.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_FAILURE_UNREACHABLE" Type="Integer" Value="4" Subsets="lsl">
    <DocumentationString>Goal is no longer reachable for some reason - e.g., an obstacle blocks the path.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_GOAL_REACHED" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString>Character has reached the goal and will stop or choose a new goal (if wandering).</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="PU_SLOWDOWN_DISTANCE_REACHED" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Character is near current goal.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="REQUIRE_LINE_OF_SIGHT" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString>Used with llPursue(). Define whether the character needs a physical line-of-sight to give chase. When enabled, the character will not pick a new target position while there is a something solid between the character and the target object/agent.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="RESTITUTION" Type="Integer" Value="4" Subsets="lsl,os-lsl">
    <DocumentationString>For use with llSetPhysicsMaterial() as a bitwise value in its material_bits parameter, to set the restitution.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TEXTURE_DEFAULT" Type="String" Value="89556747-24cb-43ed-920b-47caed15465f" Subsets="lsl,os-lsl">
    <DocumentationString>Alias for TEXTURE_PLYWOOD</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE_FAST" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString >Bit flag used with TRAVERSAL_TYPE in llCreateCharacter and llUpdateCharacter.  Controls the speed at which characters moves on terrain that is less than 100% walkable.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE_NONE" Type="Integer" Value="2" Subsets="lsl">
    <DocumentationString >Bit flag used with TRAVERSAL_TYPE in llCreateCharacter and llUpdateCharacter.  Controls the speed at which characters moves on terrain that is less than 100% walkable.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="TRAVERSAL_TYPE_SLOW" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString >Bit flag used with TRAVERSAL_TYPE in llCreateCharacter and llUpdateCharacter.  Controls the speed at which characters moves on terrain that is less than 100% walkable.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="VEHICLE_FLAG_NO_FLY_UP" Type="Integer" Value="1" Subsets="lsl">
    <DocumentationString >DEPRECATED name for VEHICLE_FLAG_NO_DEFLECTION_UP</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="WANDER_PAUSE_AT_WAYPOINTS" Type="Integer" Value="0" Subsets="lsl">
    <DocumentationString>Used with llWanderWithin(). Defines if characters should pause after reaching each wander waypoint.</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="ZERO_ROTATION" Type="Rotation" Value="0.0, 0.0, 0.0, 1.0" Subsets="lsl,os-lsl">
    <DocumentationString>&lt;0.0, 0.0, 0.0, 1.0&gt;</DocumentationString>
  </LibraryConstant>
  <LibraryConstant Name="NPC" Type="Integer" Value="32" Subsets="os-lsl">
    <DocumentationString >Used with llSensor and llAgentSensor to detect NPC characters in OpenSim.</DocumentationString>
  </LibraryConstant>
  
  <!-- requested feature 
  <LibraryConstant Name="PRIM_PHYSICS_MATERIAL" Type="Integer" Value="31" Subsets="os-lsl">
    <DocumentationString />
  </LibraryConstant>
  -->

</LSLLibraryData>